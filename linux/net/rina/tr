./ipcp-instances.h:        /* The length of the CEP-id field in the DTP PCI, in bytes */
./ipcp-instances.h:        /* The length of the Port-id field in the DTP PCI, in bytes */
./ipcp-instances.h:        /* The length of QoS-id field in the DTP PCI, in bytes */
./ipcp-instances.h:         * in delta-T
./ipcp-instances.h:/* Pre-declared, the implementation should define it properly */
./.pidm.o.cmd:cmd_net/rina/pidm.o := gcc -Wp,-MD,net/rina/.pidm.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(pidm)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_pidm.o net/rina/pidm.c
./.pidm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.pidm.o.cmd:  include/asm-generic/int-ll64.h \
./.pidm.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.pidm.o.cmd:  include/asm-generic/bitsperlong.h \
./.pidm.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.pidm.o.cmd:  include/linux/compiler-gcc.h \
./.pidm.o.cmd:  include/linux/compiler-gcc4.h \
./.pidm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.pidm.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.pidm.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.pidm.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.pidm.o.cmd:  include/asm-generic/ptrace.h \
./.pidm.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.pidm.o.cmd:  include/asm-generic/bitops/fls64.h \
./.pidm.o.cmd:  include/asm-generic/bitops/find.h \
./.pidm.o.cmd:  include/asm-generic/bitops/sched.h \
./.pidm.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.pidm.o.cmd:  include/asm-generic/bitops/le.h \
./.pidm.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.pidm.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.pidm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.pidm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.pidm.o.cmd:  include/asm-generic/bug.h \
./.pidm.o.cmd:  include/asm-generic/percpu.h \
./.pidm.o.cmd:  include/linux/percpu-defs.h \
./.pidm.o.cmd:  include/asm-generic/memory_model.h \
./.pidm.o.cmd:  include/asm-generic/getorder.h \
./.pidm.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.pidm.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.pidm.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.pidm.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.pidm.o.cmd:  include/asm-generic/ioctl.h \
./.pidm.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.pidm.o.cmd:  include/asm-generic/atomic-long.h \
./.pidm.o.cmd:  include/asm-generic/param.h \
./.pidm.o.cmd:  include/uapi/asm-generic/param.h \
./.pidm.o.cmd:  include/asm-generic/topology.h \
./.pidm.o.cmd:  include/asm-generic/early_ioremap.h \
./.pidm.o.cmd:  include/asm-generic/iomap.h \
./.pidm.o.cmd:  include/asm-generic/pci_iomap.h \
./.pidm.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.pidm.o.cmd:  include/asm-generic/kmap_types.h \
./.pidm.o.cmd:  include/asm-generic/fixmap.h \
./.pidm.o.cmd:  include/linux/pageblock-flags.h \
./.pidm.o.cmd:  include/linux/page-flags-layout.h \
./.pidm.o.cmd:  include/asm-generic/sections.h \
./default.c:#define RINA_PREFIX "personality-default"
./default.c:        if (!p->kipcm)
./default.c:        if (!kipcm_kfa(p->kipcm))
./default.c:        if (!p->nlset)
./default.c:        if (!is_personality_ok(data)) return -1;
./default.c:        return kipcm_ipcp_create(data->kipcm, name, id, type);
./default.c:        if (!is_personality_ok(data)) return -1;
./default.c:        return kipcm_ipcp_destroy(data->kipcm, id);
./default.c:        if (!is_personality_ok(data)) return -1;
./default.c:        return kipcm_sdu_write(data->kipcm, id, sdu);
./default.c:        if (!is_personality_ok(data)) return -1;
./default.c:        return kipcm_sdu_read(data->kipcm, id, sdu);
./default.c:        if (!is_personality_ok(data)) return -1;
./default.c:        return kipcm_allocate_port(data->kipcm, ipc_id, name);
./default.c:        if (!is_personality_ok(data)) return -1;
./default.c:        return kfa_flow_deallocate(kipcm_kfa(data->kipcm), port_id);
./default.c:        if (!is_personality_ok(data)) return -1;
./default.c:        return kipcm_mgmt_sdu_write(data->kipcm, id, sdu_wpi);
./default.c:        if (!is_personality_ok(data)) return -1;
./default.c:        return kipcm_mgmt_sdu_read(data->kipcm, id, sdu_wpi);
./default.c:                return -1;
./default.c:        if (tmp->kipcm) {
./default.c:                err = kipcm_destroy(tmp->kipcm);
./default.c:        if (tmp->nlset) {
./default.c:                err = rnl_set_destroy(tmp->nlset);
./default.c:                return -1;
./default.c:        data->nlset = rnl_set_create(id);
./default.c:        if (!data->nlset) {
./default.c:                        return -1;
./default.c:        data->kipcm = kipcm_create(parent, data->nlset);
./default.c:        if (!data->kipcm) {
./default.c:                        return -1;
./default.c:        default_kipcm = data->kipcm;
./default.c:                return -1;
./default.c:                return -1;
./default.c:                return -1;
./default.c:                return -1;
./default.c:                return -1;
./efcp-utils.c:#define RINA_PREFIX "efcp-utils"
./efcp-utils.c:        hash_init(tmp->table);
./efcp-utils.c:        hash_for_each_safe(map->table, bucket, tmp, entry, hlist) {
./efcp-utils.c:                hash_del(&entry->hlist);
./efcp-utils.c:                        destructor(entry->value);
./efcp-utils.c:        return hash_empty(map->table);
./efcp-utils.c:        head = &map->table[imap_hash(map->table, key)];
./efcp-utils.c:                if (entry->key == key)
./efcp-utils.c:        return entry->value;
./efcp-utils.c:                return -1;
./efcp-utils.c:        cur->value = value;
./efcp-utils.c:                return -1;
./efcp-utils.c:        tmp->key   = key;
./efcp-utils.c:        tmp->value = value;
./efcp-utils.c:        INIT_HLIST_NODE(&tmp->hlist);
./efcp-utils.c:        hash_add(map->table, &tmp->hlist, key);
./efcp-utils.c:                return -1;
./efcp-utils.c:        hash_del(&cur->hlist);
./.ipcp-instances.o.cmd:cmd_net/rina/ipcp-instances.o := gcc -Wp,-MD,net/rina/.ipcp-instances.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(ipcp_instances)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_ipcp-instances.o net/rina/ipcp-instances.c
./.ipcp-instances.o.cmd:source_net/rina/ipcp-instances.o := net/rina/ipcp-instances.c
./.ipcp-instances.o.cmd:deps_net/rina/ipcp-instances.o := \
./.ipcp-instances.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.ipcp-instances.o.cmd:  include/asm-generic/int-ll64.h \
./.ipcp-instances.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.ipcp-instances.o.cmd:  include/asm-generic/bitsperlong.h \
./.ipcp-instances.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.ipcp-instances.o.cmd:  include/linux/compiler-gcc.h \
./.ipcp-instances.o.cmd:  include/linux/compiler-gcc4.h \
./.ipcp-instances.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.ipcp-instances.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.ipcp-instances.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.ipcp-instances.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.ipcp-instances.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.ipcp-instances.o.cmd:  include/asm-generic/ptrace.h \
./.ipcp-instances.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.ipcp-instances.o.cmd:  include/asm-generic/bitops/fls64.h \
./.ipcp-instances.o.cmd:  include/asm-generic/bitops/find.h \
./.ipcp-instances.o.cmd:  include/asm-generic/bitops/sched.h \
./.ipcp-instances.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.ipcp-instances.o.cmd:  include/asm-generic/bitops/le.h \
./.ipcp-instances.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.ipcp-instances.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.ipcp-instances.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.ipcp-instances.o.cmd:  include/asm-generic/bug.h \
./.ipcp-instances.o.cmd:  include/asm-generic/percpu.h \
./.ipcp-instances.o.cmd:  include/linux/percpu-defs.h \
./.ipcp-instances.o.cmd:  include/asm-generic/memory_model.h \
./.ipcp-instances.o.cmd:  include/asm-generic/getorder.h \
./.ipcp-instances.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.ipcp-instances.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.ipcp-instances.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.ipcp-instances.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.ipcp-instances.o.cmd:  include/asm-generic/ioctl.h \
./.ipcp-instances.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.ipcp-instances.o.cmd:  include/asm-generic/atomic-long.h \
./.ipcp-instances.o.cmd:  include/asm-generic/param.h \
./.ipcp-instances.o.cmd:  include/uapi/asm-generic/param.h \
./.ipcp-instances.o.cmd:  include/asm-generic/topology.h \
./.ipcp-instances.o.cmd:  include/asm-generic/early_ioremap.h \
./.ipcp-instances.o.cmd:  include/asm-generic/iomap.h \
./.ipcp-instances.o.cmd:  include/asm-generic/pci_iomap.h \
./.ipcp-instances.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.ipcp-instances.o.cmd:  include/asm-generic/kmap_types.h \
./.ipcp-instances.o.cmd:  include/asm-generic/fixmap.h \
./.ipcp-instances.o.cmd:  include/linux/pageblock-flags.h \
./.ipcp-instances.o.cmd:  include/linux/page-flags-layout.h \
./.ipcp-instances.o.cmd:  include/asm-generic/sections.h \
./.ipcp-instances.o.cmd:  net/rina/ipcp-instances.h \
./.ipcp-instances.o.cmd:net/rina/ipcp-instances.o: $(deps_net/rina/ipcp-instances.o)
./.ipcp-instances.o.cmd:$(deps_net/rina/ipcp-instances.o):
./.dtp.o.cmd:cmd_net/rina/dtp.o := gcc -Wp,-MD,net/rina/.dtp.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(dtp)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_dtp.o net/rina/dtp.c
./.dtp.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.dtp.o.cmd:  include/linux/compiler-gcc.h \
./.dtp.o.cmd:  include/linux/compiler-gcc4.h \
./.dtp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.dtp.o.cmd:  include/asm-generic/int-ll64.h \
./.dtp.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.dtp.o.cmd:  include/asm-generic/bitsperlong.h \
./.dtp.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.dtp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.dtp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.dtp.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.dtp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.dtp.o.cmd:  include/asm-generic/ptrace.h \
./.dtp.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.dtp.o.cmd:  include/asm-generic/bitops/fls64.h \
./.dtp.o.cmd:  include/asm-generic/bitops/find.h \
./.dtp.o.cmd:  include/asm-generic/bitops/sched.h \
./.dtp.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.dtp.o.cmd:  include/asm-generic/bitops/le.h \
./.dtp.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.dtp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.dtp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.dtp.o.cmd:  include/asm-generic/percpu.h \
./.dtp.o.cmd:  include/linux/percpu-defs.h \
./.dtp.o.cmd:  include/asm-generic/memory_model.h \
./.dtp.o.cmd:  include/asm-generic/getorder.h \
./.dtp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.dtp.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.dtp.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.dtp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.dtp.o.cmd:  include/asm-generic/ioctl.h \
./.dtp.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.dtp.o.cmd:  include/asm-generic/bug.h \
./.dtp.o.cmd:  include/asm-generic/atomic-long.h \
./.dtp.o.cmd:  include/asm-generic/param.h \
./.dtp.o.cmd:  include/uapi/asm-generic/param.h \
./.dtp.o.cmd:  include/linux/pageblock-flags.h \
./.dtp.o.cmd:  include/linux/page-flags-layout.h \
./.dtp.o.cmd:  include/asm-generic/topology.h \
./.dtp.o.cmd:  include/asm-generic/early_ioremap.h \
./.dtp.o.cmd:  include/asm-generic/iomap.h \
./.dtp.o.cmd:  include/asm-generic/pci_iomap.h \
./.dtp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.dtp.o.cmd:  include/asm-generic/kmap_types.h \
./.dtp.o.cmd:  include/asm-generic/fixmap.h \
./.dtp.o.cmd:  include/asm-generic/sections.h \
./.dtp.o.cmd:  net/rina/ipcp-instances.h \
./.dtp.o.cmd:  net/rina/ipcp-factories.h \
./.dtp.o.cmd:  net/rina/dt-utils.h \
./.dtp.o.cmd:  net/rina/dtcp-utils.h \
./ipcp-utils.h:#include "ipcp-instances.h"
./kfa-utils.c:#define RINA_PREFIX "kfa-utils"
./kfa-utils.c:#include "kfa-utils.h"
./kfa-utils.c:        hash_init(tmp->table);
./kfa-utils.c:        hash_for_each_safe(map->table, bucket, tmp, entry, hlist) {
./kfa-utils.c:                hash_del(&entry->hlist);
./kfa-utils.c:        return hash_empty(map->table);
./kfa-utils.c:        head = &map->table[pmap_hash(map->table, key)];
./kfa-utils.c:                if (entry->key == key)
./kfa-utils.c:        return entry->value_flow;
./kfa-utils.c:                return -1;
./kfa-utils.c:        cur->value_flow = value;
./kfa-utils.c:                return -1;
./kfa-utils.c:        tmp->key        = key;
./kfa-utils.c:        tmp->value_flow = value_flow;
./kfa-utils.c:        tmp->value_id   = value_id;
./kfa-utils.c:        INIT_HLIST_NODE(&tmp->hlist);
./kfa-utils.c:        hash_add(map->table, &tmp->hlist, key);
./kfa-utils.c:                return -1;
./kfa-utils.c:        hash_del(&cur->hlist);
./kfa-utils.c:        hash_for_each_safe(map->table, bucket, tmp, entry, hlist) {
./kfa-utils.c:                if (entry->value_id == id) {
./kfa-utils.c:                        hash_del(&entry->hlist);
Binary file ./personality.o matches
./.debug.o.cmd:cmd_net/rina/debug.o := gcc -Wp,-MD,net/rina/.debug.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(debug)"  -D"KBUILD_MODNAME=KBUILD_STR(debug)" -c -o net/rina/.tmp_debug.o net/rina/debug.c
./.debug.o.cmd:  include/linux/compiler-gcc.h \
./.debug.o.cmd:  include/linux/compiler-gcc4.h \
./.debug.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.debug.o.cmd:  include/asm-generic/int-ll64.h \
./.debug.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.debug.o.cmd:  include/asm-generic/bitsperlong.h \
./.debug.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.debug.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.debug.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.debug.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.debug.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.debug.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.debug.o.cmd:  include/asm-generic/ptrace.h \
./.debug.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.debug.o.cmd:  include/asm-generic/bitops/fls64.h \
./.debug.o.cmd:  include/asm-generic/bitops/find.h \
./.debug.o.cmd:  include/asm-generic/bitops/sched.h \
./.debug.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.debug.o.cmd:  include/asm-generic/bitops/le.h \
./.debug.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.debug.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.debug.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.debug.o.cmd:  include/asm-generic/percpu.h \
./.debug.o.cmd:  include/linux/percpu-defs.h \
./.debug.o.cmd:  include/asm-generic/bug.h \
./.debug.o.cmd:  include/asm-generic/memory_model.h \
./.debug.o.cmd:  include/asm-generic/getorder.h \
./.debug.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.debug.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.debug.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.debug.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.debug.o.cmd:  include/asm-generic/ioctl.h \
./.debug.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.debug.o.cmd:  include/asm-generic/atomic-long.h \
./.debug.o.cmd:  include/linux/radix-tree.h \
./.debug.o.cmd:  include/linux/percpu-rwsem.h \
./.debug.o.cmd:  include/asm-generic/param.h \
./.debug.o.cmd:  include/uapi/asm-generic/param.h \
./.debug.o.cmd:  include/asm-generic/topology.h \
./.debug.o.cmd:  include/asm-generic/early_ioremap.h \
./.debug.o.cmd:  include/asm-generic/iomap.h \
./.debug.o.cmd:  include/asm-generic/pci_iomap.h \
./.debug.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.debug.o.cmd:  include/asm-generic/kmap_types.h \
./.debug.o.cmd:  include/asm-generic/fixmap.h \
./.debug.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./.debug.o.cmd:  include/linux/pageblock-flags.h \
./.debug.o.cmd:  include/linux/page-flags-layout.h \
./.debug.o.cmd:  include/asm-generic/sections.h \
Binary file ./built-in.o matches
./_:#define RINA_PREFIX "dt-utils"
./_:#include "dt-utils.h"
./_:#include "dtcp-utils.h"
./_:        tmp->q = rqueue_create();
./_:        if (!tmp->q) {
./_:        spin_lock_init(&tmp->lock);
./_:        tmp->q = rqueue_create_ni();
./_:        if (!tmp->q) {
./_:        spin_lock_init(&tmp->lock);
./_:                return -1;
./_:        ASSERT(queue->q);
./_:        if (rqueue_destroy(queue->q,
./_:                return -1;
./_:                return -1;
./_:                return -1;
./_:        spin_lock(&queue->lock);
./_:        if (rqueue_tail_push_ni(queue->q, pdu)) {
./_:                spin_unlock(&queue->lock);
./_:                return -1;
./_:        spin_unlock(&queue->lock);
./_:        spin_lock(&queue->lock);
./_:        tmp = (struct pdu *) rqueue_head_pop(queue->q);
./_:        spin_unlock(&queue->lock);
./_:        spin_lock(&queue->lock);
./_:        ret = rqueue_is_empty(queue->q);
./_:        spin_unlock(&queue->lock);
./_:                return -1;
./_:        spin_lock(&queue->lock);
./_:        tmp = rqueue_length(queue->q);
./_:        spin_unlock(&queue->lock);
./_:        tmp->pdu        = pdu;
./_:        tmp->time_stamp = jiffies;
./_:        tmp->retries    = 1;
./_:        INIT_LIST_HEAD(&tmp->next);
./_:        INIT_LIST_HEAD(&tmp->head);
./_:        INIT_LIST_HEAD(&tmp->head);
./_:                return -1;
./_:        pdu_destroy(entry->pdu);
./_:        list_for_each_entry_safe(cur, n, &q->head, next) {
./_:                if (pci_sequence_number_get(pdu_pci_get_rw((cur->pdu))) <=
./_:                        list_del(&cur->next);
./_:        list_for_each_entry_safe_reverse(cur, p, &q->head, next) {
./_:                if (pci_sequence_number_get(pdu_pci_get_rw((cur->pdu))) >
./_:                        cur->retries++;
./_:                        if (cur->retries >= data_rtx_max) {
./_:                        tmp = pdu_dup_ni(cur->pdu);
./_:                return -1;
./_:        list_for_each_entry_safe(cur, n, &q->head, next) {
./_:                return -1;
./_:                return -1;
./_:                return -1;
./_:        if (list_empty(&q->head)) {
./_:                list_add(&tmp->next, &q->head);
./_:        last = list_last_entry(&q->head, struct rtxq_entry, next);
./_:                return -1;
./_:        pci  = pdu_pci_get_ro(last->pdu);
./_:                return -1;
./_:                list_add_tail(&tmp->next, &q->head);
./_:        list_for_each_entry(cur, &q->head, next) {
./_:                pci = pdu_pci_get_ro(cur->pdu);
./_:                        return -1;
./_:                        list_add(&tmp->next, &cur->next);
./_:                return -1;
./_:        list_for_each_entry_safe(cur, n, &q->head, next) {
./_:                pci = pdu_pci_get_ro(cur->pdu);
./_:                list_del(&cur->next);
./_:        list_for_each_entry_safe(cur, n, &q->head, next) {
./_:                if (cur->time_stamp < tr) {
./_:                        cur->retries++;
./_:                        if (cur->retries >= data_rtx_max) {
./_:                                     pci_destination(pdu_pci_get_ro(cur->pdu)),
./_:                                     pci_qos_id(pdu_pci_get_ro(cur->pdu)),
./_:                                     cur->pdu)) {
./_:        dtcp_cfg = dtcp_config_get(dt_dtcp(q->parent));
./_:        if (rtxqueue_rtx(q->queue,
./_:                         dt_sv_tr(q->parent),
./_:                         q->rmt,
./_:        rtimer_restart(q->r_timer, dt_sv_tr(q->parent));
./_:                return -1;
./_:        if (q->r_timer && rtimer_destroy(q->r_timer))
./_:                LOG_ERR("Problems destroying timer for RTXQ %pK", q->r_timer);
./_:        if (q->queue  && rtxqueue_destroy(q->queue))
./_:                LOG_ERR("Problems destroying queue for RTXQ %pK", q->queue);
./_:        tmp->r_timer = rtimer_create(Rtimer_handler, tmp);
./_:        if (!tmp->r_timer) {
./_:        tmp->queue = rtxqueue_create();
./_:        if (!tmp->queue) {
./_:        tmp->parent = dt;
./_:        tmp->rmt    = rmt;
./_:        spin_lock_init(&tmp->lock);
./_:        tmp->r_timer = rtimer_create_ni(Rtimer_handler, tmp);
./_:        if (!tmp->r_timer) {
./_:        tmp->queue = rtxqueue_create_ni();
./_:        if (!tmp->queue) {
./_:        tmp->parent = dt;
./_:        tmp->rmt    = rmt;
./_:        spin_lock_init(&tmp->lock);
./_:                return -1;
./_:        spin_lock(&q->lock);
./_:        if (!rtimer_is_pending(q->r_timer))
./_:                rtimer_restart(q->r_timer, dt_sv_tr(q->parent));
./_:        rtxqueue_push(q->queue, pdu);
./_:        spin_unlock(&q->lock);
./_:                return -1;
./_:        spin_lock(&q->lock);
./_:        rtimer_stop(q->r_timer);
./_:        rtxqueue_drop(q->queue, from, to);
./_:        spin_unlock(&q->lock);
./_:                return -1;
./_:        spin_lock(&q->lock);
./_:        entries_ack(q->queue, seq_num);
./_:        if (rtimer_restart(q->r_timer, tr)) {
./_:                spin_unlock(&q->lock);
./_:                return -1;
./_:        spin_unlock(&q->lock);
./_:                return -1;
./_:        dtcp_cfg = dtcp_config_get(dt_dtcp(q->parent));
./_:                return -1;
./_:        spin_lock(&q->lock);
./_:        entries_nack(q->queue,
./_:                     q->rmt,
./_:        if (rtimer_restart(q->r_timer, tr)) {
./_:                spin_unlock(&q->lock);
./_:                return -1;
./_:        spin_unlock(&q->lock);
./_:                return -1;
./_:        return -1;
./_:        INIT_LIST_HEAD(&tmp->next);
./_:        tmp->pdu = pdu;
./_:        tmp->time_stamp = jiffies;
./_:        pdu_destroy(seq_entry->pdu);
./_:                return -1;
./_:        list_add(&q->head, &tmp->next);
./_:        INIT_LIST_HEAD(&tmp->head);
./_:        list_for_each_entry_safe(cur, n, &seq_queue->head, next) {
./_:                list_del(&cur->next);
./_:                return -1;
./_:        if (seqQ->queue) seq_queue_destroy(seqQ->queue);
./_:        tmp->queue = seq_queue_create();
./_:        if (!tmp->queue) {
./_:        spin_lock_init(&tmp->lock);
./_:                return -1;
./_:                return -1;
./_:        spin_lock(&seqQ->lock);
./_:        if (seq_queue_push_ni(seqQ->queue, pdu)) {
./_:                spin_unlock(&seqQ->lock);
./_:                return -1;
./_:        spin_unlock(&seqQ->lock);
./pdu.c:{ return (p && pci_is_ok(p->pci) && buffer_is_ok(p->buffer)) ? true : false; }
./pdu.c:        tmp->pci    = NULL;
./pdu.c:        tmp->buffer = NULL;
./pdu.c:        tmp_pdu->pci    = pci_create_from_gfp(flags, ptr);
./pdu.c:        tmp_pdu->buffer = buffer_create_from_gfp(flags,
./pdu.c:                                                 (buffer_length(sdu->buffer) -
./pdu.c:/* FIXME: This code must be completely re-written */
./pdu.c:        tmp->pci    = pci_dup_gfp(flags, pdu->pci);
./pdu.c:        tmp->buffer = buffer_dup_gfp(flags, pdu->buffer);
./pdu.c:        return pdu->buffer;
./pdu.c:        return pdu->buffer;
./pdu.c:                return -1;
./pdu.c:        pdu->buffer = NULL;
./pdu.c:                return -1;
./pdu.c:        if (pdu->buffer) {
./pdu.c:                buffer_destroy(pdu->buffer);
./pdu.c:        pdu->buffer = buffer;
./pdu.c:        return pdu->pci;
./pdu.c:        return pdu->pci ? true : false;
./pdu.c:        return pdu->pci;
./pdu.c:                return -1;
./pdu.c:                return -1;
./pdu.c:        pdu->pci = pci;
./pdu.c:                return -1;
./pdu.c:        if (p->pci)    pci_destroy(p->pci);
./pdu.c:        if (p->buffer) buffer_destroy(p->buffer);
./.kipcm.o.cmd:cmd_net/rina/kipcm.o := gcc -Wp,-MD,net/rina/.kipcm.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(kipcm)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_kipcm.o net/rina/kipcm.c
./.kipcm.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.kipcm.o.cmd:  include/linux/compiler-gcc.h \
./.kipcm.o.cmd:  include/linux/compiler-gcc4.h \
./.kipcm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.kipcm.o.cmd:  include/asm-generic/int-ll64.h \
./.kipcm.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.kipcm.o.cmd:  include/asm-generic/bitsperlong.h \
./.kipcm.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.kipcm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.kipcm.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.kipcm.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.kipcm.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.kipcm.o.cmd:  include/asm-generic/ptrace.h \
./.kipcm.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.kipcm.o.cmd:  include/asm-generic/bitops/fls64.h \
./.kipcm.o.cmd:  include/asm-generic/bitops/find.h \
./.kipcm.o.cmd:  include/asm-generic/bitops/sched.h \
./.kipcm.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.kipcm.o.cmd:  include/asm-generic/bitops/le.h \
./.kipcm.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.kipcm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.kipcm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.kipcm.o.cmd:  include/asm-generic/percpu.h \
./.kipcm.o.cmd:  include/linux/percpu-defs.h \
./.kipcm.o.cmd:  include/asm-generic/memory_model.h \
./.kipcm.o.cmd:  include/asm-generic/getorder.h \
./.kipcm.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.kipcm.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.kipcm.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.kipcm.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.kipcm.o.cmd:  include/asm-generic/ioctl.h \
./.kipcm.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.kipcm.o.cmd:  include/asm-generic/bug.h \
./.kipcm.o.cmd:  include/asm-generic/atomic-long.h \
./.kipcm.o.cmd:  include/asm-generic/param.h \
./.kipcm.o.cmd:  include/uapi/asm-generic/param.h \
./.kipcm.o.cmd:  include/asm-generic/topology.h \
./.kipcm.o.cmd:  include/asm-generic/early_ioremap.h \
./.kipcm.o.cmd:  include/asm-generic/iomap.h \
./.kipcm.o.cmd:  include/asm-generic/pci_iomap.h \
./.kipcm.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.kipcm.o.cmd:  include/asm-generic/kmap_types.h \
./.kipcm.o.cmd:  include/asm-generic/fixmap.h \
./.kipcm.o.cmd:  include/linux/pageblock-flags.h \
./.kipcm.o.cmd:  include/linux/page-flags-layout.h \
./.kipcm.o.cmd:  include/asm-generic/sections.h \
./.kipcm.o.cmd:  net/rina/ipcp-instances.h \
./.kipcm.o.cmd:  net/rina/ipcp-factories.h \
./.kipcm.o.cmd:  include/linux/page-debug-flags.h \
./.kipcm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./.kipcm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./.kipcm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./.kipcm.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./.kipcm.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./.kipcm.o.cmd:  include/asm-generic/pgtable.h \
./.kipcm.o.cmd:  include/linux/page-flags.h \
./.kipcm.o.cmd:  include/asm-generic/scatterlist.h \
./.kipcm.o.cmd:  include/linux/dma-mapping.h \
./.kipcm.o.cmd:  include/linux/dma-attrs.h \
./.kipcm.o.cmd:  include/linux/dma-direction.h \
./.kipcm.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./.kipcm.o.cmd:  include/linux/dma-debug.h \
./.kipcm.o.cmd:  include/asm-generic/dma-coherent.h \
./.kipcm.o.cmd:  include/linux/dma-contiguous.h \
./.kipcm.o.cmd:  include/asm-generic/dma-mapping-common.h \
./.kipcm.o.cmd:  include/asm-generic/cputime.h \
./.kipcm.o.cmd:  include/asm-generic/cputime_jiffies.h \
./.kipcm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./.kipcm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./.kipcm.o.cmd:  include/asm-generic/siginfo.h \
./.kipcm.o.cmd:  include/uapi/asm-generic/siginfo.h \
./.kipcm.o.cmd:  include/asm-generic/resource.h \
./.kipcm.o.cmd:  include/uapi/asm-generic/resource.h \
./.kipcm.o.cmd:  include/linux/radix-tree.h \
./.kipcm.o.cmd:  include/linux/percpu-rwsem.h \
./.kipcm.o.cmd:  include/asm-generic/delay.h \
./.kipcm.o.cmd:  include/linux/percpu-refcount.h \
./.kipcm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./.kipcm.o.cmd:  net/rina/ipcp-utils.h \
./.kipcm.o.cmd:  net/rina/kipcm-utils.h \
./.kipcm.o.cmd:  net/rina/rnl-utils.h \
./.kipcm.o.cmd:  net/rina/kfa-utils.h \
./.kipcm.o.cmd:  net/rina/efcp-utils.h \
Binary file ./dt.o matches
Binary file ./ipcp-utils.o matches
./ipcp-factories.c:#define RINA_PREFIX "ipcp-factories"
./ipcp-factories.c:#include "ipcp-factories.h"
./ipcp-factories.c:        return (ops && ops->create && ops->destroy && ops->init && ops->fini) ?
./ipcp-factories.c:        temp->set = kset_create_and_add("ipcp-factories", NULL, parent);
./ipcp-factories.c:        if (!temp->set) {
./ipcp-factories.c:        ASSERT(temp->set != NULL);
./ipcp-factories.c:                return -1;
./ipcp-factories.c:        ASSERT(list_empty(&factories->set->list));
./ipcp-factories.c:        kset_unregister(factories->set);
./ipcp-factories.c:        if (!factories || !factories->set || !string_is_ok(name))
./ipcp-factories.c:        k = kset_find_obj(factories->set, name);
./ipcp-factories.c:        factory->data      = data;
./ipcp-factories.c:        factory->ops       = ops;
./ipcp-factories.c:        factory->kobj.kset = factories->set;
./ipcp-factories.c:        if (kobject_init_and_add(&factory->kobj, &ipcp_factory_ktype, NULL,
./ipcp-factories.c:                kobject_put(&factory->kobj);
./ipcp-factories.c:        if (factory->ops->init(factory->data)) {
./ipcp-factories.c:                kobject_put(&factory->kobj);
./ipcp-factories.c:                 kobject_name(&factory->kobj));
./ipcp-factories.c:                return -1;
./ipcp-factories.c:                return -1;
./ipcp-factories.c:        name = kobject_name(&factory->kobj);
./ipcp-factories.c:                return -1;
./ipcp-factories.c:        if (tmp->ops->fini(factory->data)) {
./ipcp-factories.c:        kobject_del(&factory->kobj);
./ipcp-factories.c:        kobject_put(&factory->kobj);
./.rnl.o.cmd:cmd_net/rina/rnl.o := gcc -Wp,-MD,net/rina/.rnl.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rnl)"  -D"KBUILD_MODNAME=KBUILD_STR(rnl)" -c -o net/rina/.tmp_rnl.o net/rina/rnl.c
./.rnl.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.rnl.o.cmd:  include/linux/compiler-gcc.h \
./.rnl.o.cmd:  include/linux/compiler-gcc4.h \
./.rnl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.rnl.o.cmd:  include/asm-generic/int-ll64.h \
./.rnl.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.rnl.o.cmd:  include/asm-generic/bitsperlong.h \
./.rnl.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.rnl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.rnl.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.rnl.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.rnl.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.rnl.o.cmd:  include/asm-generic/ptrace.h \
./.rnl.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.rnl.o.cmd:  include/asm-generic/bitops/fls64.h \
./.rnl.o.cmd:  include/asm-generic/bitops/find.h \
./.rnl.o.cmd:  include/asm-generic/bitops/sched.h \
./.rnl.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.rnl.o.cmd:  include/asm-generic/bitops/le.h \
./.rnl.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.rnl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.rnl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.rnl.o.cmd:  include/asm-generic/percpu.h \
./.rnl.o.cmd:  include/linux/percpu-defs.h \
./.rnl.o.cmd:  include/asm-generic/memory_model.h \
./.rnl.o.cmd:  include/asm-generic/getorder.h \
./.rnl.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.rnl.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.rnl.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.rnl.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.rnl.o.cmd:  include/asm-generic/ioctl.h \
./.rnl.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.rnl.o.cmd:  include/asm-generic/bug.h \
./.rnl.o.cmd:  include/asm-generic/atomic-long.h \
./.rnl.o.cmd:  include/asm-generic/param.h \
./.rnl.o.cmd:  include/uapi/asm-generic/param.h \
./.rnl.o.cmd:  include/linux/pageblock-flags.h \
./.rnl.o.cmd:  include/linux/page-flags-layout.h \
./.rnl.o.cmd:  include/asm-generic/topology.h \
./.rnl.o.cmd:  include/asm-generic/early_ioremap.h \
./.rnl.o.cmd:  include/asm-generic/iomap.h \
./.rnl.o.cmd:  include/asm-generic/pci_iomap.h \
./.rnl.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.rnl.o.cmd:  include/asm-generic/kmap_types.h \
./.rnl.o.cmd:  include/asm-generic/fixmap.h \
./.rnl.o.cmd:  include/asm-generic/sections.h \
./.rnl.o.cmd:  include/linux/page-debug-flags.h \
./.rnl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./.rnl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./.rnl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./.rnl.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./.rnl.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./.rnl.o.cmd:  include/asm-generic/pgtable.h \
./.rnl.o.cmd:  include/linux/page-flags.h \
./.rnl.o.cmd:  include/asm-generic/scatterlist.h \
./.rnl.o.cmd:  include/linux/dma-mapping.h \
./.rnl.o.cmd:  include/linux/dma-attrs.h \
./.rnl.o.cmd:  include/linux/dma-direction.h \
./.rnl.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./.rnl.o.cmd:  include/linux/dma-debug.h \
./.rnl.o.cmd:  include/asm-generic/dma-coherent.h \
./.rnl.o.cmd:  include/linux/dma-contiguous.h \
./.rnl.o.cmd:  include/asm-generic/dma-mapping-common.h \
./.rnl.o.cmd:  include/asm-generic/cputime.h \
./.rnl.o.cmd:  include/asm-generic/cputime_jiffies.h \
./.rnl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./.rnl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./.rnl.o.cmd:  include/asm-generic/siginfo.h \
./.rnl.o.cmd:  include/uapi/asm-generic/siginfo.h \
./.rnl.o.cmd:  include/asm-generic/resource.h \
./.rnl.o.cmd:  include/uapi/asm-generic/resource.h \
./.rnl.o.cmd:  include/linux/radix-tree.h \
./.rnl.o.cmd:  include/linux/percpu-rwsem.h \
./.rnl.o.cmd:  include/asm-generic/delay.h \
./.rnl.o.cmd:  include/linux/percpu-refcount.h \
./.rnl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./.rnl.o.cmd:  net/rina/ipcp-instances.h \
./.rnl.o.cmd:  net/rina/rnl-utils.h \
./.rnl.o.cmd:  net/rina/rnl-workarounds.h \
./.dt.o.cmd:cmd_net/rina/dt.o := gcc -Wp,-MD,net/rina/.dt.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(dt)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_dt.o net/rina/dt.c
./.dt.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.dt.o.cmd:  include/linux/compiler-gcc.h \
./.dt.o.cmd:  include/linux/compiler-gcc4.h \
./.dt.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.dt.o.cmd:  include/asm-generic/int-ll64.h \
./.dt.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.dt.o.cmd:  include/asm-generic/bitsperlong.h \
./.dt.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.dt.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.dt.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.dt.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.dt.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.dt.o.cmd:  include/asm-generic/ptrace.h \
./.dt.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.dt.o.cmd:  include/asm-generic/bitops/fls64.h \
./.dt.o.cmd:  include/asm-generic/bitops/find.h \
./.dt.o.cmd:  include/asm-generic/bitops/sched.h \
./.dt.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.dt.o.cmd:  include/asm-generic/bitops/le.h \
./.dt.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.dt.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.dt.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.dt.o.cmd:  include/asm-generic/percpu.h \
./.dt.o.cmd:  include/linux/percpu-defs.h \
./.dt.o.cmd:  include/asm-generic/memory_model.h \
./.dt.o.cmd:  include/asm-generic/getorder.h \
./.dt.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.dt.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.dt.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.dt.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.dt.o.cmd:  include/asm-generic/ioctl.h \
./.dt.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.dt.o.cmd:  include/asm-generic/bug.h \
./.dt.o.cmd:  include/asm-generic/atomic-long.h \
./.dt.o.cmd:  include/asm-generic/param.h \
./.dt.o.cmd:  include/uapi/asm-generic/param.h \
./.dt.o.cmd:  include/linux/pageblock-flags.h \
./.dt.o.cmd:  include/linux/page-flags-layout.h \
./.dt.o.cmd:  include/asm-generic/topology.h \
./.dt.o.cmd:  include/asm-generic/early_ioremap.h \
./.dt.o.cmd:  include/asm-generic/iomap.h \
./.dt.o.cmd:  include/asm-generic/pci_iomap.h \
./.dt.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.dt.o.cmd:  include/asm-generic/kmap_types.h \
./.dt.o.cmd:  include/asm-generic/fixmap.h \
./.dt.o.cmd:  include/asm-generic/sections.h \
./.dt.o.cmd:  net/rina/dt-utils.h \
./.dt.o.cmd:  net/rina/ipcp-instances.h \
./.dt.o.cmd:  net/rina/ipcp-factories.h \
./connection.c:#include "dtcp-utils.h"
./connection.c:        tmp->dtcp_cfg = dtcp_config_create();
./connection.c:        if (!tmp->dtcp_cfg) {
./connection.c:        tmp->initial_sequence_number = policy_create();
./connection.c:        if (!tmp->initial_sequence_number){
./connection.c:                dtcp_config_destroy(tmp->dtcp_cfg);
./connection.c:                return -1;
./connection.c:        if (cp_params->dtcp_cfg)
./connection.c:                if (dtcp_config_destroy(cp_params->dtcp_cfg))
./connection.c:                        retval = -1;
./connection.c:        if (cp_params->initial_sequence_number)
./connection.c:                if (policy_destroy(cp_params->initial_sequence_number))
./connection.c:                        retval = -1;
./connection.c:                return -1;
./connection.c:        if (conn->policies_params)
./connection.c:                if (conn_policies_destroy(conn->policies_params))
./connection.c:                        return -1;
./.built-in.o.cmd:cmd_net/rina/built-in.o :=  ld -m elf_i386   -r -o net/rina/built-in.o net/rina/utils.o net/rina/debug.o net/rina/rds/built-in.o net/rina/core.o net/rina/personality.o net/rina/rnl-utils.o net/rina/rnl-workarounds.o net/rina/rnl.o net/rina/buffer.o net/rina/qos.o net/rina/pci.o net/rina/pdu.o net/rina/sdu.o net/rina/du.o net/rina/ipcp-utils.o net/rina/connection.o net/rina/common.o net/rina/policies.o net/rina/dtcp-utils.o net/rina/syscalls.o net/rina/ipcps/built-in.o net/rina/rinarp/built-in.o 
Binary file ./kfa.o matches
./kipcm.h:#include "ipcp-instances.h"
./kipcm.h:#include "ipcp-factories.h"
./kipcm.h: *       (shims as well the normal-ipc) are allowed to store the kfa instance
./.kfa.o.cmd:cmd_net/rina/kfa.o := gcc -Wp,-MD,net/rina/.kfa.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(kfa)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_kfa.o net/rina/kfa.c
./.kfa.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.kfa.o.cmd:  include/linux/compiler-gcc.h \
./.kfa.o.cmd:  include/linux/compiler-gcc4.h \
./.kfa.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.kfa.o.cmd:  include/asm-generic/int-ll64.h \
./.kfa.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.kfa.o.cmd:  include/asm-generic/bitsperlong.h \
./.kfa.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.kfa.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.kfa.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.kfa.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.kfa.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.kfa.o.cmd:  include/asm-generic/ptrace.h \
./.kfa.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.kfa.o.cmd:  include/asm-generic/bitops/fls64.h \
./.kfa.o.cmd:  include/asm-generic/bitops/find.h \
./.kfa.o.cmd:  include/asm-generic/bitops/sched.h \
./.kfa.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.kfa.o.cmd:  include/asm-generic/bitops/le.h \
./.kfa.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.kfa.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.kfa.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.kfa.o.cmd:  include/asm-generic/percpu.h \
./.kfa.o.cmd:  include/linux/percpu-defs.h \
./.kfa.o.cmd:  include/asm-generic/bug.h \
./.kfa.o.cmd:  include/asm-generic/memory_model.h \
./.kfa.o.cmd:  include/asm-generic/getorder.h \
./.kfa.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.kfa.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.kfa.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.kfa.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.kfa.o.cmd:  include/asm-generic/ioctl.h \
./.kfa.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.kfa.o.cmd:  include/asm-generic/atomic-long.h \
./.kfa.o.cmd:  include/linux/pageblock-flags.h \
./.kfa.o.cmd:  include/linux/page-flags-layout.h \
./.kfa.o.cmd:  include/asm-generic/param.h \
./.kfa.o.cmd:  include/uapi/asm-generic/param.h \
./.kfa.o.cmd:  include/asm-generic/topology.h \
./.kfa.o.cmd:  include/asm-generic/early_ioremap.h \
./.kfa.o.cmd:  include/asm-generic/iomap.h \
./.kfa.o.cmd:  include/asm-generic/pci_iomap.h \
./.kfa.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.kfa.o.cmd:  include/asm-generic/kmap_types.h \
./.kfa.o.cmd:  include/asm-generic/fixmap.h \
./.kfa.o.cmd:  include/linux/page-debug-flags.h \
./.kfa.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./.kfa.o.cmd:  include/asm-generic/pgtable.h \
./.kfa.o.cmd:  include/linux/page-flags.h \
./.kfa.o.cmd:  include/asm-generic/scatterlist.h \
./.kfa.o.cmd:  include/asm-generic/cputime.h \
./.kfa.o.cmd:  include/asm-generic/cputime_jiffies.h \
./.kfa.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./.kfa.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./.kfa.o.cmd:  include/asm-generic/siginfo.h \
./.kfa.o.cmd:  include/uapi/asm-generic/siginfo.h \
./.kfa.o.cmd:  include/asm-generic/resource.h \
./.kfa.o.cmd:  include/uapi/asm-generic/resource.h \
./.kfa.o.cmd:  include/asm-generic/sections.h \
./.kfa.o.cmd:  net/rina/ipcp-factories.h \
./.kfa.o.cmd:  net/rina/ipcp-instances.h \
./.kfa.o.cmd:  net/rina/kfa-utils.h \
./.qos.o.cmd:cmd_net/rina/qos.o := gcc -Wp,-MD,net/rina/.qos.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(qos)"  -D"KBUILD_MODNAME=KBUILD_STR(qos)" -c -o net/rina/.tmp_qos.o net/rina/qos.c
./.qos.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.qos.o.cmd:  include/linux/compiler-gcc.h \
./.qos.o.cmd:  include/linux/compiler-gcc4.h \
./.qos.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.qos.o.cmd:  include/asm-generic/int-ll64.h \
./.qos.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.qos.o.cmd:  include/asm-generic/bitsperlong.h \
./.qos.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.qos.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.qos.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.qos.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.qos.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.qos.o.cmd:  include/asm-generic/ptrace.h \
./.qos.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.qos.o.cmd:  include/asm-generic/bitops/fls64.h \
./.qos.o.cmd:  include/asm-generic/bitops/find.h \
./.qos.o.cmd:  include/asm-generic/bitops/sched.h \
./.qos.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.qos.o.cmd:  include/asm-generic/bitops/le.h \
./.qos.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.qos.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.qos.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.qos.o.cmd:  include/asm-generic/percpu.h \
./.qos.o.cmd:  include/linux/percpu-defs.h \
./.qos.o.cmd:  include/asm-generic/memory_model.h \
./.qos.o.cmd:  include/asm-generic/getorder.h \
./.qos.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.qos.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.qos.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.qos.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.qos.o.cmd:  include/asm-generic/ioctl.h \
./.qos.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.qos.o.cmd:  include/asm-generic/bug.h \
./.qos.o.cmd:  include/asm-generic/atomic-long.h \
./.qos.o.cmd:  include/asm-generic/param.h \
./.qos.o.cmd:  include/uapi/asm-generic/param.h \
./.qos.o.cmd:  include/linux/pageblock-flags.h \
./.qos.o.cmd:  include/linux/page-flags-layout.h \
./.qos.o.cmd:  include/asm-generic/topology.h \
./.qos.o.cmd:  include/asm-generic/early_ioremap.h \
./.qos.o.cmd:  include/asm-generic/iomap.h \
./.qos.o.cmd:  include/asm-generic/pci_iomap.h \
./.qos.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.qos.o.cmd:  include/asm-generic/kmap_types.h \
./.qos.o.cmd:  include/asm-generic/fixmap.h \
./.qos.o.cmd:  include/asm-generic/sections.h \
./kfa.h:#include "ipcp-factories.h"
./kfa.h:/* Only requests the pidm to reserve a valid port-id */
./kfa.h:/* Rquest the pidm to release a valid port-id */
./kfa.h:/* Returns a port-id, the flow is uncommitted yet */
./kfa.h:/* Commits the flow, binds the flow to a port-id */
./.default.o.cmd:cmd_net/rina/default.o := gcc -Wp,-MD,net/rina/.default.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(default)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_default.o net/rina/default.c
./.default.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.default.o.cmd:  include/asm-generic/int-ll64.h \
./.default.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.default.o.cmd:  include/asm-generic/bitsperlong.h \
./.default.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.default.o.cmd:  include/linux/compiler-gcc.h \
./.default.o.cmd:  include/linux/compiler-gcc4.h \
./.default.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.default.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.default.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.default.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.default.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.default.o.cmd:  include/asm-generic/ptrace.h \
./.default.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.default.o.cmd:  include/asm-generic/bitops/fls64.h \
./.default.o.cmd:  include/asm-generic/bitops/find.h \
./.default.o.cmd:  include/asm-generic/bitops/sched.h \
./.default.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.default.o.cmd:  include/asm-generic/bitops/le.h \
./.default.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.default.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.default.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.default.o.cmd:  include/asm-generic/percpu.h \
./.default.o.cmd:  include/linux/percpu-defs.h \
./.default.o.cmd:  include/asm-generic/bug.h \
./.default.o.cmd:  include/asm-generic/memory_model.h \
./.default.o.cmd:  include/asm-generic/getorder.h \
./.default.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.default.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.default.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.default.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.default.o.cmd:  include/asm-generic/ioctl.h \
./.default.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.default.o.cmd:  include/asm-generic/atomic-long.h \
./.default.o.cmd:  include/linux/pageblock-flags.h \
./.default.o.cmd:  include/linux/page-flags-layout.h \
./.default.o.cmd:  include/asm-generic/param.h \
./.default.o.cmd:  include/uapi/asm-generic/param.h \
./.default.o.cmd:  include/asm-generic/topology.h \
./.default.o.cmd:  include/asm-generic/early_ioremap.h \
./.default.o.cmd:  include/asm-generic/iomap.h \
./.default.o.cmd:  include/asm-generic/pci_iomap.h \
./.default.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.default.o.cmd:  include/asm-generic/kmap_types.h \
./.default.o.cmd:  include/asm-generic/fixmap.h \
./.default.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./.default.o.cmd:  include/asm-generic/module.h \
./.default.o.cmd:  net/rina/ipcp-instances.h \
./.default.o.cmd:  include/linux/page-debug-flags.h \
./.default.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./.default.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./.default.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./.default.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./.default.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./.default.o.cmd:  include/asm-generic/pgtable.h \
./.default.o.cmd:  include/linux/page-flags.h \
./.default.o.cmd:  include/asm-generic/scatterlist.h \
./.default.o.cmd:  include/linux/dma-mapping.h \
./.default.o.cmd:  include/linux/dma-attrs.h \
./.default.o.cmd:  include/linux/dma-direction.h \
./.default.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./.default.o.cmd:  include/linux/dma-debug.h \
./.default.o.cmd:  include/asm-generic/dma-coherent.h \
./.default.o.cmd:  include/linux/dma-contiguous.h \
./.default.o.cmd:  include/asm-generic/dma-mapping-common.h \
./.default.o.cmd:  include/asm-generic/cputime.h \
./.default.o.cmd:  include/asm-generic/cputime_jiffies.h \
./.default.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./.default.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./.default.o.cmd:  include/asm-generic/siginfo.h \
./.default.o.cmd:  include/uapi/asm-generic/siginfo.h \
./.default.o.cmd:  include/asm-generic/resource.h \
./.default.o.cmd:  include/uapi/asm-generic/resource.h \
./.default.o.cmd:  include/linux/radix-tree.h \
./.default.o.cmd:  include/linux/percpu-rwsem.h \
./.default.o.cmd:  include/asm-generic/sections.h \
./.default.o.cmd:  include/asm-generic/delay.h \
./.default.o.cmd:  include/linux/percpu-refcount.h \
./.default.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./.default.o.cmd:  net/rina/ipcp-factories.h \
./rnl-workarounds.c:#define RINA_PREFIX "rnl-workarounds"
./rnl-workarounds.c:#include "rnl-workarounds.h"
./utils.c:                        "cannot-strdup-from-user");
./utils.c:         * on having the complete-copy, parts of it are a no-go
./utils.c:        if (strncpy_from_user(tmp, src, size) != (size - 1)) {
./utils.c:                LOG_ERR("Cannot strncpy-from-user!");
./pci.h:/* NOTE: The following function may return -1 */
./pci.h:/* FIXME: if pci is NULL, it should return and error (-1) ... */
Binary file ./pdu.o matches
Binary file ./.efcp.c.swo matches
./rmt.h:#include "ipcp-factories.h"
./rmt.h: * QoS-id - An identifier unambiguous within this DIF that identifies a
./rmt.h: * QoS-hypercube. As QoS-cubes are created they are sequentially enumerated.
./rmt.h: * QoS-id is an element of Data Transfer PCI that may be used by the RMT to
./rmt.h: * RMT - This task is an element of the data transfer function of a DIF.
./rmt.h: * real time scheduling of sending PDUs on the appropriate (N-1)-ports of the
./rmt.h: * (N-1)-DIFs available to the RMT.
Binary file ./rina_personality_default.mod.o matches
./.sdu.o.cmd:cmd_net/rina/sdu.o := gcc -Wp,-MD,net/rina/.sdu.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(sdu)"  -D"KBUILD_MODNAME=KBUILD_STR(sdu)" -c -o net/rina/.tmp_sdu.o net/rina/sdu.c
./.sdu.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.sdu.o.cmd:  include/asm-generic/int-ll64.h \
./.sdu.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.sdu.o.cmd:  include/asm-generic/bitsperlong.h \
./.sdu.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.sdu.o.cmd:  include/linux/compiler-gcc.h \
./.sdu.o.cmd:  include/linux/compiler-gcc4.h \
./.sdu.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.sdu.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.sdu.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.sdu.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.sdu.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.sdu.o.cmd:  include/asm-generic/ptrace.h \
./.sdu.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.sdu.o.cmd:  include/asm-generic/bitops/fls64.h \
./.sdu.o.cmd:  include/asm-generic/bitops/find.h \
./.sdu.o.cmd:  include/asm-generic/bitops/sched.h \
./.sdu.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.sdu.o.cmd:  include/asm-generic/bitops/le.h \
./.sdu.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.sdu.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.sdu.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.sdu.o.cmd:  include/asm-generic/percpu.h \
./.sdu.o.cmd:  include/linux/percpu-defs.h \
./.sdu.o.cmd:  include/asm-generic/memory_model.h \
./.sdu.o.cmd:  include/asm-generic/getorder.h \
./.sdu.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.sdu.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.sdu.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.sdu.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.sdu.o.cmd:  include/asm-generic/ioctl.h \
./.sdu.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.sdu.o.cmd:  include/asm-generic/bug.h \
./.sdu.o.cmd:  include/asm-generic/atomic-long.h \
./.sdu.o.cmd:  include/asm-generic/param.h \
./.sdu.o.cmd:  include/uapi/asm-generic/param.h \
./.sdu.o.cmd:  include/linux/pageblock-flags.h \
./.sdu.o.cmd:  include/linux/page-flags-layout.h \
./.sdu.o.cmd:  include/asm-generic/topology.h \
./.sdu.o.cmd:  include/asm-generic/early_ioremap.h \
./.sdu.o.cmd:  include/asm-generic/iomap.h \
./.sdu.o.cmd:  include/asm-generic/pci_iomap.h \
./.sdu.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.sdu.o.cmd:  include/asm-generic/kmap_types.h \
./.sdu.o.cmd:  include/asm-generic/fixmap.h \
./.sdu.o.cmd:  include/asm-generic/sections.h \
./dtp.c:#include "dt-utils.h"
./dtp.c:#include "dtcp-utils.h"
./dtp.c:        INIT_LIST_HEAD(&tmp->head);
./dtp.c:        if (seq_entry->pdu) pdu_destroy(seq_entry->pdu);
./dtp.c:        list_for_each_entry_safe(cur, n, &seq_queue->head, next) {
./dtp.c:                list_del(&cur->next);
./dtp.c:                return -1;
./dtp.c:        if (seqQ->queue) seq_queue_destroy(seqQ->queue);
./dtp.c:        tmp->queue = seq_queue_create();
./dtp.c:        if (!tmp->queue) {
./dtp.c:        tmp->dtp = dtp;
./dtp.c:        spin_lock_init(&tmp->lock);
./dtp.c:/* This is the DT-SV part maintained by DTP */
./dtp.c:        struct dtp_sv *       sv; /* The state-vector */
./dtp.c:        dt = dtp->parent;
./dtp.c:                return -1;
./dtp.c:        max_len = dtcp_max_closed_winq_length(dtp->
./dtp.c:                                              sv->
./dtp.c:                                              connection->
./dtp.c:                                              policies_params->
./dtp.c:        if (cwq_size(cwq) < max_len -1) {
./dtp.c:                        return -1;
./dtp.c:        if (dtp->policies->flow_control_overrun(dtp, pdu)) {
./dtp.c:                return -1;
./dtp.c:        dt = dtp->parent;
./dtp.c:        if (rtimer_restart(dtp->timers.sender_inactivity,
./dtp.c:                return -1;
./dtp.c:        LOG_DBG("defaultTxPolicy - sending to rmt");
./dtp.c:        return rmt_send(dtp->rmt,
./dtp.c:        if (!instance || !instance->sv)
./dtp.c:        spin_lock(&instance->sv->lock);
./dtp.c:        flag = instance->sv->drf_flag;
./dtp.c:        spin_unlock(&instance->sv->lock);
./dtp.c:        spin_lock(&sv->lock);
./dtp.c:        sv->drf_flag = value;
./dtp.c:        spin_unlock(&sv->lock);
./dtp.c:        spin_lock(&sv->lock);
./dtp.c:        tmp = ++sv->nxt_seq;
./dtp.c:        spin_unlock(&sv->lock);
./dtp.c:        spin_lock(&sv->lock);
./dtp.c:        tmp = sv->dropped_pdus;
./dtp.c:        spin_unlock(&sv->lock);
./dtp.c:        spin_lock(&sv->lock);
./dtp.c:        sv->dropped_pdus++;
./dtp.c:        spin_unlock(&sv->lock);
./dtp.c:        spin_lock(&sv->lock);
./dtp.c:        tmp = sv->max_seq_nr_rcv;
./dtp.c:        spin_unlock(&sv->lock);
./dtp.c:        spin_lock(&sv->lock);
./dtp.c:        sv->max_seq_nr_rcv = nr;
./dtp.c:        spin_unlock(&sv->lock);
./dtp.c:        ASSERT(instance->sv);
./dtp.c:                return -1;
./dtp.c:        if (kfa_sdu_post(instance->kfa,
./dtp.c:                         instance->sv->connection->port_id,
./dtp.c:                return -1;
./dtp.c:        if (list_empty(&q->head)) {
./dtp.c:        p = list_first_entry(&q->head, struct seq_q_entry, next);
./dtp.c:        pdu = p->pdu;
./dtp.c:        p->pdu = NULL;
./dtp.c:        list_del(&p->next);
./dtp.c:        return list_empty(&q->head);
./dtp.c:        spin_lock(&seqQ->lock);
./dtp.c:        pdu = seq_queue_pop(seqQ->queue);
./dtp.c:                spin_unlock(&seqQ->lock);
./dtp.c:        spin_unlock(&seqQ->lock);
./dtp.c:        INIT_LIST_HEAD(&tmp->next);
./dtp.c:        tmp->pdu = pdu;
./dtp.c:        tmp->time_stamp = jiffies;
./dtp.c:                return -1;
./dtp.c:        if (list_empty(&q->head)) {
./dtp.c:                list_add(&tmp->next, &q->head);
./dtp.c:        last = list_last_entry(&q->head, struct seq_q_entry, next);
./dtp.c:                return -1;
./dtp.c:        pci  = pdu_pci_get_ro(last->pdu);
./dtp.c:                list_add_tail(&tmp->next, &q->head);
./dtp.c:        list_for_each_entry(cur, &q->head, next) {
./dtp.c:                pci = pdu_pci_get_ro(cur->pdu);
./dtp.c:                        list_add(&tmp->next, &cur->next);
./dtp.c:        list_for_each_entry(cur, &q->head, next) {
./dtp.c:                pci = pdu_pci_get_ro(cur->pdu);
./dtp.c:        ASSERT(seqQ->queue);
./dtp.c:        return seq_queue_is_dup(seqQ->queue, seq_num);
./dtp.c:        seqQ = dtp->seqQ;
./dtp.c:        dt = dtp->parent;
./dtp.c:        if (seqQ_pdu_is_duplicate(dtp->seqQ,
./dtp.c:                dropped_pdus_inc(dtp->sv);
./dtp.c:                return -1;
./dtp.c:                return -1;
./dtp.c:        spin_lock(&seqQ->lock);
./dtp.c:        if (seq_queue_push_ni(seqQ->queue, pdu)) {
./dtp.c:                spin_unlock(&seqQ->lock);
./dtp.c:                return -1;
./dtp.c:        spin_unlock(&seqQ->lock);
./dtp.c:        spin_lock(&seqQ->lock);
./dtp.c:        empty = seq_queue_is_empty(seqQ->queue);
./dtp.c:        spin_unlock(&seqQ->lock);
./dtp.c:         * timestam < time - A plus those that with seq_num exactly consecutive
./dtp.c:        spin_lock(&seqQ->lock);
./dtp.c:        tmp = seq_queue_last_to_ack(seqQ->queue, t);
./dtp.c:        spin_unlock(&seqQ->lock);
./dtp.c:        return (((a == 0) && (seq_num > LWE)) || (seq_num == (LWE + 1)) || ((seq_num - LWE) <= max_sdu_gap));
./dtp.c:        sv = dtp->sv;
./dtp.c:        dt = dtp->parent;
./dtp.c:        seqQ = dtp->seqQ;
./dtp.c:        in_order_del   = sv->connection->policies_params->in_order_delivery;
./dtp.c:        incomplete_del = sv->connection->policies_params->incomplete_delivery;
./dtp.c:        max_sdu_gap    = sv->connection->policies_params->max_sdu_gap;
./dtp.c:        spin_lock(&sv->lock);
./dtp.c:                limit = seqQ_last_to_ack(seqQ, time - a);
./dtp.c:                                spin_unlock(&sv->lock);
./dtp.c:        spin_unlock(&sv->lock);
./dtp.c:                spin_lock(&seqQ->lock);                                        \
./dtp.c:                list_for_each_entry_safe(pos, n, &seqQ->queue->head, next)
./dtp.c:                spin_unlock(&seqQ->lock)
./dtp.c:        sv = dtp->sv;
./dtp.c:        dt = dtp->parent;
./dtp.c:        seqQ = dtp->seqQ;
./dtp.c:        dtcp = dt_dtcp(dtp->parent);
./dtp.c:        in_order_del   = sv->connection->policies_params->in_order_delivery;
./dtp.c:        incomplete_del = sv->connection->policies_params->incomplete_delivery;
./dtp.c:        max_sdu_gap    = sv->connection->policies_params->max_sdu_gap;
./dtp.c:                pdu = pos->pdu;
./dtp.c:                if ((seq_num == LWE +1) || (seq_num - LWE - 1 <= max_sdu_gap)) {
./dtp.c:                        pos->pdu = NULL;
./dtp.c:                if (pos->time_stamp + a <= time) {
./dtp.c:                                pos->pdu = NULL;
./dtp.c: * period of the A-timer:
./dtp.c:        dtcp = dt_dtcp(dtp->parent);
./dtp.c:        a = dt_sv_a(dtp->parent);
./dtp.c:        rtimer_restart(dtp->timers.a, a/AF);
./dtp.c:        dtp->sv->rexmsn_ctrl  = rexmsn_ctrl;
./dtp.c:        dtp->sv->window_based = window_based;
./dtp.c:        dtp->sv->rate_based   = rate_based;
./dtp.c:                rtimer_start(dtp->timers.a, a/AF);
./dtp.c:        tmp->parent = dt;
./dtp.c:        tmp->sv = rkmalloc(sizeof(*tmp->sv), GFP_KERNEL);
./dtp.c:        if (!tmp->sv) {
./dtp.c:                LOG_ERR("Cannot create DTP state-vector");
./dtp.c:        *tmp->sv            = default_sv;
./dtp.c:        /* FIXME: fixups to the state-vector should be placed here */
./dtp.c:        spin_lock_init(&tmp->sv->lock);
./dtp.c:        tmp->sv->connection = connection;
./dtp.c:        tmp->policies       = &default_policies;
./dtp.c:        tmp->rmt            = rmt;
./dtp.c:        tmp->kfa            = kfa;
./dtp.c:        tmp->seqQ           = seqQ_create(tmp);
./dtp.c:        if (!tmp->seqQ) {
./dtp.c:        tmp->timers.sender_inactivity   = rtimer_create(tf_sender_inactivity,
./dtp.c:        tmp->timers.receiver_inactivity = rtimer_create(tf_receiver_inactivity,
./dtp.c:        tmp->timers.a                   = rtimer_create(tf_a, tmp);
./dtp.c:        if (!tmp->timers.sender_inactivity   ||
./dtp.c:            !tmp->timers.receiver_inactivity ||
./dtp.c:            !tmp->timers.a) {
./dtp.c:                return -1;
./dtp.c:        if (instance->seqQ) seqQ_destroy(instance->seqQ);
./dtp.c:        if (instance->timers.sender_inactivity)
./dtp.c:                rtimer_destroy(instance->timers.sender_inactivity);
./dtp.c:        if (instance->timers.receiver_inactivity)
./dtp.c:                rtimer_destroy(instance->timers.receiver_inactivity);
./dtp.c:        if (instance->timers.a)
./dtp.c:                rtimer_destroy(instance->timers.a);
./dtp.c:        if (instance->sv)
./dtp.c:                rkfree(instance->sv);
./dtp.c:                return -1;
./dtp.c:                return -1;
./dtp.c:        if (rtimer_stop(instance->timers.sender_inactivity)) {
./dtp.c:                   return -1; */
./dtp.c:        sv = instance->sv;
./dtp.c:        dt = instance->parent;
./dtp.c:        policies = instance->policies;
./dtp.c:                return -1;
./dtp.c:                       sv->connection->source_cep_id,
./dtp.c:                       sv->connection->destination_cep_id,
./dtp.c:                       sv->connection->source_address,
./dtp.c:                       sv->connection->destination_address,
./dtp.c:                       sv->connection->qos_id,
./dtp.c:                return -1;
./dtp.c:                return -1;
./dtp.c:                return -1;
./dtp.c:                return -1;
./dtp.c:                if (sv->rexmsn_ctrl) {
./dtp.c:                                return -1;
./dtp.c:                                return -1;
./dtp.c:                                return -1;
./dtp.c:                if (sv->window_based) {
./dtp.c:                                if (policies->transmission_control(instance,
./dtp.c:                                        return -1;
./dtp.c:                                if (policies->closed_window(instance, pdu)) {
./dtp.c:                                        return -1;
./dtp.c:                if (sv->rate_based) {
./dtp.c:                if (rtimer_restart(instance->timers.sender_inactivity,
./dtp.c:                        return -1;
./dtp.c:        if (rtimer_restart(instance->timers.sender_inactivity,
./dtp.c:                return -1;
./dtp.c:        return rmt_send(instance->rmt,
./dtp.c:         *   ask FT for the dst address the N-1 port is connected to
./dtp.c:                return -1;
./dtp.c:                return -1;
./dtp.c:                return -1;
./dtp.c:                return -1;
./dtp.c:                return -1;
./dtp.c:                return -1;
./dtp.c:                return -1;
./dtp.c:            !instance->kfa             ||
./dtp.c:            !instance->sv              ||
./dtp.c:            !instance->sv->connection) {
./dtp.c:                return -1;
./dtp.c:        policies = instance->policies;
./dtp.c:        sv = instance->sv;
./dtp.c:        dt = instance->parent;
./dtp.c:                return -1;
./dtp.c:        LOG_DBG("A-timer timeout: %d", a);
./dtp.c:        if (rtimer_stop(instance->timers.receiver_inactivity)) {
./dtp.c:                  return -1;*/
./dtp.c:                policies->initial_sequence_number(instance);
./dtp.c:                                return -1;
./dtp.c:                LOG_DBG("Dropped a PDU, total: %d", sv->dropped_pdus);
./dtp.c:                                return -1;
./dtp.c:                if (rtimer_restart(instance->timers.receiver_inactivity,
./dtp.c:                        return -1;
./dtp.c:                                return -1;
./dtp.c:                                return -1;
./dtp.c:                                        return -1;
./dtp.c:                                return -1;
./dtp.c:        if (dtcp && rtimer_restart(instance->timers.receiver_inactivity,
./dtp.c:                return -1;
Binary file ./ipcps/shim-hv-virtio.o matches
./ipcps/.normal-ipcp.ko.cmd:cmd_net/rina/ipcps/normal-ipcp.ko := ld -r -m elf_i386 -T /home/irati/linux/scripts/module-common.lds --build-id  -o net/rina/ipcps/normal-ipcp.ko net/rina/ipcps/normal-ipcp.o net/rina/ipcps/normal-ipcp.mod.o
Binary file ./ipcps/shim-dummy.mod.o matches
./ipcps/shim-tcp-udp.c:#define SHIM_NAME   "shim-tcp-udp"
./ipcps/shim-tcp-udp.c:#include "ipcp-utils.h"
./ipcps/shim-tcp-udp.c:#include "ipcp-factories.h"
./ipcps/shim-tcp-udp.c:                if (name_is_equal(app->app_name, app_name)) {
./ipcps/shim-tcp-udp.c:        spin_lock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:        list_for_each_entry(flow, &data->flows, list) {
./ipcps/shim-tcp-udp.c:                if (flow->port_id == id) {
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:        list_for_each_entry(flow, &data->flows, list) {
./ipcps/shim-tcp-udp.c:                if (flow->sock == sock) {
./ipcps/shim-tcp-udp.c:        if (f->sin_family == s->sin_family &&
./ipcps/shim-tcp-udp.c:            f->sin_port == s->sin_port &&
./ipcps/shim-tcp-udp.c:            f->sin_addr.s_addr == s->sin_addr.s_addr)
./ipcps/shim-tcp-udp.c:        list_for_each_entry(flow, &data->flows, list) {
./ipcps/shim-tcp-udp.c:                if (flow->sock == sock &&
./ipcps/shim-tcp-udp.c:                    compare_addr(addr, &flow->addr)) {
./ipcps/shim-tcp-udp.c:        if (sock->type == SOCK_DGRAM) {
./ipcps/shim-tcp-udp.c:                list_for_each_entry(app, &data->apps, list) {
./ipcps/shim-tcp-udp.c:                        if (app->udpsock == sock) {
./ipcps/shim-tcp-udp.c:                list_for_each_entry(app, &data->apps, list) {
./ipcps/shim-tcp-udp.c:                        if (app->lsock == sock) {
./ipcps/shim-tcp-udp.c:        list_for_each_entry(app, &data->apps, list) {
./ipcps/shim-tcp-udp.c:                if (name_is_equal(app->app_name, name)) {
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        spin_lock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:        if (!list_empty(&flow->list)) {
./ipcps/shim-tcp-udp.c:                list_del(&flow->list);
./ipcps/shim-tcp-udp.c:        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:        if (kfa_flow_deallocate(data->kfa, flow->port_id))
./ipcps/shim-tcp-udp.c:                LOG_ERR("Failed to destroy shim-tcp-udp flow");
./ipcps/shim-tcp-udp.c:        sock_release(flow->sock);
./ipcps/shim-tcp-udp.c:        LOG_DBG("callback on %p", sk->sk_socket);
./ipcps/shim-tcp-udp.c:        recvd->sk = sk;
./ipcps/shim-tcp-udp.c:        INIT_LIST_HEAD(&recvd->list);
./ipcps/shim-tcp-udp.c:        list_add_tail(&recvd->list, &rcv_wq_data);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                flow->port_id       = id;
./ipcps/shim-tcp-udp.c:                flow->port_id_state = PORT_STATE_PENDING;
./ipcps/shim-tcp-udp.c:                flow->app_name      = app->app_name;
./ipcps/shim-tcp-udp.c:                INIT_LIST_HEAD(&flow->list);
./ipcps/shim-tcp-udp.c:                spin_lock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                list_add(&flow->list, &data->flows);
./ipcps/shim-tcp-udp.c:                spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                flow->addr.sin_addr.s_addr = htonl(app_data->ip_address);
./ipcps/shim-tcp-udp.c:                flow->addr.sin_family      = AF_INET;
./ipcps/shim-tcp-udp.c:                flow->addr.sin_port        = htons(app_data->port);
./ipcps/shim-tcp-udp.c:                if (!fspec->ordered_delivery) {
./ipcps/shim-tcp-udp.c:                        flow->sock = app->udpsock;
./ipcps/shim-tcp-udp.c:                        flow->fspec_id = 0;
./ipcps/shim-tcp-udp.c:                        flow->fspec_id = 1;
./ipcps/shim-tcp-udp.c:                                               IPPROTO_TCP, &flow->sock);
./ipcps/shim-tcp-udp.c:                                return -1;
./ipcps/shim-tcp-udp.c:                        err = kernel_connect(flow->sock,
./ipcps/shim-tcp-udp.c:                                             (struct sockaddr*)&flow->addr,
./ipcps/shim-tcp-udp.c:                                sock_release(flow->sock);
./ipcps/shim-tcp-udp.c:                                return -1;
./ipcps/shim-tcp-udp.c:                        write_lock_bh(&flow->sock->sk->sk_callback_lock);
./ipcps/shim-tcp-udp.c:                        flow->sock->sk->sk_user_data =
./ipcps/shim-tcp-udp.c:                                flow->sock->sk->sk_data_ready;
./ipcps/shim-tcp-udp.c:                        flow->sock->sk->sk_data_ready =
./ipcps/shim-tcp-udp.c:                        write_unlock_bh(&flow->sock->sk->sk_callback_lock);
./ipcps/shim-tcp-udp.c:                flow->port_id_state = PORT_STATE_ALLOCATED;
./ipcps/shim-tcp-udp.c:                if (kipcm_flow_commit(default_kipcm, data->id,
./ipcps/shim-tcp-udp.c:                                      flow->port_id)) {
./ipcps/shim-tcp-udp.c:                        if (fspec->ordered_delivery) {
./ipcps/shim-tcp-udp.c:                                kernel_sock_shutdown(flow->sock, SHUT_RDWR);
./ipcps/shim-tcp-udp.c:                                sock_release(flow->sock);
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                flow->sdu_queue = NULL;
./ipcps/shim-tcp-udp.c:                if (kipcm_notify_flow_alloc_req_result(default_kipcm, data->id,
./ipcps/shim-tcp-udp.c:                                                       flow->port_id, 0)) {
./ipcps/shim-tcp-udp.c:                        if (fspec->ordered_delivery) {
./ipcps/shim-tcp-udp.c:                                kernel_sock_shutdown(flow->sock, SHUT_RDWR);
./ipcps/shim-tcp-udp.c:                                sock_release(flow->sock);
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:        } else if (flow->port_id_state == PORT_STATE_PENDING) {
./ipcps/shim-tcp-udp.c:                LOG_ERR("Port-id state is already pending ...");
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        spin_lock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:        if (flow->port_id_state != PORT_STATE_PENDING) {
./ipcps/shim-tcp-udp.c:                spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                if (kipcm_flow_commit(default_kipcm, data->id,
./ipcps/shim-tcp-udp.c:                                      flow->port_id)) {
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                spin_lock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                flow->port_id_state = PORT_STATE_ALLOCATED;
./ipcps/shim-tcp-udp.c:                spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                ASSERT(flow->sdu_queue);
./ipcps/shim-tcp-udp.c:                while (!rfifo_is_empty(flow->sdu_queue)) {
./ipcps/shim-tcp-udp.c:                        tmp = rfifo_pop(flow->sdu_queue);
./ipcps/shim-tcp-udp.c:                        if (kfa_sdu_post(data->kfa, flow->port_id, tmp)) {
./ipcps/shim-tcp-udp.c:                                return -1;
./ipcps/shim-tcp-udp.c:                rfifo_destroy(flow->sdu_queue, (void (*)(void *)) pdu_destroy);
./ipcps/shim-tcp-udp.c:                flow->sdu_queue = NULL;
./ipcps/shim-tcp-udp.c:                spin_lock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                flow->port_id_state = PORT_STATE_NULL;
./ipcps/shim-tcp-udp.c:                spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                if (flow->fspec_id == 1 &&
./ipcps/shim-tcp-udp.c:                    flow->port_id_state == PORT_STATE_ALLOCATED) {
./ipcps/shim-tcp-udp.c:                        kernel_sock_shutdown(flow->sock, SHUT_RDWR);
./ipcps/shim-tcp-udp.c:                        sock_release(flow->sock);
./ipcps/shim-tcp-udp.c:                ASSERT(flow->sdu_queue);
./ipcps/shim-tcp-udp.c:                rfifo_destroy(flow->sdu_queue, (void (*)(void *)) pdu_destroy);
./ipcps/shim-tcp-udp.c:                flow->sdu_queue = NULL;
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        if (flow->fspec_id == 1 && flow->port_id == PORT_STATE_ALLOCATED) {
./ipcps/shim-tcp-udp.c:                kernel_sock_shutdown(flow->sock, SHUT_RDWR);
./ipcps/shim-tcp-udp.c:                sock_release(flow->sock);
./ipcps/shim-tcp-udp.c:        if (kfa_flow_deallocate(data->kfa, flow->port_id)) {
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:                LOG_ERR("Failed to destroy shim-tcp-udp flow");
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        spin_lock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                flow->port_id_state = PORT_STATE_PENDING;
./ipcps/shim-tcp-udp.c:                INIT_LIST_HEAD(&flow->list);
./ipcps/shim-tcp-udp.c:                list_add(&flow->list, &data->flows);
./ipcps/shim-tcp-udp.c:                flow->port_id  = kfa_port_id_reserve(data->kfa, data->id);
./ipcps/shim-tcp-udp.c:                flow->sock     = sock;
./ipcps/shim-tcp-udp.c:                flow->fspec_id = 0;
./ipcps/shim-tcp-udp.c:                flow->addr.sin_port        = addr.sin_port;
./ipcps/shim-tcp-udp.c:                flow->addr.sin_family      = addr.sin_family;
./ipcps/shim-tcp-udp.c:                flow->addr.sin_addr.s_addr = addr.sin_addr.s_addr;
./ipcps/shim-tcp-udp.c:                if (!is_port_id_ok(flow->port_id)) {
./ipcps/shim-tcp-udp.c:                        flow->port_id_state = PORT_STATE_NULL;
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                                LOG_ERR("Problems destroying shim-tcp-udp "
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                if (kfa_flow_create(data->kfa, data->id, flow->port_id)) {
./ipcps/shim-tcp-udp.c:                        flow->port_id_state = PORT_STATE_NULL;
./ipcps/shim-tcp-udp.c:                        kfa_port_id_release(data->kfa, flow->port_id);
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                                LOG_ERR("Problems destroying shim-tcp-udp "
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                flow->sdu_queue = rfifo_create();
./ipcps/shim-tcp-udp.c:                if (!flow->sdu_queue) {
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                if (rfifo_push(flow->sdu_queue, du)) {
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                flow->app_name = app->app_name;
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                                       data->id,
./ipcps/shim-tcp-udp.c:                                       flow->port_id,
./ipcps/shim-tcp-udp.c:                                       data->dif_name,
./ipcps/shim-tcp-udp.c:                                       app->app_name,
./ipcps/shim-tcp-udp.c:                                       data->qos[0])) {
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                if (flow->port_id_state == PORT_STATE_ALLOCATED) {
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                        if (kfa_sdu_post(data->kfa, flow->port_id, du))
./ipcps/shim-tcp-udp.c:                                return -1;
./ipcps/shim-tcp-udp.c:                } else if (flow->port_id_state == PORT_STATE_PENDING) {
./ipcps/shim-tcp-udp.c:                        if (rfifo_push(flow->sdu_queue, du)) {
./ipcps/shim-tcp-udp.c:                                spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                                return -1;
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                } else if (flow->port_id_state == PORT_STATE_NULL) {
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        flow->bytes_left = (int)ntohs(nlen);
./ipcps/shim-tcp-udp.c:        LOG_DBG("incoming message is %d bytes long", flow->bytes_left);
./ipcps/shim-tcp-udp.c:        if ((size = recv_msg(sock, NULL, 0, buf, flow->bytes_left)) <= 0) {
./ipcps/shim-tcp-udp.c:        if (size == flow->bytes_left) {
./ipcps/shim-tcp-udp.c:                flow->bytes_left = 0;
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                spin_lock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                if (flow->port_id_state == PORT_STATE_ALLOCATED) {
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                        if (kfa_sdu_post(data->kfa, flow->port_id, du))
./ipcps/shim-tcp-udp.c:                                return -1;
./ipcps/shim-tcp-udp.c:                } else if (flow->port_id_state == PORT_STATE_PENDING) {
./ipcps/shim-tcp-udp.c:                        if (rfifo_push(flow->sdu_queue, du)) {
./ipcps/shim-tcp-udp.c:                                spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                                return -1;
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                } else if (flow->port_id_state == PORT_STATE_NULL) {
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                flow->buf = rkmalloc(flow->bytes_left, GFP_KERNEL);
./ipcps/shim-tcp-udp.c:                flow->lbuf = flow->bytes_left;
./ipcps/shim-tcp-udp.c:                flow->bytes_left = flow->bytes_left - size;
./ipcps/shim-tcp-udp.c:                memcpy(&flow->buf[0], &buf[0], size);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        start = flow->lbuf - flow->bytes_left;
./ipcps/shim-tcp-udp.c:        size = recv_msg(sock, NULL, 0, &flow->buf[start], flow->bytes_left);
./ipcps/shim-tcp-udp.c:        if (size == flow->bytes_left) {
./ipcps/shim-tcp-udp.c:                flow->bytes_left = 0;
./ipcps/shim-tcp-udp.c:                sdubuf = buffer_create_from(flow->buf, flow->lbuf);
./ipcps/shim-tcp-udp.c:                        rkfree(flow->buf);
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                rkfree(flow->buf);
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                spin_lock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                if (flow->port_id_state == PORT_STATE_ALLOCATED) {
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                        if (kfa_sdu_post(data->kfa, flow->port_id, du))
./ipcps/shim-tcp-udp.c:                                return -1;
./ipcps/shim-tcp-udp.c:                } else if (flow->port_id_state == PORT_STATE_PENDING) {
./ipcps/shim-tcp-udp.c:                        if (rfifo_push(flow->sdu_queue, du)) {
./ipcps/shim-tcp-udp.c:                                spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                                return -1;
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                } else if (flow->port_id_state == PORT_STATE_NULL) {
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                flow->bytes_left = flow->bytes_left - size;
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        if (flow->bytes_left == 0)
./ipcps/shim-tcp-udp.c:        if (size == 0 && flow->port_id_state == PORT_STATE_ALLOCATED) {
./ipcps/shim-tcp-udp.c:                kipcm_notify_flow_dealloc(data->id, 0, flow->port_id, 1);
./ipcps/shim-tcp-udp.c:                sock_release(flow->sock);
./ipcps/shim-tcp-udp.c:                err = kernel_accept(app->lsock, &acsock, O_NONBLOCK);
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                write_lock_bh(&acsock->sk->sk_callback_lock);
./ipcps/shim-tcp-udp.c:                acsock->sk->sk_user_data = acsock->sk->sk_data_ready;
./ipcps/shim-tcp-udp.c:                acsock->sk->sk_data_ready = tcp_udp_rcv;
./ipcps/shim-tcp-udp.c:                write_unlock_bh(&acsock->sk->sk_callback_lock);
./ipcps/shim-tcp-udp.c:                spin_lock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                flow->port_id_state = PORT_STATE_PENDING;
./ipcps/shim-tcp-udp.c:                flow->fspec_id = 1;
./ipcps/shim-tcp-udp.c:                flow->port_id = kfa_port_id_reserve(data->kfa, data->id);
./ipcps/shim-tcp-udp.c:                flow->sock = acsock;
./ipcps/shim-tcp-udp.c:                INIT_LIST_HEAD(&flow->list);
./ipcps/shim-tcp-udp.c:                list_add(&flow->list, &data->flows);
./ipcps/shim-tcp-udp.c:                memset(&flow->addr, 0, sizeof(struct sockaddr_in));
./ipcps/shim-tcp-udp.c:                if (!is_port_id_ok(flow->port_id)) {
./ipcps/shim-tcp-udp.c:                        flow->port_id_state = PORT_STATE_NULL;
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                                LOG_ERR("Problems destroying shim-tcp-udp "
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                if (kfa_flow_create(data->kfa, data->id, flow->port_id)) {
./ipcps/shim-tcp-udp.c:                        flow->port_id_state = PORT_STATE_NULL;
./ipcps/shim-tcp-udp.c:                        kfa_port_id_release(data->kfa, flow->port_id);
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                                LOG_ERR("Problems destroying shim-tcp-udp "
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                flow->sdu_queue = rfifo_create();
./ipcps/shim-tcp-udp.c:                if (!flow->sdu_queue) {
./ipcps/shim-tcp-udp.c:                        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                                       data->id,
./ipcps/shim-tcp-udp.c:                                       flow->port_id,
./ipcps/shim-tcp-udp.c:                                       data->dif_name,
./ipcps/shim-tcp-udp.c:                                       app->app_name,
./ipcps/shim-tcp-udp.c:                                       data->qos[1])) {
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:        if (sk->sk_socket->type == SOCK_DGRAM) {
./ipcps/shim-tcp-udp.c:                while ((res = udp_process_msg(sk->sk_socket)) > 0) {
./ipcps/shim-tcp-udp.c:                return tcp_process(sk->sk_socket);
./ipcps/shim-tcp-udp.c:                LOG_DBG("worker on %p", recvd->sk->sk_socket);
./ipcps/shim-tcp-udp.c:                if (recvd->sk != last) {
./ipcps/shim-tcp-udp.c:                        if (tcp_udp_rcv_process_msg(recvd->sk) == EAGAIN) {
./ipcps/shim-tcp-udp.c:                                last = recvd->sk;
./ipcps/shim-tcp-udp.c:                list_del(&recvd->list);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        app->app_name = name_dup(name);
./ipcps/shim-tcp-udp.c:        if (!app->app_name) {
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        app->port = app_data->port;
./ipcps/shim-tcp-udp.c:                               &app->udpsock);
./ipcps/shim-tcp-udp.c:                name_destroy(app->app_name);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        sin.sin_port = htons(app->port);
./ipcps/shim-tcp-udp.c:        err = kernel_bind(app->udpsock, (struct sockaddr*)&sin, sizeof(sin));
./ipcps/shim-tcp-udp.c:                sock_release(app->udpsock);
./ipcps/shim-tcp-udp.c:                name_destroy(app->app_name);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        write_lock_bh(&app->udpsock->sk->sk_callback_lock);
./ipcps/shim-tcp-udp.c:        app->udpsock->sk->sk_user_data = app->udpsock->sk->sk_data_ready;
./ipcps/shim-tcp-udp.c:        app->udpsock->sk->sk_data_ready = tcp_udp_rcv;
./ipcps/shim-tcp-udp.c:        write_unlock_bh(&app->udpsock->sk->sk_callback_lock);
./ipcps/shim-tcp-udp.c:        err = sock_create_kern(PF_INET, SOCK_STREAM, IPPROTO_TCP, &app->lsock);
./ipcps/shim-tcp-udp.c:                sock_release(app->udpsock);
./ipcps/shim-tcp-udp.c:                name_destroy(app->app_name);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        err = kernel_bind(app->lsock, (struct sockaddr*)&sin, sizeof(sin));
./ipcps/shim-tcp-udp.c:                sock_release(app->lsock);
./ipcps/shim-tcp-udp.c:                sock_release(app->udpsock);
./ipcps/shim-tcp-udp.c:                name_destroy(app->app_name);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        err = kernel_listen(app->lsock, 5);
./ipcps/shim-tcp-udp.c:                sock_release(app->lsock);
./ipcps/shim-tcp-udp.c:                sock_release(app->udpsock);
./ipcps/shim-tcp-udp.c:                name_destroy(app->app_name);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        write_lock_bh(&app->lsock->sk->sk_callback_lock);
./ipcps/shim-tcp-udp.c:        app->lsock->sk->sk_user_data = app->lsock->sk->sk_data_ready;
./ipcps/shim-tcp-udp.c:        app->lsock->sk->sk_data_ready = tcp_udp_rcv;
./ipcps/shim-tcp-udp.c:        write_unlock_bh(&app->lsock->sk->sk_callback_lock);
./ipcps/shim-tcp-udp.c:        INIT_LIST_HEAD(&(app->list));
./ipcps/shim-tcp-udp.c:        spin_lock(&data->app_lock);
./ipcps/shim-tcp-udp.c:        list_add(&(app->list), &(data->apps));
./ipcps/shim-tcp-udp.c:        spin_unlock(&data->app_lock);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        lock_sock(app->udpsock->sk);
./ipcps/shim-tcp-udp.c:        write_lock_bh(&app->udpsock->sk->sk_callback_lock);
./ipcps/shim-tcp-udp.c:        app->udpsock->sk->sk_data_ready = app->udpsock->sk->sk_user_data;
./ipcps/shim-tcp-udp.c:        app->udpsock->sk->sk_user_data = NULL;
./ipcps/shim-tcp-udp.c:        write_unlock_bh(&app->udpsock->sk->sk_callback_lock);
./ipcps/shim-tcp-udp.c:        release_sock(app->udpsock->sk);
./ipcps/shim-tcp-udp.c:        sock_release(app->udpsock);
./ipcps/shim-tcp-udp.c:        lock_sock(app->lsock->sk);
./ipcps/shim-tcp-udp.c:        write_lock_bh(&app->lsock->sk->sk_callback_lock);
./ipcps/shim-tcp-udp.c:        app->lsock->sk->sk_data_ready = app->lsock->sk->sk_user_data;
./ipcps/shim-tcp-udp.c:        app->lsock->sk->sk_user_data = NULL;
./ipcps/shim-tcp-udp.c:        write_unlock_bh(&app->lsock->sk->sk_callback_lock);
./ipcps/shim-tcp-udp.c:        release_sock(app->lsock->sk);
./ipcps/shim-tcp-udp.c:        kernel_sock_shutdown(app->lsock, SHUT_RDWR);
./ipcps/shim-tcp-udp.c:        sock_release(app->lsock);
./ipcps/shim-tcp-udp.c:        name_destroy(app->app_name);
./ipcps/shim-tcp-udp.c:        spin_lock(&data->app_lock);
./ipcps/shim-tcp-udp.c:        list_del(&app->list);
./ipcps/shim-tcp-udp.c:        spin_unlock(&data->app_lock);
./ipcps/shim-tcp-udp.c:        if (data->dif_name) {
./ipcps/shim-tcp-udp.c:                ASSERT(data->dif_name->process_name);
./ipcps/shim-tcp-udp.c:                        data->dif_name->process_name);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        data->dif_name = name_dup(dif_information->dif_name);
./ipcps/shim-tcp-udp.c:        if (!data->dif_name) {
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:                size = send_msg(flow->sock, NULL, 0, &buf[total],
./ipcps/shim-tcp-udp.c:                                len + sizeof(__be16) - total);
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                LOG_ERR("could not find flow with specified port-id");
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        spin_lock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:        if (flow->port_id_state != PORT_STATE_ALLOCATED) {
./ipcps/shim-tcp-udp.c:                spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        spin_unlock(&data->flow_lock);
./ipcps/shim-tcp-udp.c:        if (flow->fspec_id == 0) {
./ipcps/shim-tcp-udp.c:                size = send_msg(flow->sock, &flow->addr, sizeof(flow->addr),
./ipcps/shim-tcp-udp.c:                                (char*)buffer_data_rw(sdu->buffer),
./ipcps/shim-tcp-udp.c:                                buffer_length(sdu->buffer));
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                } else if (size < buffer_length(sdu->buffer)) {
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:                if (tcp_sdu_write(flow, buffer_length(sdu->buffer),
./ipcps/shim-tcp-udp.c:                                  (char*)buffer_data_rw(sdu->buffer))) {
./ipcps/shim-tcp-udp.c:                        return -1;
./ipcps/shim-tcp-udp.c:        ASSERT(name_is_ok(data->name));
./ipcps/shim-tcp-udp.c:        return data->name;
./ipcps/shim-tcp-udp.c:        INIT_LIST_HEAD(&(data->instances));
./ipcps/shim-tcp-udp.c:        ASSERT(list_empty(&(data->instances)));
./ipcps/shim-tcp-udp.c:        list_for_each_entry(pos, &(data->instances), list) {
./ipcps/shim-tcp-udp.c:                if (pos->id == id) {
./ipcps/shim-tcp-udp.c:        inst->ops  = &tcp_udp_instance_ops;
./ipcps/shim-tcp-udp.c:        inst->data = rkzalloc(sizeof(struct ipcp_instance_data), GFP_KERNEL);
./ipcps/shim-tcp-udp.c:        if (!inst->data) {
./ipcps/shim-tcp-udp.c:        inst->data->id = id;
./ipcps/shim-tcp-udp.c:        inst->data->name = name_dup(name);
./ipcps/shim-tcp-udp.c:        if (!inst->data->name) {
./ipcps/shim-tcp-udp.c:                rkfree(inst->data);
./ipcps/shim-tcp-udp.c:        inst->data->qos = rkzalloc(2*sizeof(struct flow_spec*), GFP_KERNEL);
./ipcps/shim-tcp-udp.c:        if (!inst->data->qos) {
./ipcps/shim-tcp-udp.c:                name_destroy(inst->data->name);
./ipcps/shim-tcp-udp.c:                rkfree(inst->data);
./ipcps/shim-tcp-udp.c:        inst->data->qos[0] = rkzalloc(sizeof(struct flow_spec), GFP_KERNEL);
./ipcps/shim-tcp-udp.c:        if (!inst->data->qos[0]) {
./ipcps/shim-tcp-udp.c:                rkfree(inst->data->qos);
./ipcps/shim-tcp-udp.c:                name_destroy(inst->data->name);
./ipcps/shim-tcp-udp.c:                rkfree(inst->data);
./ipcps/shim-tcp-udp.c:        inst->data->qos[1] = rkzalloc(sizeof(struct flow_spec), GFP_KERNEL);
./ipcps/shim-tcp-udp.c:        if (!inst->data->qos[1]) {
./ipcps/shim-tcp-udp.c:                rkfree(inst->data->qos[0]);
./ipcps/shim-tcp-udp.c:                rkfree(inst->data->qos);
./ipcps/shim-tcp-udp.c:                name_destroy(inst->data->name);
./ipcps/shim-tcp-udp.c:                rkfree(inst->data);
./ipcps/shim-tcp-udp.c:        inst->data->qos[0]->average_bandwidth           = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[0]->average_sdu_bandwidth       = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[0]->delay                       = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[0]->jitter                      = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[0]->max_allowable_gap           = -1;
./ipcps/shim-tcp-udp.c:        inst->data->qos[0]->max_sdu_size                = BUFFER_SIZE;
./ipcps/shim-tcp-udp.c:        inst->data->qos[0]->ordered_delivery            = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[0]->partial_delivery            = 1;
./ipcps/shim-tcp-udp.c:        inst->data->qos[0]->peak_bandwidth_duration     = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[0]->peak_sdu_bandwidth_duration = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[0]->undetected_bit_error_rate   = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[1]->average_bandwidth           = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[1]->average_sdu_bandwidth       = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[1]->delay                       = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[1]->jitter                      = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[1]->max_allowable_gap           = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[1]->max_sdu_size                = BUFFER_SIZE;
./ipcps/shim-tcp-udp.c:        inst->data->qos[1]->ordered_delivery            = 1;
./ipcps/shim-tcp-udp.c:        inst->data->qos[1]->partial_delivery            = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[1]->peak_bandwidth_duration     = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[1]->peak_sdu_bandwidth_duration = 0;
./ipcps/shim-tcp-udp.c:        inst->data->qos[1]->undetected_bit_error_rate   = 0;
./ipcps/shim-tcp-udp.c:        inst->data->kfa = kipcm_kfa(default_kipcm);
./ipcps/shim-tcp-udp.c:        ASSERT(inst->data->kfa);
./ipcps/shim-tcp-udp.c:        LOG_DBG("KFA instance %pK bound to the shim tcp-udp", inst->data->kfa);
./ipcps/shim-tcp-udp.c:        inst_data = inst->data;
./ipcps/shim-tcp-udp.c:        spin_lock_init(&inst->data->flow_lock);
./ipcps/shim-tcp-udp.c:        spin_lock_init(&inst->data->app_lock);
./ipcps/shim-tcp-udp.c:        INIT_LIST_HEAD(&(inst->data->flows));
./ipcps/shim-tcp-udp.c:        INIT_LIST_HEAD(&(inst->data->apps));
./ipcps/shim-tcp-udp.c:         * Bind the shim-instance to the shims set, to keep all our data
./ipcps/shim-tcp-udp.c:        INIT_LIST_HEAD(&(inst->data->list));
./ipcps/shim-tcp-udp.c:        list_add(&(inst->data->list), &(data->instances));
./ipcps/shim-tcp-udp.c:        LOG_DBG("Looking for the tcp-udp-ipcp-instance to destroy");
./ipcps/shim-tcp-udp.c:        list_for_each_entry_safe(pos, next, &data->instances, list) {
./ipcps/shim-tcp-udp.c:                if (pos->id == instance->data->id) {
./ipcps/shim-tcp-udp.c:                        list_del(&pos->list);
./ipcps/shim-tcp-udp.c:                        if (pos->qos[0])
./ipcps/shim-tcp-udp.c:                                rkfree(pos->qos[0]);
./ipcps/shim-tcp-udp.c:                        if (pos->qos[1])
./ipcps/shim-tcp-udp.c:                                rkfree(pos->qos[1]);
./ipcps/shim-tcp-udp.c:                        if (pos->qos)
./ipcps/shim-tcp-udp.c:                                rkfree(pos->qos);
./ipcps/shim-tcp-udp.c:                        if (pos->name)
./ipcps/shim-tcp-udp.c:                                name_destroy(pos->name);
./ipcps/shim-tcp-udp.c:                        if (pos->dif_name)
./ipcps/shim-tcp-udp.c:                                name_destroy(pos->dif_name);
./ipcps/shim-tcp-udp.c:                        LOG_DBG("tcp-udp shim instance destroyed, returning");
./ipcps/shim-tcp-udp.c:        return -1;
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        INIT_LIST_HEAD(&app->list);
./ipcps/shim-tcp-udp.c:        app->ip_address = (10 << 24) | (1 << 16) | (1 << 8) | (3);
./ipcps/shim-tcp-udp.c:        app->port = 2325;
./ipcps/shim-tcp-udp.c:        app->app_name = name_create_ni();
./ipcps/shim-tcp-udp.c:        if (!name_init_from_ni(app->app_name,
./ipcps/shim-tcp-udp.c:                name_destroy(app->app_name);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        list_add(&app->list, &applications);
./ipcps/shim-tcp-udp.c:        INIT_LIST_HEAD(&app->list);
./ipcps/shim-tcp-udp.c:        app->ip_address = (10 << 24) | (1 << 16) | (1 << 8) | (2);
./ipcps/shim-tcp-udp.c:        app->port = 2325;
./ipcps/shim-tcp-udp.c:        app->app_name = name_create_ni();
./ipcps/shim-tcp-udp.c:        if (!name_init_from_ni(app->app_name,
./ipcps/shim-tcp-udp.c:                name_destroy(app->app_name);
./ipcps/shim-tcp-udp.c:                return -1;
./ipcps/shim-tcp-udp.c:        list_add(&app->list, &applications);
./ipcps/shim-tcp-udp.c:                list_del(&recvd->list);
./ipcps/shim-tcp-udp.c:                list_del(&app->list);
./ipcps/shim-tcp-udp.c:                name_destroy(app->app_name);
./ipcps/.built-in.o.cmd:cmd_net/rina/ipcps/built-in.o :=  rm -f net/rina/ipcps/built-in.o; ar rcsD net/rina/ipcps/built-in.o
./ipcps/.shim-dummy.o.cmd:cmd_net/rina/ipcps/shim-dummy.o := gcc -Wp,-MD,net/rina/ipcps/.shim-dummy.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -I/home/irati/linux/net/rina/vmpi -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(shim_dummy)"  -D"KBUILD_MODNAME=KBUILD_STR(shim_dummy)" -c -o net/rina/ipcps/.tmp_shim-dummy.o net/rina/ipcps/shim-dummy.c
./ipcps/.shim-dummy.o.cmd:source_net/rina/ipcps/shim-dummy.o := net/rina/ipcps/shim-dummy.c
./ipcps/.shim-dummy.o.cmd:deps_net/rina/ipcps/shim-dummy.o := \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/int-ll64.h \
./ipcps/.shim-dummy.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/bitsperlong.h \
./ipcps/.shim-dummy.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/compiler-gcc.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/compiler-gcc4.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./ipcps/.shim-dummy.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/ptrace.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/bitops/fls64.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/bitops/find.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/bitops/sched.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/bitops/le.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/percpu.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/percpu-defs.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/bug.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/memory_model.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/getorder.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/pgtable-nopud.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/ioctl.h \
./ipcps/.shim-dummy.o.cmd:  include/uapi/asm-generic/ioctl.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/atomic-long.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/pageblock-flags.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/page-flags-layout.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/param.h \
./ipcps/.shim-dummy.o.cmd:  include/uapi/asm-generic/param.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/topology.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/early_ioremap.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/iomap.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/pci_iomap.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/kmap_types.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/fixmap.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/module.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/sections.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/net/rina/ipcp-instances.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/net/rina/ipcp-factories.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/page-debug-flags.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/pgtable.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/page-flags.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/scatterlist.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/dma-mapping.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/dma-attrs.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/dma-direction.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/dma-debug.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/dma-coherent.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/dma-contiguous.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/dma-mapping-common.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/cputime.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/cputime_jiffies.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/siginfo.h \
./ipcps/.shim-dummy.o.cmd:  include/uapi/asm-generic/siginfo.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/resource.h \
./ipcps/.shim-dummy.o.cmd:  include/uapi/asm-generic/resource.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/radix-tree.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/percpu-rwsem.h \
./ipcps/.shim-dummy.o.cmd:  include/asm-generic/delay.h \
./ipcps/.shim-dummy.o.cmd:  include/linux/percpu-refcount.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/net/rina/ipcp-utils.h \
./ipcps/.shim-dummy.o.cmd:  /home/irati/linux/net/rina/ipcp-factories.h \
./ipcps/.shim-dummy.o.cmd:net/rina/ipcps/shim-dummy.o: $(deps_net/rina/ipcps/shim-dummy.o)
./ipcps/.shim-dummy.o.cmd:$(deps_net/rina/ipcps/shim-dummy.o):
./ipcps/unload.sh:set -x
./ipcps/unload.sh:sudo rmmod vmpi-virtio-host
./ipcps/unload.sh:sudo rmmod shim-hv
Binary file ./ipcps/shim-hv.o matches
Binary file ./ipcps/normal-ipcp.ko matches
Binary file ./ipcps/shim-dummy.ko matches
Binary file ./ipcps/vmpi-hl.o matches
./ipcps/.shim-hv-main.o.cmd:cmd_net/rina/ipcps/shim-hv-main.o := gcc -Wp,-MD,net/rina/ipcps/.shim-hv-main.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(shim_hv_main)"  -D"KBUILD_MODNAME=KBUILD_STR(shim_hv)" -c -o net/rina/ipcps/.tmp_shim-hv-main.o net/rina/ipcps/shim-hv-main.c
./ipcps/.shim-hv-main.o.cmd:source_net/rina/ipcps/shim-hv-main.o := net/rina/ipcps/shim-hv-main.c
./ipcps/.shim-hv-main.o.cmd:deps_net/rina/ipcps/shim-hv-main.o := \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/int-ll64.h \
./ipcps/.shim-hv-main.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/bitsperlong.h \
./ipcps/.shim-hv-main.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/compiler-gcc.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/compiler-gcc4.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./ipcps/.shim-hv-main.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/ptrace.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/bitops/fls64.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/bitops/find.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/bitops/sched.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/bitops/le.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/percpu.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/percpu-defs.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/bug.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/memory_model.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/getorder.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/pgtable-nopud.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/ioctl.h \
./ipcps/.shim-hv-main.o.cmd:  include/uapi/asm-generic/ioctl.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/atomic-long.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/pageblock-flags.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/page-flags-layout.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/param.h \
./ipcps/.shim-hv-main.o.cmd:  include/uapi/asm-generic/param.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/topology.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/iomap.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/pci_iomap.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/kmap_types.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/fixmap.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/module.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/net/rina/ipcp-instances.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/net/rina/ipcp-factories.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/page-debug-flags.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/pgtable.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/page-flags.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/scatterlist.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/dma-mapping.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/dma-attrs.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/dma-direction.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/dma-debug.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/dma-coherent.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/dma-contiguous.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/dma-mapping-common.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/cputime.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/cputime_jiffies.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/siginfo.h \
./ipcps/.shim-hv-main.o.cmd:  include/uapi/asm-generic/siginfo.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/resource.h \
./ipcps/.shim-hv-main.o.cmd:  include/uapi/asm-generic/resource.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/radix-tree.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/percpu-rwsem.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/sections.h \
./ipcps/.shim-hv-main.o.cmd:  include/asm-generic/delay.h \
./ipcps/.shim-hv-main.o.cmd:  include/linux/percpu-refcount.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/net/rina/ipcp-utils.h \
./ipcps/.shim-hv-main.o.cmd:  /home/irati/linux/net/rina/ipcp-factories.h \
./ipcps/.shim-hv-main.o.cmd:  net/rina/ipcps/vmpi-ops.h \
./ipcps/.shim-hv-main.o.cmd:  net/rina/ipcps/vmpi-limits.h \
./ipcps/.shim-hv-main.o.cmd:net/rina/ipcps/shim-hv-main.o: $(deps_net/rina/ipcps/shim-hv-main.o)
./ipcps/.shim-hv-main.o.cmd:$(deps_net/rina/ipcps/shim-hv-main.o):
Binary file ./ipcps/shim-hv-main.o matches
./ipcps/.normal-ipcp.o.cmd:cmd_net/rina/ipcps/normal-ipcp.o := gcc -Wp,-MD,net/rina/ipcps/.normal-ipcp.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -I/home/irati/linux/net/rina/vmpi -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(normal_ipcp)"  -D"KBUILD_MODNAME=KBUILD_STR(normal_ipcp)" -c -o net/rina/ipcps/.tmp_normal-ipcp.o net/rina/ipcps/normal-ipcp.c
./ipcps/.normal-ipcp.o.cmd:source_net/rina/ipcps/normal-ipcp.o := net/rina/ipcps/normal-ipcp.c
./ipcps/.normal-ipcp.o.cmd:deps_net/rina/ipcps/normal-ipcp.o := \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/int-ll64.h \
./ipcps/.normal-ipcp.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/bitsperlong.h \
./ipcps/.normal-ipcp.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/compiler-gcc.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/compiler-gcc4.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./ipcps/.normal-ipcp.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/ptrace.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/bitops/fls64.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/bitops/find.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/bitops/sched.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/bitops/le.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/percpu.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/percpu-defs.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/bug.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/memory_model.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/getorder.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/pgtable-nopud.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/ioctl.h \
./ipcps/.normal-ipcp.o.cmd:  include/uapi/asm-generic/ioctl.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/atomic-long.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/pageblock-flags.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/page-flags-layout.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/param.h \
./ipcps/.normal-ipcp.o.cmd:  include/uapi/asm-generic/param.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/topology.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/early_ioremap.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/iomap.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/pci_iomap.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/kmap_types.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/fixmap.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/module.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/sections.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/net/rina/ipcp-instances.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/net/rina/ipcp-factories.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/page-debug-flags.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/pgtable.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/page-flags.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/scatterlist.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/dma-mapping.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/dma-attrs.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/dma-direction.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/dma-debug.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/dma-coherent.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/dma-contiguous.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/dma-mapping-common.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/cputime.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/cputime_jiffies.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/siginfo.h \
./ipcps/.normal-ipcp.o.cmd:  include/uapi/asm-generic/siginfo.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/resource.h \
./ipcps/.normal-ipcp.o.cmd:  include/uapi/asm-generic/resource.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/radix-tree.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/percpu-rwsem.h \
./ipcps/.normal-ipcp.o.cmd:  include/asm-generic/delay.h \
./ipcps/.normal-ipcp.o.cmd:  include/linux/percpu-refcount.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/net/rina/ipcp-utils.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/net/rina/ipcp-factories.h \
./ipcps/.normal-ipcp.o.cmd:  /home/irati/linux/net/rina/efcp-utils.h \
./ipcps/.normal-ipcp.o.cmd:net/rina/ipcps/normal-ipcp.o: $(deps_net/rina/ipcps/normal-ipcp.o)
./ipcps/.normal-ipcp.o.cmd:$(deps_net/rina/ipcps/normal-ipcp.o):
./ipcps/shim-hv.c:#define SHIM_NAME   "shim-hv"
./ipcps/shim-hv.c:#include "ipcp-utils.h"
./ipcps/shim-hv.c:#include "ipcp-factories.h"
./ipcps/shim-hv.c:#include "vmpi-provider.h"
./ipcps/shim-hv.c:        /* In ALLOCATED state, this is the port-id supported by the channel. */
./ipcps/shim-hv.c:/* Per-IPC-process data structure that contains all
./ipcps/shim-hv.c: * the VMPI-related information (among the other).
./ipcps/shim-hv.c:                if (priv->vmpi.channels[i].port_id == port_id)
./ipcps/shim-hv.c:        list_for_each_entry(cur, &(factory_data->instances), list) {
./ipcps/shim-hv.c:                if (cur->id == id) {
./ipcps/shim-hv.c:                return -1;
./ipcps/shim-hv.c:        *len -= sizeof(uint8_t);
./ipcps/shim-hv.c:                return -1;
./ipcps/shim-hv.c:        *len -= sizeof(uint32_t);
./ipcps/shim-hv.c:                l--;
./ipcps/shim-hv.c:                return -1;
./ipcps/shim-hv.c:        l--;
./ipcps/shim-hv.c:        ret = priv->vmpi.ops.write(&priv->vmpi.ops, 0, &iov, 1);
./ipcps/shim-hv.c:        LOG_DBGF("vmpi_write_kernel(0, %d) --> %d",
./ipcps/shim-hv.c:        int err = -ENOMEM;
./ipcps/shim-hv.c:        if (unlikely(!priv->assigned)) {
./ipcps/shim-hv.c:                return -ENOENT;
./ipcps/shim-hv.c:        mutex_lock(&priv->vc_lock);
./ipcps/shim-hv.c:                if (priv->vmpi.channels[ch].state == CHANNEL_STATE_NULL)
./ipcps/shim-hv.c:                err = -EBUSY;
./ipcps/shim-hv.c:        /* Compute the length of the ALLOCATE-REQ message and allocate
./ipcps/shim-hv.c:        priv->vmpi.channels[ch].state = CHANNEL_STATE_PENDING;
./ipcps/shim-hv.c:        priv->vmpi.channels[ch].port_id = port_id;
./ipcps/shim-hv.c:        name_cpy(src_application, &priv->vmpi.channels[ch].application_name);
./ipcps/shim-hv.c:        LOG_DBGF("channel %d --> PENDING", ch);
./ipcps/shim-hv.c:        mutex_unlock(&priv->vc_lock);
./ipcps/shim-hv.c:                if (kfa_flow_deallocate(priv->kfa, port_id))
./ipcps/shim-hv.c:        if (unlikely(!priv->assigned)) {
./ipcps/shim-hv.c:                return -ENOENT;
./ipcps/shim-hv.c:        mutex_lock(&priv->vc_lock);
./ipcps/shim-hv.c:                LOG_ERR("%s: unknown port-id %d", __func__, port_id);
./ipcps/shim-hv.c:                mutex_unlock(&priv->vc_lock);
./ipcps/shim-hv.c:                return -1;
./ipcps/shim-hv.c:        if (priv->vmpi.channels[ch].state != CHANNEL_STATE_PENDING) {
./ipcps/shim-hv.c:                        priv->vmpi.channels[ch].state);
./ipcps/shim-hv.c:                ret = kipcm_flow_commit(default_kipcm, priv->id, port_id);
./ipcps/shim-hv.c:                priv->vmpi.channels[ch].state = CHANNEL_STATE_ALLOCATED;
./ipcps/shim-hv.c:                LOG_DBGF("channel %d --> ALLOCATED", ch);
./ipcps/shim-hv.c:                kfa_flow_deallocate(priv->kfa, port_id);
./ipcps/shim-hv.c:                kfa_port_id_release(priv->kfa, port_id);
./ipcps/shim-hv.c:                priv->vmpi.channels[ch].state = CHANNEL_STATE_NULL;
./ipcps/shim-hv.c:                priv->vmpi.channels[ch].port_id = port_id_bad();
./ipcps/shim-hv.c:                name_fini(&priv->vmpi.channels[ch].application_name);
./ipcps/shim-hv.c:                LOG_DBGF("channel %d --> NULL", ch);
./ipcps/shim-hv.c:        mutex_unlock(&priv->vc_lock);
./ipcps/shim-hv.c:        return (response == RESP_OK) ? 0 : -1;
./ipcps/shim-hv.c:                return -1;
./ipcps/shim-hv.c:                mutex_lock(&priv->vc_lock);
./ipcps/shim-hv.c:        port_id = priv->vmpi.channels[ch].port_id;
./ipcps/shim-hv.c:        if (priv->vmpi.channels[ch].state == CHANNEL_STATE_NULL) {
./ipcps/shim-hv.c:        priv->vmpi.channels[ch].state = CHANNEL_STATE_NULL;
./ipcps/shim-hv.c:        priv->vmpi.channels[ch].port_id = port_id_bad();
./ipcps/shim-hv.c:        name_fini(&priv->vmpi.channels[ch].application_name);
./ipcps/shim-hv.c:        LOG_DBGF("channel %d --> NULL", ch);
./ipcps/shim-hv.c:        ret = kfa_flow_deallocate(priv->kfa, port_id);
./ipcps/shim-hv.c:                mutex_unlock(&priv->vc_lock);
./ipcps/shim-hv.c:        if (unlikely(!priv->assigned)) {
./ipcps/shim-hv.c:                return -ENOENT;
./ipcps/shim-hv.c:        mutex_lock(&priv->vc_lock);
./ipcps/shim-hv.c:         * for this port-id has already been deallocated, so
./ipcps/shim-hv.c:        mutex_unlock(&priv->vc_lock);
./ipcps/shim-hv.c:        int err = -1;
./ipcps/shim-hv.c:        mutex_lock(&priv->vc_lock);
./ipcps/shim-hv.c:        if (priv->vmpi.channels[ch].state != CHANNEL_STATE_NULL) {
./ipcps/shim-hv.c:                        priv->vmpi.channels[ch].state);
./ipcps/shim-hv.c:        port_id = kfa_port_id_reserve(priv->kfa, priv->id);
./ipcps/shim-hv.c:        err = kfa_flow_create(priv->kfa, priv->id, port_id);
./ipcps/shim-hv.c:        err = kipcm_flow_arrived(default_kipcm, priv->id, port_id,
./ipcps/shim-hv.c:                                 &priv->dif_name, src_application,
./ipcps/shim-hv.c:                                 dst_application, &priv->fspec);
./ipcps/shim-hv.c:        priv->vmpi.channels[ch].state = CHANNEL_STATE_PENDING;
./ipcps/shim-hv.c:        priv->vmpi.channels[ch].port_id = port_id;
./ipcps/shim-hv.c:        name_cpy(dst_application, &priv->vmpi.channels[ch].application_name);
./ipcps/shim-hv.c:        LOG_DBGF("channel %d --> PENDING", ch);
./ipcps/shim-hv.c:                kfa_flow_deallocate(priv->kfa, port_id);
./ipcps/shim-hv.c:                kfa_port_id_release(priv->kfa, port_id);
./ipcps/shim-hv.c:        mutex_unlock(&priv->vc_lock);
./ipcps/shim-hv.c:        int ret = -1;
./ipcps/shim-hv.c:        mutex_lock(&priv->vc_lock);
./ipcps/shim-hv.c:        if (priv->vmpi.channels[ch].state != CHANNEL_STATE_PENDING) {
./ipcps/shim-hv.c:                        priv->vmpi.channels[ch].state);
./ipcps/shim-hv.c:        port_id = priv->vmpi.channels[ch].port_id;
./ipcps/shim-hv.c:        ret = kipcm_flow_commit(default_kipcm, priv->id, port_id);
./ipcps/shim-hv.c:        ret = kipcm_notify_flow_alloc_req_result(default_kipcm, priv->id,
./ipcps/shim-hv.c:                priv->vmpi.channels[ch].state = CHANNEL_STATE_ALLOCATED;
./ipcps/shim-hv.c:                LOG_DBGF("channel %d --> ALLOCATED", ch);
./ipcps/shim-hv.c:                priv->vmpi.channels[ch].state = CHANNEL_STATE_NULL;
./ipcps/shim-hv.c:                priv->vmpi.channels[ch].port_id = port_id_bad();
./ipcps/shim-hv.c:                name_fini(&priv->vmpi.channels[ch].application_name);
./ipcps/shim-hv.c:                LOG_DBGF("channel %d --> NULL", ch);
./ipcps/shim-hv.c:                if (kfa_flow_deallocate(priv->kfa, port_id))
./ipcps/shim-hv.c:        mutex_unlock(&priv->vc_lock);
./ipcps/shim-hv.c:        if (unlikely(priv->vmpi.channels[ch].state !=
./ipcps/shim-hv.c:        port_id = priv->vmpi.channels[ch].port_id;
./ipcps/shim-hv.c:        ret = kfa_sdu_post(priv->kfa, port_id, sdu);
./ipcps/shim-hv.c:        int ret = -1;
./ipcps/shim-hv.c:        mutex_lock(&priv->reg_lock);
./ipcps/shim-hv.c:        list_for_each_entry(cur, &priv->registered_applications, list) {
./ipcps/shim-hv.c:                if (name_is_equal(application_name, &cur->application_name)) {
./ipcps/shim-hv.c:        if (name_cpy(application_name, &cur->application_name)) {
./ipcps/shim-hv.c:        list_add(&cur->list, &priv->registered_applications);
./ipcps/shim-hv.c:        mutex_unlock(&priv->reg_lock);
./ipcps/shim-hv.c:        mutex_lock(&priv->reg_lock);
./ipcps/shim-hv.c:        list_for_each_entry(cur, &priv->registered_applications, list) {
./ipcps/shim-hv.c:                if (name_is_equal(application_name, &cur->application_name)) {
./ipcps/shim-hv.c:        name_fini(&found->application_name);
./ipcps/shim-hv.c:        list_del(&found->list);
./ipcps/shim-hv.c:        mutex_unlock(&priv->reg_lock);
./ipcps/shim-hv.c:        mutex_lock(&priv->vc_lock);
./ipcps/shim-hv.c:                                  &priv->vmpi.channels[ch].application_name)) {
./ipcps/shim-hv.c:        mutex_unlock(&priv->vc_lock);
./ipcps/shim-hv.c:        if (priv->assigned) {
./ipcps/shim-hv.c:                ASSERT(priv->dif_name.process_name);
./ipcps/shim-hv.c:                        __func__,  priv->dif_name.process_name);
./ipcps/shim-hv.c:                return -1;
./ipcps/shim-hv.c:        if (name_cpy(dif_information->dif_name, &priv->dif_name)) {
./ipcps/shim-hv.c:                return -1;
./ipcps/shim-hv.c:                        &(dif_information->configuration->ipcp_config_entries),
./ipcps/shim-hv.c:                const struct ipcp_config_entry *entry = elem->entry;
./ipcps/shim-hv.c:                if (!strcmp(entry->name, "vmpi-id")) {
./ipcps/shim-hv.c:                        ASSERT(entry->value);
./ipcps/shim-hv.c:                        ret = kstrtouint(entry->value, 10, &priv->vmpi.id);
./ipcps/shim-hv.c:                                LOG_ERR("%s: Invalid vmpi-id", __func__);
./ipcps/shim-hv.c:                                return -1;
./ipcps/shim-hv.c:                LOG_ERR("%s: Missing vmpi-id configuration parameter",
./ipcps/shim-hv.c:                return -1;
./ipcps/shim-hv.c:         * Try to get the VMPI instance specified by the "vmpi-id"
./ipcps/shim-hv.c:        ret = vmpi_provider_find_instance(VMPI_PROVIDER_AUTO, priv->vmpi.id,
./ipcps/shim-hv.c:                                          &priv->vmpi.ops);
./ipcps/shim-hv.c:                return -1;
./ipcps/shim-hv.c:        ret = priv->vmpi.ops.register_read_callback(&priv->vmpi.ops,
./ipcps/shim-hv.c:                return -1;
./ipcps/shim-hv.c:        priv->assigned = 1;
./ipcps/shim-hv.c:                 priv->id, priv->dif_name.process_name, priv->vmpi.id);
./ipcps/shim-hv.c:        int ret = -1;
./ipcps/shim-hv.c:        if (unlikely(!priv->assigned)) {
./ipcps/shim-hv.c:                LOG_ERR("%s: unknown port-id %d", __func__, port_id);
./ipcps/shim-hv.c:        if (unlikely(priv->vmpi.channels[ch].state !=
./ipcps/shim-hv.c:                        ch, priv->vmpi.channels[ch].state);
./ipcps/shim-hv.c:        n = priv->vmpi.ops.write(&priv->vmpi.ops, ch, &iov, 1);
./ipcps/shim-hv.c:        LOG_DBGF("vmpi_write_kernel(%u, %d) --> %d",
./ipcps/shim-hv.c:        ASSERT(name_is_ok(&priv->name));
./ipcps/shim-hv.c:        return &priv->name;
./ipcps/shim-hv.c:        INIT_LIST_HEAD(&factory_data->instances);
./ipcps/shim-hv.c:        ASSERT(list_empty(&data->instances));
./ipcps/shim-hv.c:        if (!list_empty(&factory_data->instances)) {
./ipcps/shim-hv.c:        ipcp->ops = &shim_hv_ipcp_ops;
./ipcps/shim-hv.c:        ipcp->data = priv = rkzalloc(sizeof(struct ipcp_instance_data),
./ipcps/shim-hv.c:        priv->id = id;
./ipcps/shim-hv.c:        priv->assigned = 0;
./ipcps/shim-hv.c:        bzero(&priv->fspec, sizeof(priv->fspec));
./ipcps/shim-hv.c:        priv->fspec.max_sdu_size      = 2000;   /* XXX Temporary limitation. */
./ipcps/shim-hv.c:        priv->fspec.max_allowable_gap = -1;
./ipcps/shim-hv.c:        if (name_cpy(name, &priv->name)) {
./ipcps/shim-hv.c:        INIT_LIST_HEAD(&priv->registered_applications);
./ipcps/shim-hv.c:        mutex_init(&priv->reg_lock);
./ipcps/shim-hv.c:        mutex_init(&priv->vc_lock);
./ipcps/shim-hv.c:        priv->kfa = kipcm_kfa(default_kipcm);
./ipcps/shim-hv.c:        ASSERT(priv->kfa);
./ipcps/shim-hv.c:        /* Initialize the VMPI-related data structure. */
./ipcps/shim-hv.c:        bzero(&priv->vmpi, sizeof(priv->vmpi));
./ipcps/shim-hv.c:        priv->vmpi.channels = rkzalloc(
./ipcps/shim-hv.c:                        sizeof(priv->vmpi.channels[0]) * vmpi_max_channels,
./ipcps/shim-hv.c:        if (priv->vmpi.channels == NULL) {
./ipcps/shim-hv.c:                priv->vmpi.channels[i].state = CHANNEL_STATE_NULL;
./ipcps/shim-hv.c:                priv->vmpi.channels[i].port_id = port_id_bad();
./ipcps/shim-hv.c:                name_init_with(&priv->vmpi.channels[i].application_name,
./ipcps/shim-hv.c:        priv->vmpi.id = ~0U;
./ipcps/shim-hv.c:        list_add(&priv->list, &factory_data->instances);
./ipcps/shim-hv.c:        name_fini(&priv->name);
./ipcps/shim-hv.c:        list_for_each_entry_safe(cur, next, &factory_data->instances, list) {
./ipcps/shim-hv.c:                if (cur == ipcp->data) {
./ipcps/shim-hv.c:                        list_del(&cur->list);
./ipcps/shim-hv.c:        name_fini(&ipcp->data->name);
./ipcps/shim-hv.c:        kfree(ipcp->data->vmpi.channels);
./ipcps/shim-hv.c:        name_fini(&ipcp->data->dif_name);
./ipcps/shim-hv.c:        LOG_DBGF("ipcp destroyed (id = %d)", ipcp->data->id);
./ipcps/shim-hv.c:        rkfree(ipcp->data);
./ipcps/shim-hv.c:                return -1;
./ipcps/.shim-hv-xen.o.cmd:cmd_net/rina/ipcps/shim-hv-xen.o := ld -m elf_i386   -r -o net/rina/ipcps/shim-hv-xen.o net/rina/ipcps/vmpi-ll-virtio.o net/rina/ipcps/vmpi-hl.o net/rina/ipcps/shim-hv.o 
Binary file ./ipcps/shim-hv-virtio.mod.o matches
Binary file ./ipcps/shim-hv.ko matches
./ipcps/.shim-dummy.ko.cmd:cmd_net/rina/ipcps/shim-dummy.ko := ld -r -m elf_i386 -T /home/irati/linux/scripts/module-common.lds --build-id  -o net/rina/ipcps/shim-dummy.ko net/rina/ipcps/shim-dummy.o net/rina/ipcps/shim-dummy.mod.o
./ipcps/.shim-dummy.mod.o.cmd:cmd_net/rina/ipcps/shim-dummy.mod.o := gcc -Wp,-MD,net/rina/ipcps/.shim-dummy.mod.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(shim_dummy.mod)"  -D"KBUILD_MODNAME=KBUILD_STR(shim_dummy)" -DMODULE  -c -o net/rina/ipcps/shim-dummy.mod.o net/rina/ipcps/shim-dummy.mod.c
./ipcps/.shim-dummy.mod.o.cmd:source_net/rina/ipcps/shim-dummy.mod.o := net/rina/ipcps/shim-dummy.mod.c
./ipcps/.shim-dummy.mod.o.cmd:deps_net/rina/ipcps/shim-dummy.mod.o := \
./ipcps/.shim-dummy.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/int-ll64.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/bitsperlong.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/linux/compiler-gcc.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/linux/compiler-gcc4.h \
./ipcps/.shim-dummy.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./ipcps/.shim-dummy.mod.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./ipcps/.shim-dummy.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./ipcps/.shim-dummy.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./ipcps/.shim-dummy.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/ptrace.h \
./ipcps/.shim-dummy.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/bitops/fls64.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/bitops/find.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/bitops/sched.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/bitops/le.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./ipcps/.shim-dummy.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./ipcps/.shim-dummy.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/percpu.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/linux/percpu-defs.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/bug.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/memory_model.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/getorder.h \
./ipcps/.shim-dummy.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/pgtable-nopud.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./ipcps/.shim-dummy.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/ioctl.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/uapi/asm-generic/ioctl.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/atomic-long.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/linux/pageblock-flags.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/linux/page-flags-layout.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/param.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/uapi/asm-generic/param.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/topology.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/early_ioremap.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/iomap.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/pci_iomap.h \
./ipcps/.shim-dummy.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/kmap_types.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/fixmap.h \
./ipcps/.shim-dummy.mod.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./ipcps/.shim-dummy.mod.o.cmd:  include/asm-generic/module.h \
./ipcps/.shim-dummy.mod.o.cmd:net/rina/ipcps/shim-dummy.mod.o: $(deps_net/rina/ipcps/shim-dummy.mod.o)
./ipcps/.shim-dummy.mod.o.cmd:$(deps_net/rina/ipcps/shim-dummy.mod.o):
Binary file ./ipcps/shim-eth-vlan.o matches
./ipcps/.shim-eth-vlan.mod.o.cmd:cmd_net/rina/ipcps/shim-eth-vlan.mod.o := gcc -Wp,-MD,net/rina/ipcps/.shim-eth-vlan.mod.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(shim_eth_vlan.mod)"  -D"KBUILD_MODNAME=KBUILD_STR(shim_eth_vlan)" -DMODULE  -c -o net/rina/ipcps/shim-eth-vlan.mod.o net/rina/ipcps/shim-eth-vlan.mod.c
./ipcps/.shim-eth-vlan.mod.o.cmd:source_net/rina/ipcps/shim-eth-vlan.mod.o := net/rina/ipcps/shim-eth-vlan.mod.c
./ipcps/.shim-eth-vlan.mod.o.cmd:deps_net/rina/ipcps/shim-eth-vlan.mod.o := \
./ipcps/.shim-eth-vlan.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/int-ll64.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/bitsperlong.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/linux/compiler-gcc.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/linux/compiler-gcc4.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/ptrace.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/bitops/fls64.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/bitops/find.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/bitops/sched.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/bitops/le.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/percpu.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/linux/percpu-defs.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/bug.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/memory_model.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/getorder.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/pgtable-nopud.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/ioctl.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/uapi/asm-generic/ioctl.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/atomic-long.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/linux/pageblock-flags.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/linux/page-flags-layout.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/param.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/uapi/asm-generic/param.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/topology.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/early_ioremap.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/iomap.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/pci_iomap.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/kmap_types.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/fixmap.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:  include/asm-generic/module.h \
./ipcps/.shim-eth-vlan.mod.o.cmd:net/rina/ipcps/shim-eth-vlan.mod.o: $(deps_net/rina/ipcps/shim-eth-vlan.mod.o)
./ipcps/.shim-eth-vlan.mod.o.cmd:$(deps_net/rina/ipcps/shim-eth-vlan.mod.o):
./ipcps/.shim-hv.ko.cmd:cmd_net/rina/ipcps/shim-hv.ko := ld -r -m elf_i386 -T /home/irati/linux/scripts/module-common.lds --build-id  -o net/rina/ipcps/shim-hv.ko net/rina/ipcps/shim-hv.o net/rina/ipcps/shim-hv.mod.o
./ipcps/modules.order:kernel/net/rina/ipcps/normal-ipcp.ko
./ipcps/modules.order:kernel/net/rina/ipcps/shim-dummy.ko
./ipcps/modules.order:kernel/net/rina/ipcps/shim-eth-vlan.ko
Binary file ./ipcps/normal-ipcp.o matches
Binary file ./ipcps/normal-ipcp.mod.o matches
./ipcps/.vmpi-ll-virtio.o.cmd:cmd_net/rina/ipcps/vmpi-ll-virtio.o := gcc -Wp,-MD,net/rina/ipcps/.vmpi-ll-virtio.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(vmpi_ll_virtio)"  -c -o net/rina/ipcps/.tmp_vmpi-ll-virtio.o net/rina/ipcps/vmpi-ll-virtio.c
./ipcps/.vmpi-ll-virtio.o.cmd:source_net/rina/ipcps/vmpi-ll-virtio.o := net/rina/ipcps/vmpi-ll-virtio.c
./ipcps/.vmpi-ll-virtio.o.cmd:deps_net/rina/ipcps/vmpi-ll-virtio.o := \
./ipcps/.vmpi-ll-virtio.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  include/linux/compiler-gcc.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  include/linux/compiler-gcc4.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  include/asm-generic/int-ll64.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  include/asm-generic/bitsperlong.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  include/asm-generic/ptrace.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  include/asm-generic/bitops/fls64.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  include/asm-generic/bitops/find.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  include/asm-generic/bitops/sched.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  include/asm-generic/bitops/le.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./ipcps/.vmpi-ll-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./ipcps/.vmpi-ll-virtio.o.cmd:net/rina/ipcps/vmpi-ll-virtio.o: $(deps_net/rina/ipcps/vmpi-ll-virtio.o)
./ipcps/.vmpi-ll-virtio.o.cmd:$(deps_net/rina/ipcps/vmpi-ll-virtio.o):
./ipcps/.shim-hv.o.cmd:cmd_net/rina/ipcps/shim-hv.o := ld -m elf_i386   -r -o net/rina/ipcps/shim-hv.o net/rina/ipcps/shim-hv-main.o 
Binary file ./ipcps/shim-hv.mod.o matches
./ipcps/shim-dummy.c:#define SHIM_NAME   "shim-dummy"
./ipcps/shim-dummy.c:#include "ipcp-utils.h"
./ipcps/shim-dummy.c:#include "ipcp-factories.h"
./ipcps/shim-dummy.c:        list_for_each_entry(app, &data->apps_registered, list) {
./ipcps/shim-dummy.c:                if (name_is_equal(app->app_name, name)) {
./ipcps/shim-dummy.c:        list_for_each_entry(app, &data->apps_registered, list) {
./ipcps/shim-dummy.c:                if (name_is_equal(app->app_name, name)) {
./ipcps/shim-dummy.c:        list_for_each_entry(flow, &data->flows, list) {
./ipcps/shim-dummy.c:                if (flow->port_id == id || flow->dst_port_id == id) {
./ipcps/shim-dummy.c:        if (!data->info) {
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        if (!data->info->dif_name) {
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:                        tmp, data->id);
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        flow->dest    = name_dup(dest);
./ipcps/shim-dummy.c:        if (!flow->dest) {
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        flow->source = name_dup(source);
./ipcps/shim-dummy.c:        if (!flow->source) {
./ipcps/shim-dummy.c:                name_destroy(flow->dest);
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        ASSERT(flow->dest);
./ipcps/shim-dummy.c:        ASSERT(flow->source);
./ipcps/shim-dummy.c:        flow->state   = PORT_STATE_INITIATOR_ALLOCATE_PENDING;
./ipcps/shim-dummy.c:        flow->port_id = id;
./ipcps/shim-dummy.c:        flow->fspec   = flow_spec_dup(fspec);
./ipcps/shim-dummy.c:        flow->dst_port_id = kfa_port_id_reserve(data->kfa, data->id);
./ipcps/shim-dummy.c:        kfa_flow_create(data->kfa, data->id, flow->dst_port_id);
./ipcps/shim-dummy.c:        ASSERT(is_port_id_ok(flow->dst_port_id));
./ipcps/shim-dummy.c:        INIT_LIST_HEAD(&flow->list);
./ipcps/shim-dummy.c:        list_add(&flow->list, &data->flows);
./ipcps/shim-dummy.c:                               data->id,
./ipcps/shim-dummy.c:                               flow->dst_port_id,
./ipcps/shim-dummy.c:                               data->info->dif_name,
./ipcps/shim-dummy.c:                               flow->source,
./ipcps/shim-dummy.c:                               flow->dest,
./ipcps/shim-dummy.c:                               flow->fspec)) {
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        if (!data->info) {
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        if (!data->info->dif_name) {
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        if (flow->state != PORT_STATE_INITIATOR_ALLOCATE_PENDING) {
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:                flow->dst_port_id = port_id;
./ipcps/shim-dummy.c:                flow->state = PORT_STATE_ALLOCATED;
./ipcps/shim-dummy.c:                                      data->id, flow->port_id)) {
./ipcps/shim-dummy.c:                        list_del(&flow->list);
./ipcps/shim-dummy.c:                        name_destroy(flow->source);
./ipcps/shim-dummy.c:                        name_destroy(flow->dest);
./ipcps/shim-dummy.c:                        return -1;
./ipcps/shim-dummy.c:                                      data->id, port_id)) {
./ipcps/shim-dummy.c:                        kfa_flow_deallocate(data->kfa, port_id);
./ipcps/shim-dummy.c:                        kfa_port_id_release(data->kfa, port_id);
./ipcps/shim-dummy.c:                        list_del(&flow->list);
./ipcps/shim-dummy.c:                        name_destroy(flow->source);
./ipcps/shim-dummy.c:                        name_destroy(flow->dest);
./ipcps/shim-dummy.c:                        return -1;
./ipcps/shim-dummy.c:                                                       data->id,
./ipcps/shim-dummy.c:                                                       flow->port_id,
./ipcps/shim-dummy.c:                        kfa_flow_deallocate(data->kfa, flow->port_id);
./ipcps/shim-dummy.c:                        kfa_flow_deallocate(data->kfa, port_id);
./ipcps/shim-dummy.c:                        list_del(&flow->list);
./ipcps/shim-dummy.c:                        name_destroy(flow->source);
./ipcps/shim-dummy.c:                        name_destroy(flow->dest);
./ipcps/shim-dummy.c:                        return -1;
./ipcps/shim-dummy.c:                                                   data->id,
./ipcps/shim-dummy.c:                                                   flow->port_id,
./ipcps/shim-dummy.c:                list_del(&flow->list);
./ipcps/shim-dummy.c:                name_destroy(flow->source);
./ipcps/shim-dummy.c:                name_destroy(flow->dest);
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        if (id == flow->port_id)
./ipcps/shim-dummy.c:                dest_port_id = flow->dst_port_id;
./ipcps/shim-dummy.c:                dest_port_id = flow->port_id;
./ipcps/shim-dummy.c:        if (kfa_flow_deallocate(data->kfa, id) ||
./ipcps/shim-dummy.c:            kfa_flow_deallocate(data->kfa, dest_port_id)) {
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        kipcm_notify_flow_dealloc(data->id, 0, dest_port_id, 1);
./ipcps/shim-dummy.c:        list_del(&flow->list);
./ipcps/shim-dummy.c:        name_destroy(flow->dest);
./ipcps/shim-dummy.c:        name_destroy(flow->source);
./ipcps/shim-dummy.c:        rkfree(flow->fspec);
./ipcps/shim-dummy.c:        if (!data->info) {
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        if (!data->info->dif_name) {
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        app_reg->app_name = rkzalloc(sizeof(struct name), GFP_KERNEL);
./ipcps/shim-dummy.c:        if (!app_reg->app_name) {
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        if (name_cpy(source, app_reg->app_name)) {
./ipcps/shim-dummy.c:                name_destroy(app_reg->app_name);
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        INIT_LIST_HEAD(&app_reg->list);
./ipcps/shim-dummy.c:        list_add(&app_reg->list, &data->apps_registered);
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        list_del(&app->list);
./ipcps/shim-dummy.c:        name_destroy(app->app_name);
./ipcps/shim-dummy.c:        list_for_each_entry_safe(cur, next, &data->apps_registered, list) {
./ipcps/shim-dummy.c:                list_del(&cur->list);
./ipcps/shim-dummy.c:                name_destroy(cur->app_name);
./ipcps/shim-dummy.c:        ret = ((!data || !data->kfa || !data->sdu) ? false : true);
./ipcps/shim-dummy.c:        tmp->kfa     = kfa;
./ipcps/shim-dummy.c:        tmp->sdu     = sdu;
./ipcps/shim-dummy.c:        tmp->port_id = port_id;
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        if (kfa_sdu_post(tmp->kfa,
./ipcps/shim-dummy.c:                         tmp->port_id,
./ipcps/shim-dummy.c:                         tmp->sdu))
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:         * For the shim-dummy the processing consists of sending the new SDU
./ipcps/shim-dummy.c:         * to the sdu-ready fifo, which will take the ownership of this copy.
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        list_for_each_entry(flow, &data->flows, list) {
./ipcps/shim-dummy.c:                if (flow->port_id == id) {
./ipcps/shim-dummy.c:                        tmp = write_data_create(data->kfa,
./ipcps/shim-dummy.c:                                                flow->dst_port_id);
./ipcps/shim-dummy.c:                                return -1;
./ipcps/shim-dummy.c:                                return -1;
./ipcps/shim-dummy.c:                                return -1;
./ipcps/shim-dummy.c:                if (flow->dst_port_id == id) {
./ipcps/shim-dummy.c:                        tmp = write_data_create(data->kfa,
./ipcps/shim-dummy.c:                                                flow->port_id);
./ipcps/shim-dummy.c:                                return -1;
./ipcps/shim-dummy.c:                                return -1;
./ipcps/shim-dummy.c:                                return -1;
./ipcps/shim-dummy.c:        LOG_ERR("There is no flow allocated for port-id %d", id);
./ipcps/shim-dummy.c:        return -1;
./ipcps/shim-dummy.c:        list_for_each_entry_safe(pos, next, &data->flows, list) {
./ipcps/shim-dummy.c:                list_del(&pos->list);
./ipcps/shim-dummy.c:                name_destroy(pos->dest);
./ipcps/shim-dummy.c:                name_destroy(pos->source);
./ipcps/shim-dummy.c:        INIT_LIST_HEAD(&data->instances);
./ipcps/shim-dummy.c:        dummy_wq = rwq_create("dummy-wq");
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        if (!data->info) {
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        data->info->dif_name = name_dup(dif_information->dif_name);
./ipcps/shim-dummy.c:        if (!data->info->dif_name) {
./ipcps/shim-dummy.c:                char * tmp = name_tostring(dif_information->dif_name);
./ipcps/shim-dummy.c:                rkfree(data->info);
./ipcps/shim-dummy.c:                return -1;
./ipcps/shim-dummy.c:        if (dif_information->configuration) {
./ipcps/shim-dummy.c:                                    &(dif_information->configuration->
./ipcps/shim-dummy.c:                                pos->entry->name,
./ipcps/shim-dummy.c:                                pos->entry->value);
./ipcps/shim-dummy.c:                data->info->dif_name->process_name);
./ipcps/shim-dummy.c:        return -1;
./ipcps/shim-dummy.c:        ASSERT(data->info);
./ipcps/shim-dummy.c:        ASSERT(name_is_ok(data->info->name));
./ipcps/shim-dummy.c:        return data->info->name;
./ipcps/shim-dummy.c:        list_for_each_entry(pos, &(data->instances), list) {
./ipcps/shim-dummy.c:                if (pos->id == id) {
./ipcps/shim-dummy.c:        inst->ops  = &dummy_instance_ops;
./ipcps/shim-dummy.c:        inst->data = rkzalloc(sizeof(struct ipcp_instance_data), GFP_KERNEL);
./ipcps/shim-dummy.c:        if (!inst->data) {
./ipcps/shim-dummy.c:        inst->data->id = id;
./ipcps/shim-dummy.c:        INIT_LIST_HEAD(&inst->data->flows);
./ipcps/shim-dummy.c:        inst->data->info = rkzalloc(sizeof(*inst->data->info), GFP_KERNEL);
./ipcps/shim-dummy.c:        if (!inst->data->info) {
./ipcps/shim-dummy.c:                LOG_ERR("Failed creation of inst->data->info");
./ipcps/shim-dummy.c:                rkfree(inst->data);
./ipcps/shim-dummy.c:        inst->data->info->name = name_dup(name);
./ipcps/shim-dummy.c:        if (!inst->data->info->name) {
./ipcps/shim-dummy.c:                rkfree(inst->data->info);
./ipcps/shim-dummy.c:                rkfree(inst->data);
./ipcps/shim-dummy.c:        inst->data->kfa = kipcm_kfa(default_kipcm);
./ipcps/shim-dummy.c:        LOG_DBG("KFA instance %pK bound to the shim dummy", inst->data->kfa);
./ipcps/shim-dummy.c:         * Bind the shim-instance to the shims set, to keep all our data
./ipcps/shim-dummy.c:        INIT_LIST_HEAD(&inst->data->apps_registered);
./ipcps/shim-dummy.c:        INIT_LIST_HEAD(&(inst->data->list));
./ipcps/shim-dummy.c:        LOG_DBG("Initialization of instance list: %pK", &inst->data->list);
./ipcps/shim-dummy.c:        list_add(&(inst->data->list), &(data->instances));
./ipcps/shim-dummy.c:        list_for_each_entry_safe(pos, next, &data->instances, list) {
./ipcps/shim-dummy.c:                if (pos->id == instance->data->id) {
./ipcps/shim-dummy.c:                        list_del(&pos->list);
./ipcps/shim-dummy.c:                        if (pos->info->dif_name)
./ipcps/shim-dummy.c:                                name_destroy(pos->info->dif_name);
./ipcps/shim-dummy.c:                        if (pos->info->name)
./ipcps/shim-dummy.c:                                name_destroy(pos->info->name);
./ipcps/shim-dummy.c:                        rkfree(pos->info);
./ipcps/shim-dummy.c:        return -1;
./ipcps/shim-dummy.c:                return -1;
Binary file ./ipcps/shim-eth-vlan.ko matches
Binary file ./ipcps/shim-hv-xen.ko matches
Binary file ./ipcps/shim-hv-virtio.ko matches
./ipcps/.shim-eth-vlan.o.cmd:cmd_net/rina/ipcps/shim-eth-vlan.o := gcc -Wp,-MD,net/rina/ipcps/.shim-eth-vlan.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -I/home/irati/linux/net/rina/vmpi -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(shim_eth_vlan)"  -D"KBUILD_MODNAME=KBUILD_STR(shim_eth_vlan)" -c -o net/rina/ipcps/.tmp_shim-eth-vlan.o net/rina/ipcps/shim-eth-vlan.c
./ipcps/.shim-eth-vlan.o.cmd:source_net/rina/ipcps/shim-eth-vlan.o := net/rina/ipcps/shim-eth-vlan.c
./ipcps/.shim-eth-vlan.o.cmd:deps_net/rina/ipcps/shim-eth-vlan.o := \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/int-ll64.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/bitsperlong.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/compiler-gcc.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/compiler-gcc4.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./ipcps/.shim-eth-vlan.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/ptrace.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/bitops/fls64.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/bitops/find.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/bitops/sched.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/bitops/le.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/percpu.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/percpu-defs.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/bug.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/memory_model.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/getorder.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/pgtable-nopud.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/ioctl.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/uapi/asm-generic/ioctl.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/atomic-long.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/pageblock-flags.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/page-flags-layout.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/param.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/uapi/asm-generic/param.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/topology.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/early_ioremap.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/iomap.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/pci_iomap.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/kmap_types.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/fixmap.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/module.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/page-debug-flags.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/pgtable.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/page-flags.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/scatterlist.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/dma-mapping.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/dma-attrs.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/dma-direction.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/dma-debug.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/dma-coherent.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/dma-contiguous.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/dma-mapping-common.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/cputime.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/cputime_jiffies.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/siginfo.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/uapi/asm-generic/siginfo.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/resource.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/uapi/asm-generic/resource.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/delay.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/radix-tree.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/percpu-rwsem.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/asm-generic/sections.h \
./ipcps/.shim-eth-vlan.o.cmd:  include/linux/percpu-refcount.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/net/rina/ipcp-instances.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/net/rina/ipcp-factories.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/net/rina/ipcp-utils.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/net/rina/ipcp-factories.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/net/rina/rinarp/arp826-utils.h \
./ipcps/.shim-eth-vlan.o.cmd:  /home/irati/linux/net/rina/rinarp/arp826-utils.h \
./ipcps/.shim-eth-vlan.o.cmd:net/rina/ipcps/shim-eth-vlan.o: $(deps_net/rina/ipcps/shim-eth-vlan.o)
./ipcps/.shim-eth-vlan.o.cmd:$(deps_net/rina/ipcps/shim-eth-vlan.o):
Binary file ./ipcps/shim-hv-xen.o matches
./ipcps/.shim-hv-virtio.o.cmd:cmd_net/rina/ipcps/shim-hv-virtio.o := ld -m elf_i386   -r -o net/rina/ipcps/shim-hv-virtio.o net/rina/ipcps/vmpi-ll-virtio.o net/rina/ipcps/vmpi-hl.o net/rina/ipcps/shim-hv.o 
./ipcps/.shim-hv-xen.mod.o.cmd:cmd_net/rina/ipcps/shim-hv-xen.mod.o := gcc -Wp,-MD,net/rina/ipcps/.shim-hv-xen.mod.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(shim_hv_xen.mod)"  -D"KBUILD_MODNAME=KBUILD_STR(shim_hv_xen)" -DMODULE  -c -o net/rina/ipcps/shim-hv-xen.mod.o net/rina/ipcps/shim-hv-xen.mod.c
./ipcps/.shim-hv-xen.mod.o.cmd:source_net/rina/ipcps/shim-hv-xen.mod.o := net/rina/ipcps/shim-hv-xen.mod.c
./ipcps/.shim-hv-xen.mod.o.cmd:deps_net/rina/ipcps/shim-hv-xen.mod.o := \
./ipcps/.shim-hv-xen.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/int-ll64.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/bitsperlong.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/linux/compiler-gcc.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/linux/compiler-gcc4.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/ptrace.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/bitops/fls64.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/bitops/find.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/bitops/sched.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/bitops/le.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/percpu.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/linux/percpu-defs.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/bug.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/memory_model.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/getorder.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/pgtable-nopud.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/ioctl.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/uapi/asm-generic/ioctl.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/atomic-long.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/linux/pageblock-flags.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/linux/page-flags-layout.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/param.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/uapi/asm-generic/param.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/topology.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/iomap.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/pci_iomap.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/kmap_types.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/fixmap.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./ipcps/.shim-hv-xen.mod.o.cmd:  include/asm-generic/module.h \
./ipcps/.shim-hv-xen.mod.o.cmd:net/rina/ipcps/shim-hv-xen.mod.o: $(deps_net/rina/ipcps/shim-hv-xen.mod.o)
./ipcps/.shim-hv-xen.mod.o.cmd:$(deps_net/rina/ipcps/shim-hv-xen.mod.o):
Binary file ./ipcps/vmpi-ll-virtio.o matches
./ipcps/.shim-hv.mod.o.cmd:cmd_net/rina/ipcps/shim-hv.mod.o := gcc -Wp,-MD,net/rina/ipcps/.shim-hv.mod.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(shim_hv.mod)"  -D"KBUILD_MODNAME=KBUILD_STR(shim_hv)" -DMODULE  -c -o net/rina/ipcps/shim-hv.mod.o net/rina/ipcps/shim-hv.mod.c
./ipcps/.shim-hv.mod.o.cmd:source_net/rina/ipcps/shim-hv.mod.o := net/rina/ipcps/shim-hv.mod.c
./ipcps/.shim-hv.mod.o.cmd:deps_net/rina/ipcps/shim-hv.mod.o := \
./ipcps/.shim-hv.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/int-ll64.h \
./ipcps/.shim-hv.mod.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/bitsperlong.h \
./ipcps/.shim-hv.mod.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./ipcps/.shim-hv.mod.o.cmd:  include/linux/compiler-gcc.h \
./ipcps/.shim-hv.mod.o.cmd:  include/linux/compiler-gcc4.h \
./ipcps/.shim-hv.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./ipcps/.shim-hv.mod.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./ipcps/.shim-hv.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./ipcps/.shim-hv.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./ipcps/.shim-hv.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/ptrace.h \
./ipcps/.shim-hv.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/bitops/fls64.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/bitops/find.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/bitops/sched.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/bitops/le.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./ipcps/.shim-hv.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./ipcps/.shim-hv.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/percpu.h \
./ipcps/.shim-hv.mod.o.cmd:  include/linux/percpu-defs.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/bug.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/memory_model.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/getorder.h \
./ipcps/.shim-hv.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/pgtable-nopud.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./ipcps/.shim-hv.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/ioctl.h \
./ipcps/.shim-hv.mod.o.cmd:  include/uapi/asm-generic/ioctl.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/atomic-long.h \
./ipcps/.shim-hv.mod.o.cmd:  include/linux/pageblock-flags.h \
./ipcps/.shim-hv.mod.o.cmd:  include/linux/page-flags-layout.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/param.h \
./ipcps/.shim-hv.mod.o.cmd:  include/uapi/asm-generic/param.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/topology.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/iomap.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/pci_iomap.h \
./ipcps/.shim-hv.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/kmap_types.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/fixmap.h \
./ipcps/.shim-hv.mod.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./ipcps/.shim-hv.mod.o.cmd:  include/asm-generic/module.h \
./ipcps/.shim-hv.mod.o.cmd:net/rina/ipcps/shim-hv.mod.o: $(deps_net/rina/ipcps/shim-hv.mod.o)
./ipcps/.shim-hv.mod.o.cmd:$(deps_net/rina/ipcps/shim-hv.mod.o):
./ipcps/.shim-eth-vlan.ko.cmd:cmd_net/rina/ipcps/shim-eth-vlan.ko := ld -r -m elf_i386 -T /home/irati/linux/scripts/module-common.lds --build-id  -o net/rina/ipcps/shim-eth-vlan.ko net/rina/ipcps/shim-eth-vlan.o net/rina/ipcps/shim-eth-vlan.mod.o
./ipcps/.shim-hv-xen.ko.cmd:cmd_net/rina/ipcps/shim-hv-xen.ko := ld -r -m elf_i386 -T /home/irati/linux/scripts/module-common.lds --build-id  -o net/rina/ipcps/shim-hv-xen.ko net/rina/ipcps/shim-hv-xen.o net/rina/ipcps/shim-hv-xen.mod.o
./ipcps/.vmpi-hl.o.cmd:cmd_net/rina/ipcps/vmpi-hl.o := gcc -Wp,-MD,net/rina/ipcps/.vmpi-hl.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(vmpi_hl)"  -c -o net/rina/ipcps/.tmp_vmpi-hl.o net/rina/ipcps/vmpi-hl.c
./ipcps/.vmpi-hl.o.cmd:source_net/rina/ipcps/vmpi-hl.o := net/rina/ipcps/vmpi-hl.c
./ipcps/.vmpi-hl.o.cmd:deps_net/rina/ipcps/vmpi-hl.o := \
./ipcps/.vmpi-hl.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./ipcps/.vmpi-hl.o.cmd:  include/linux/compiler-gcc.h \
./ipcps/.vmpi-hl.o.cmd:  include/linux/compiler-gcc4.h \
./ipcps/.vmpi-hl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./ipcps/.vmpi-hl.o.cmd:  include/asm-generic/int-ll64.h \
./ipcps/.vmpi-hl.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./ipcps/.vmpi-hl.o.cmd:  include/asm-generic/bitsperlong.h \
./ipcps/.vmpi-hl.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./ipcps/.vmpi-hl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./ipcps/.vmpi-hl.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./ipcps/.vmpi-hl.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./ipcps/.vmpi-hl.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./ipcps/.vmpi-hl.o.cmd:  include/asm-generic/ptrace.h \
./ipcps/.vmpi-hl.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./ipcps/.vmpi-hl.o.cmd:  include/asm-generic/bitops/fls64.h \
./ipcps/.vmpi-hl.o.cmd:  include/asm-generic/bitops/find.h \
./ipcps/.vmpi-hl.o.cmd:  include/asm-generic/bitops/sched.h \
./ipcps/.vmpi-hl.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./ipcps/.vmpi-hl.o.cmd:  include/asm-generic/bitops/le.h \
./ipcps/.vmpi-hl.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./ipcps/.vmpi-hl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./ipcps/.vmpi-hl.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./ipcps/.vmpi-hl.o.cmd:net/rina/ipcps/vmpi-hl.o: $(deps_net/rina/ipcps/vmpi-hl.o)
./ipcps/.vmpi-hl.o.cmd:$(deps_net/rina/ipcps/vmpi-hl.o):
Binary file ./ipcps/shim-hv-xen.mod.o matches
./ipcps/load.sh:set -x
./ipcps/load.sh:sudo insmod ./shim-hv.ko
./ipcps/load.sh:sudo insmod ../vmpi/vmpi-virtio-host.ko
./ipcps/load.sh:sudo chmod a+rwx /dev/vhost-mpi
./ipcps/normal-ipcp.c:#define IPCP_NAME   "normal-ipc"
./ipcps/normal-ipcp.c:#include "ipcp-utils.h"
./ipcps/normal-ipcp.c:#include "ipcp-factories.h"
./ipcps/normal-ipcp.c:#include "efcp-utils.h"
./ipcps/normal-ipcp.c:        list_for_each_entry(flow, &(data->flows), list) {
./ipcps/normal-ipcp.c:                if (flow->port_id == port_id)
./ipcps/normal-ipcp.c:        INIT_LIST_HEAD(&data->instances);
./ipcps/normal-ipcp.c:        ASSERT(list_empty(&data->instances));
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        if (efcp_container_write(data->efcpc, flow->active, sdu)) {
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        list_for_each_entry(pos, &(data->instances), list) {
./ipcps/normal-ipcp.c:                if (pos->id == id) {
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        conn->destination_address = dest;
./ipcps/normal-ipcp.c:        conn->source_address      = source;
./ipcps/normal-ipcp.c:        conn->port_id             = port_id;
./ipcps/normal-ipcp.c:        conn->qos_id              = qos_id;
./ipcps/normal-ipcp.c:        conn->policies_params     = cp_params;
./ipcps/normal-ipcp.c:        cep_id = efcp_connection_create(data->efcpc, conn);
./ipcps/normal-ipcp.c:                efcp_connection_destroy(data->efcpc, cep_id);
./ipcps/normal-ipcp.c:        INIT_LIST_HEAD(&cep_entry->list);
./ipcps/normal-ipcp.c:        cep_entry->cep_id = cep_id;
./ipcps/normal-ipcp.c:                        LOG_ERR("Could not create a flow in normal-ipcp");
./ipcps/normal-ipcp.c:                        efcp_connection_destroy(data->efcpc, cep_id);
./ipcps/normal-ipcp.c:                flow->port_id = port_id;
./ipcps/normal-ipcp.c:                INIT_LIST_HEAD(&flow->list);
./ipcps/normal-ipcp.c:                INIT_LIST_HEAD(&flow->cep_ids_list);
./ipcps/normal-ipcp.c:                list_add(&flow->list, &data->flows);
./ipcps/normal-ipcp.c:        list_add(&cep_entry->list, &flow->cep_ids_list);
./ipcps/normal-ipcp.c:        flow->active = cep_id;
./ipcps/normal-ipcp.c:        if (efcp_connection_update(data->efcpc, src_cep_id, dst_cep_id))
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        if (kipcm_flow_commit(default_kipcm, data->id, port_id)) {
./ipcps/normal-ipcp.c:                efcp_connection_destroy(data->efcpc, src_cep_id);
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        list_for_each_entry(pos, &(data->flows), list) {
./ipcps/normal-ipcp.c:                if (pos->active == id) {
./ipcps/normal-ipcp.c:        list_for_each_entry_safe(pos, next, &(flow->cep_ids_list), list) {
./ipcps/normal-ipcp.c:                if (pos->cep_id == id) {
./ipcps/normal-ipcp.c:                        list_del(&pos->list);
./ipcps/normal-ipcp.c:        return -1;
./ipcps/normal-ipcp.c:        if (kfa_flow_rmt_bind(data->kfa, pid, data->rmt))
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        if (rmt_n1port_bind(data->rmt, pid))
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        if (efcp_connection_destroy(data->efcpc, src_cep_id))
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        if (!(&data->flows))
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        if (list_empty(&flow->cep_ids_list))
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        conn->destination_address = dest;
./ipcps/normal-ipcp.c:        conn->source_address      = source;
./ipcps/normal-ipcp.c:        conn->port_id             = port_id;
./ipcps/normal-ipcp.c:        conn->qos_id              = qos_id;
./ipcps/normal-ipcp.c:        conn->destination_cep_id  = dst_cep_id;
./ipcps/normal-ipcp.c:        conn->policies_params     = cp_params;
./ipcps/normal-ipcp.c:        cep_id = efcp_connection_create(data->efcpc, conn);
./ipcps/normal-ipcp.c:        if (kipcm_flow_commit(default_kipcm, data->id, port_id)) {
./ipcps/normal-ipcp.c:                efcp_connection_destroy(data->efcpc, cep_id);
./ipcps/normal-ipcp.c:                efcp_connection_destroy(data->efcpc, cep_id);
./ipcps/normal-ipcp.c:        INIT_LIST_HEAD(&cep_entry->list);
./ipcps/normal-ipcp.c:        cep_entry->cep_id = cep_id;
./ipcps/normal-ipcp.c:                        LOG_ERR("Could not create a flow in normal-ipcp");
./ipcps/normal-ipcp.c:                        efcp_connection_destroy(data->efcpc, cep_id);
./ipcps/normal-ipcp.c:                flow->port_id = port_id;
./ipcps/normal-ipcp.c:                INIT_LIST_HEAD(&flow->list);
./ipcps/normal-ipcp.c:                INIT_LIST_HEAD(&flow->cep_ids_list);
./ipcps/normal-ipcp.c:                list_add(&flow->list, &data->flows);
./ipcps/normal-ipcp.c:        list_add(&cep_entry->list, &flow->cep_ids_list);
./ipcps/normal-ipcp.c:        flow->active = cep_id;
./ipcps/normal-ipcp.c:        list_for_each_entry_safe(pos, next, &flow->cep_ids_list, list){
./ipcps/normal-ipcp.c:                efcp_connection_destroy(data->efcpc, pos->cep_id);
./ipcps/normal-ipcp.c:                list_del(&pos->list);
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        list_del(&flow->list);
./ipcps/normal-ipcp.c:        data->info->dif_name = name_dup(dif_information->dif_name);
./ipcps/normal-ipcp.c:        data->address        = dif_information->configuration->address;
./ipcps/normal-ipcp.c:        if (rmt_address_set(data->rmt, data->address))
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        efcp_config = dif_information->configuration->efcp_config;
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        if(!efcp_config->dt_cons) {
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        efcp_container_set_config(efcp_config, data->efcpc);
./ipcps/normal-ipcp.c:            (mgmt_data->state == MGMT_DATA_DESTROYED) ||
./ipcps/normal-ipcp.c:            !mgmt_data->sdu_ready                     ||
./ipcps/normal-ipcp.c:            !rfifo_is_empty(mgmt_data->sdu_ready))
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        if (data->sdu_ready)
./ipcps/normal-ipcp.c:                rfifo_destroy(data->sdu_ready,
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        LOG_DBG("Trying to read mgmt SDU from IPC Process %d", data->id);
./ipcps/normal-ipcp.c:        mgmt_data = data->mgmt_data;
./ipcps/normal-ipcp.c:                LOG_ERR("No normal_mgmt data in IPC Process %d", data->id);
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        spin_lock(&mgmt_data->lock);
./ipcps/normal-ipcp.c:        if (mgmt_data->state == MGMT_DATA_DESTROYED) {
./ipcps/normal-ipcp.c:                LOG_DBG("IPCP %d is being destroyed", data->id);
./ipcps/normal-ipcp.c:                spin_unlock(&mgmt_data->lock);
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        atomic_inc(&mgmt_data->readers);
./ipcps/normal-ipcp.c:        while (rfifo_is_empty(mgmt_data->sdu_ready)) {
./ipcps/normal-ipcp.c:                spin_unlock(&mgmt_data->lock);
./ipcps/normal-ipcp.c:                retval = wait_event_interruptible(mgmt_data->wait_q,
./ipcps/normal-ipcp.c:                if (!mgmt_data  || !mgmt_data->sdu_ready) {
./ipcps/normal-ipcp.c:                        return -1;
./ipcps/normal-ipcp.c:                spin_lock(&mgmt_data->lock);
./ipcps/normal-ipcp.c:                if (mgmt_data->state == MGMT_DATA_DESTROYED) {
./ipcps/normal-ipcp.c:        if (rfifo_is_empty(mgmt_data->sdu_ready)) {
./ipcps/normal-ipcp.c:                retval = -1;
./ipcps/normal-ipcp.c:        *sdu_wpi = rfifo_pop(mgmt_data->sdu_ready);
./ipcps/normal-ipcp.c:                retval = -1;
./ipcps/normal-ipcp.c:        if (atomic_dec_and_test(&mgmt_data->readers) &&
./ipcps/normal-ipcp.c:            (mgmt_data->state == MGMT_DATA_DESTROYED)) {
./ipcps/normal-ipcp.c:                spin_unlock(&mgmt_data->lock);
./ipcps/normal-ipcp.c:        spin_unlock(&mgmt_data->lock);
./ipcps/normal-ipcp.c:        LOG_DBG("Passing SDU to be written to N-1 port %d "
./ipcps/normal-ipcp.c:                "from IPC Process %d", port_id, data->id);
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:                       data->address,
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:                if (rmt_send(data->rmt,
./ipcps/normal-ipcp.c:                        return -1;
./ipcps/normal-ipcp.c:                if (rmt_send_port_id(data->rmt,
./ipcps/normal-ipcp.c:                        return -1;
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        if (!data->mgmt_data) {
./ipcps/normal-ipcp.c:                LOG_ERR("No mgmt data for IPCP %d", data->id);
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        if (data->mgmt_data->state == MGMT_DATA_DESTROYED) {
./ipcps/normal-ipcp.c:                LOG_ERR("IPCP %d is being destroyed", data->id);
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        tmp->port_id = port_id;
./ipcps/normal-ipcp.c:        tmp->sdu     = sdu;
./ipcps/normal-ipcp.c:        spin_lock(&data->mgmt_data->lock);
./ipcps/normal-ipcp.c:        if (rfifo_push_ni(data->mgmt_data->sdu_ready,
./ipcps/normal-ipcp.c:                spin_unlock(&data->mgmt_data->lock);
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        spin_unlock(&data->mgmt_data->lock);
./ipcps/normal-ipcp.c:        wake_up_all(&data->mgmt_data->wait_q);
./ipcps/normal-ipcp.c:        return rmt_pft_add(data->rmt,
./ipcps/normal-ipcp.c:        return rmt_pft_remove(data->rmt,
./ipcps/normal-ipcp.c:        return rmt_pft_dump(data->rmt,
./ipcps/normal-ipcp.c:        return rmt_pft_flush(data->rmt);
./ipcps/normal-ipcp.c:        ASSERT(data->info);
./ipcps/normal-ipcp.c:        ASSERT(name_is_ok(data->info->name));
./ipcps/normal-ipcp.c:        return data->info->name;
./ipcps/normal-ipcp.c:        data->state     = MGMT_DATA_READY;
./ipcps/normal-ipcp.c:        data->sdu_ready = rfifo_create();
./ipcps/normal-ipcp.c:        if (!data->sdu_ready) {
./ipcps/normal-ipcp.c:        init_waitqueue_head(&data->wait_q);
./ipcps/normal-ipcp.c:        spin_lock_init(&data->lock);
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        spin_lock(&data->lock);
./ipcps/normal-ipcp.c:        data->state = MGMT_DATA_DESTROYED;
./ipcps/normal-ipcp.c:        if ((atomic_read(&data->readers) == 0)) {
./ipcps/normal-ipcp.c:                spin_unlock(&data->lock);
./ipcps/normal-ipcp.c:        spin_unlock(&data->lock);
./ipcps/normal-ipcp.c:        wake_up_all(&data->wait_q);
./ipcps/normal-ipcp.c:        instance->ops  = &normal_instance_ops;
./ipcps/normal-ipcp.c:        instance->data = rkzalloc(sizeof(struct ipcp_instance_data),
./ipcps/normal-ipcp.c:        if (!instance->data) {
./ipcps/normal-ipcp.c:        instance->data->id      = id;
./ipcps/normal-ipcp.c:        instance->data->nl_port = data->nl_port;
./ipcps/normal-ipcp.c:        instance->data->info    = rkzalloc(sizeof(struct normal_info),
./ipcps/normal-ipcp.c:        if (!instance->data->info) {
./ipcps/normal-ipcp.c:                rkfree(instance->data);
./ipcps/normal-ipcp.c:        instance->data->info->name = name_dup(name);
./ipcps/normal-ipcp.c:        if (!instance->data->info->name) {
./ipcps/normal-ipcp.c:                rkfree(instance->data->info);
./ipcps/normal-ipcp.c:                rkfree(instance->data);
./ipcps/normal-ipcp.c:        instance->data->kfa = kipcm_kfa(default_kipcm);
./ipcps/normal-ipcp.c:        instance->data->efcpc = efcp_container_create(instance->data->kfa);
./ipcps/normal-ipcp.c:        if (!instance->data->efcpc) {
./ipcps/normal-ipcp.c:                name_destroy(instance->data->info->name);
./ipcps/normal-ipcp.c:                rkfree(instance->data->info);
./ipcps/normal-ipcp.c:                rkfree(instance->data);
./ipcps/normal-ipcp.c:        instance->data->rmt = rmt_create(instance,
./ipcps/normal-ipcp.c:                                         instance->data->kfa,
./ipcps/normal-ipcp.c:                                         instance->data->efcpc);
./ipcps/normal-ipcp.c:        if (!instance->data->rmt) {
./ipcps/normal-ipcp.c:                efcp_container_destroy(instance->data->efcpc);
./ipcps/normal-ipcp.c:                name_destroy(instance->data->info->name);
./ipcps/normal-ipcp.c:                rkfree(instance->data->info);
./ipcps/normal-ipcp.c:                rkfree(instance->data);
./ipcps/normal-ipcp.c:        if (efcp_bind_rmt(instance->data->efcpc, instance->data->rmt)) {
./ipcps/normal-ipcp.c:                rmt_destroy(instance->data->rmt);
./ipcps/normal-ipcp.c:                efcp_container_destroy(instance->data->efcpc);
./ipcps/normal-ipcp.c:                name_destroy(instance->data->info->name);
./ipcps/normal-ipcp.c:                rkfree(instance->data->info);
./ipcps/normal-ipcp.c:                rkfree(instance->data);
./ipcps/normal-ipcp.c:        instance->data->mgmt_data = normal_mgmt_data_create();
./ipcps/normal-ipcp.c:        if (!instance->data->mgmt_data) {
./ipcps/normal-ipcp.c:                rmt_destroy(instance->data->rmt);
./ipcps/normal-ipcp.c:                efcp_container_destroy(instance->data->efcpc);
./ipcps/normal-ipcp.c:                name_destroy(instance->data->info->name);
./ipcps/normal-ipcp.c:                rkfree(instance->data->info);
./ipcps/normal-ipcp.c:                rkfree(instance->data);
./ipcps/normal-ipcp.c:        INIT_LIST_HEAD(&instance->data->flows);
./ipcps/normal-ipcp.c:        INIT_LIST_HEAD(&instance->data->list);
./ipcps/normal-ipcp.c:        list_add(&(instance->data->list), &(data->instances));
./ipcps/normal-ipcp.c:        list_for_each_entry_safe(flow, next, &(data->flows), list) {
./ipcps/normal-ipcp.c:                                "in flow %d", flow->port_id);
./ipcps/normal-ipcp.c:                if (kfa_port_id_release(data->kfa, flow->port_id))
./ipcps/normal-ipcp.c:                                "could not be destroyed", flow->port_id, data->id);
./ipcps/normal-ipcp.c:                list_del(&flow->list);
./ipcps/normal-ipcp.c:        tmp = find_instance(data, instance->data->id);
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        list_del(&tmp->list);
./ipcps/normal-ipcp.c:                return -1;
./ipcps/normal-ipcp.c:        if (tmp->info) {
./ipcps/normal-ipcp.c:                if (tmp->info->dif_name)
./ipcps/normal-ipcp.c:                        name_destroy(tmp->info->dif_name);
./ipcps/normal-ipcp.c:                if (tmp->info->name)
./ipcps/normal-ipcp.c:                        name_destroy(tmp->info->name);
./ipcps/normal-ipcp.c:                rkfree(tmp->info);
./ipcps/normal-ipcp.c:        efcp_container_destroy(tmp->efcpc);
./ipcps/normal-ipcp.c:        rmt_destroy(tmp->rmt);
./ipcps/normal-ipcp.c:        mgmt_data_destroy(tmp->mgmt_data);
./ipcps/normal-ipcp.c:                return -1;
./ipcps/.normal-ipcp.mod.o.cmd:cmd_net/rina/ipcps/normal-ipcp.mod.o := gcc -Wp,-MD,net/rina/ipcps/.normal-ipcp.mod.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(normal_ipcp.mod)"  -D"KBUILD_MODNAME=KBUILD_STR(normal_ipcp)" -DMODULE  -c -o net/rina/ipcps/normal-ipcp.mod.o net/rina/ipcps/normal-ipcp.mod.c
./ipcps/.normal-ipcp.mod.o.cmd:source_net/rina/ipcps/normal-ipcp.mod.o := net/rina/ipcps/normal-ipcp.mod.c
./ipcps/.normal-ipcp.mod.o.cmd:deps_net/rina/ipcps/normal-ipcp.mod.o := \
./ipcps/.normal-ipcp.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/int-ll64.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/bitsperlong.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/linux/compiler-gcc.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/linux/compiler-gcc4.h \
./ipcps/.normal-ipcp.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./ipcps/.normal-ipcp.mod.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./ipcps/.normal-ipcp.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./ipcps/.normal-ipcp.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./ipcps/.normal-ipcp.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/ptrace.h \
./ipcps/.normal-ipcp.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/bitops/fls64.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/bitops/find.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/bitops/sched.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/bitops/le.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./ipcps/.normal-ipcp.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./ipcps/.normal-ipcp.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/percpu.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/linux/percpu-defs.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/bug.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/memory_model.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/getorder.h \
./ipcps/.normal-ipcp.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/pgtable-nopud.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./ipcps/.normal-ipcp.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/ioctl.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/uapi/asm-generic/ioctl.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/atomic-long.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/linux/pageblock-flags.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/linux/page-flags-layout.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/param.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/uapi/asm-generic/param.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/topology.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/early_ioremap.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/iomap.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/pci_iomap.h \
./ipcps/.normal-ipcp.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/kmap_types.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/fixmap.h \
./ipcps/.normal-ipcp.mod.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./ipcps/.normal-ipcp.mod.o.cmd:  include/asm-generic/module.h \
./ipcps/.normal-ipcp.mod.o.cmd:net/rina/ipcps/normal-ipcp.mod.o: $(deps_net/rina/ipcps/normal-ipcp.mod.o)
./ipcps/.normal-ipcp.mod.o.cmd:$(deps_net/rina/ipcps/normal-ipcp.mod.o):
Binary file ./ipcps/shim-eth-vlan.mod.o matches
Binary file ./ipcps/shim-dummy.o matches
./ipcps/.shim-hv-virtio.ko.cmd:cmd_net/rina/ipcps/shim-hv-virtio.ko := ld -r -m elf_i386 -T /home/irati/linux/scripts/module-common.lds --build-id  -o net/rina/ipcps/shim-hv-virtio.ko net/rina/ipcps/shim-hv-virtio.o net/rina/ipcps/shim-hv-virtio.mod.o
./ipcps/Makefile:ccflags-y += -I$(srctree)/net/rina
./ipcps/Makefile:ccflags-y += -I$(srctree)/net/rina/vmpi
./ipcps/Makefile:ccflags-y += -Wtype-limits
./ipcps/Makefile:obj-$(CONFIG_RINA_NORMAL_IPCP)    += normal-ipcp.o
./ipcps/Makefile:obj-$(CONFIG_RINA_SHIM_DUMMY)     += shim-dummy.o
./ipcps/Makefile:obj-$(CONFIG_RINA_SHIM_ETH_VLAN)  += shim-eth-vlan.o
./ipcps/Makefile:obj-$(CONFIG_RINA_SHIM_TCP_UDP)   += shim-tcp-udp.o
./ipcps/Makefile:obj-$(CONFIG_RINA_SHIM_HV)        += shim-hv.o
./ipcps/.shim-hv-virtio.mod.o.cmd:cmd_net/rina/ipcps/shim-hv-virtio.mod.o := gcc -Wp,-MD,net/rina/ipcps/.shim-hv-virtio.mod.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(shim_hv_virtio.mod)"  -D"KBUILD_MODNAME=KBUILD_STR(shim_hv_virtio)" -DMODULE  -c -o net/rina/ipcps/shim-hv-virtio.mod.o net/rina/ipcps/shim-hv-virtio.mod.c
./ipcps/.shim-hv-virtio.mod.o.cmd:source_net/rina/ipcps/shim-hv-virtio.mod.o := net/rina/ipcps/shim-hv-virtio.mod.c
./ipcps/.shim-hv-virtio.mod.o.cmd:deps_net/rina/ipcps/shim-hv-virtio.mod.o := \
./ipcps/.shim-hv-virtio.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/int-ll64.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/bitsperlong.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/linux/compiler-gcc.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/linux/compiler-gcc4.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/ptrace.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/bitops/fls64.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/bitops/find.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/bitops/sched.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/bitops/le.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/percpu.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/linux/percpu-defs.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/bug.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/memory_model.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/getorder.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/pgtable-nopud.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/ioctl.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/uapi/asm-generic/ioctl.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/atomic-long.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/linux/pageblock-flags.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/linux/page-flags-layout.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/param.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/uapi/asm-generic/param.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/topology.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/iomap.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/pci_iomap.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/kmap_types.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/fixmap.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:  include/asm-generic/module.h \
./ipcps/.shim-hv-virtio.mod.o.cmd:net/rina/ipcps/shim-hv-virtio.mod.o: $(deps_net/rina/ipcps/shim-hv-virtio.mod.o)
./ipcps/.shim-hv-virtio.mod.o.cmd:$(deps_net/rina/ipcps/shim-hv-virtio.mod.o):
./ipcps/shim-eth-vlan.c:#define SHIM_NAME   "shim-eth-vlan"
./ipcps/shim-eth-vlan.c:#include "ipcp-utils.h"
./ipcps/shim-eth-vlan.c:#include "ipcp-factories.h"
./ipcps/shim-eth-vlan.c:#include "rinarp/arp826-utils.h"
./ipcps/shim-eth-vlan.c:        /* The IPC Process using the shim-eth-vlan */
./ipcps/shim-eth-vlan.c:                if (mapping->dev == dev) {
./ipcps/shim-eth-vlan.c:        spin_lock(&data->lock);
./ipcps/shim-eth-vlan.c:        list_for_each_entry(flow, &data->flows, list) {
./ipcps/shim-eth-vlan.c:                if (flow->port_id == id) {
./ipcps/shim-eth-vlan.c:                        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:        list_for_each_entry(flow, &data->flows, list) {
./ipcps/shim-eth-vlan.c:                if (gha_is_equal(addr, flow->dest_ha)) {
./ipcps/shim-eth-vlan.c:        spin_lock(&data->lock);
./ipcps/shim-eth-vlan.c:        list_for_each_entry(flow, &data->flows, list) {
./ipcps/shim-eth-vlan.c:                if (gpa_is_equal(addr, flow->dest_pa)) {
./ipcps/shim-eth-vlan.c:                        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                LOG_ERR("Wrong vlan-id %d", vlan_id);
./ipcps/shim-eth-vlan.c:        complete_interface[length - 1] = 0; /* Final terminator */
./ipcps/shim-eth-vlan.c:        LOG_DBG("Complete vlan-interface-name = '%s'", complete_interface);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        spin_lock(&data->lock);
./ipcps/shim-eth-vlan.c:        if (!list_empty(&flow->list)) {
./ipcps/shim-eth-vlan.c:                list_del(&flow->list);
./ipcps/shim-eth-vlan.c:        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:        if (flow->dest_pa) gpa_destroy(flow->dest_pa);
./ipcps/shim-eth-vlan.c:        if (flow->dest_ha) gha_destroy(flow->dest_ha);
./ipcps/shim-eth-vlan.c:        if (flow->sdu_queue)
./ipcps/shim-eth-vlan.c:                rfifo_destroy(flow->sdu_queue, (void (*)(void *)) pdu_destroy);
./ipcps/shim-eth-vlan.c:        if (kfa_flow_deallocate(data->kfa, flow->port_id))
./ipcps/shim-eth-vlan.c:                LOG_ERR("Failed to destroy shim-eth-vlan flow");
./ipcps/shim-eth-vlan.c:        LOG_DBG("Entered the ARP resolve handler of the shim-eth");
./ipcps/shim-eth-vlan.c:        spin_lock(&data->lock);
./ipcps/shim-eth-vlan.c:        if (flow->port_id_state == PORT_STATE_PENDING) {
./ipcps/shim-eth-vlan.c:                flow->port_id_state = PORT_STATE_ALLOCATED;
./ipcps/shim-eth-vlan.c:                spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                flow->dest_ha = gha_dup_ni(dest_ha);
./ipcps/shim-eth-vlan.c:                                      data->id, flow->port_id)) {
./ipcps/shim-eth-vlan.c:                ASSERT(flow->sdu_queue);
./ipcps/shim-eth-vlan.c:                while (!rfifo_is_empty(flow->sdu_queue)) {
./ipcps/shim-eth-vlan.c:                        tmp = rfifo_pop(flow->sdu_queue);
./ipcps/shim-eth-vlan.c:                        if (kfa_sdu_post(data->kfa, flow->port_id, tmp)) {
./ipcps/shim-eth-vlan.c:                rfifo_destroy(flow->sdu_queue, (void (*)(void *)) pdu_destroy);
./ipcps/shim-eth-vlan.c:                flow->sdu_queue = NULL;
./ipcps/shim-eth-vlan.c:                                                       data->id,
./ipcps/shim-eth-vlan.c:                                                       flow->port_id,
./ipcps/shim-eth-vlan.c:                spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:        if (!data->app_name || !name_is_equal(source, data->app_name)) {
./ipcps/shim-eth-vlan.c:                if (kfa_flow_deallocate(data->kfa, id))
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:                        return -1;
./ipcps/shim-eth-vlan.c:                flow->port_id       = id;
./ipcps/shim-eth-vlan.c:                flow->port_id_state = PORT_STATE_PENDING;
./ipcps/shim-eth-vlan.c:                flow->dest_pa       = name_to_gpa(dest);
./ipcps/shim-eth-vlan.c:                if (!gpa_is_ok(flow->dest_pa)) {
./ipcps/shim-eth-vlan.c:                        return -1;
./ipcps/shim-eth-vlan.c:                INIT_LIST_HEAD(&flow->list);
./ipcps/shim-eth-vlan.c:                spin_lock(&data->lock);
./ipcps/shim-eth-vlan.c:                list_add(&flow->list, &data->flows);
./ipcps/shim-eth-vlan.c:                spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                flow->sdu_queue = rfifo_create();
./ipcps/shim-eth-vlan.c:                if (!flow->sdu_queue) {
./ipcps/shim-eth-vlan.c:                        return -1;
./ipcps/shim-eth-vlan.c:                if (rinarp_resolve_gpa(data->handle,
./ipcps/shim-eth-vlan.c:                                       flow->dest_pa,
./ipcps/shim-eth-vlan.c:                        return -1;
./ipcps/shim-eth-vlan.c:        } else if (flow->port_id_state == PORT_STATE_PENDING) {
./ipcps/shim-eth-vlan.c:                LOG_ERR("Port-id state is already pending ...");
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        spin_lock(&data->lock);
./ipcps/shim-eth-vlan.c:        if (flow->port_id_state != PORT_STATE_PENDING) {
./ipcps/shim-eth-vlan.c:                spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                flow->port_id = port_id;
./ipcps/shim-eth-vlan.c:                if (kipcm_flow_commit(default_kipcm, data->id,
./ipcps/shim-eth-vlan.c:                                      flow->port_id)) {
./ipcps/shim-eth-vlan.c:                        return -1;
./ipcps/shim-eth-vlan.c:                spin_lock(&data->lock);
./ipcps/shim-eth-vlan.c:                flow->port_id_state = PORT_STATE_ALLOCATED;
./ipcps/shim-eth-vlan.c:                spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                ASSERT(flow->sdu_queue);
./ipcps/shim-eth-vlan.c:                while (!rfifo_is_empty(flow->sdu_queue)) {
./ipcps/shim-eth-vlan.c:                        tmp = rfifo_pop(flow->sdu_queue);
./ipcps/shim-eth-vlan.c:                        if (kfa_sdu_post(data->kfa, flow->port_id, tmp)) {
./ipcps/shim-eth-vlan.c:                                return -1;
./ipcps/shim-eth-vlan.c:                rfifo_destroy(flow->sdu_queue, (void (*)(void *)) pdu_destroy);
./ipcps/shim-eth-vlan.c:                flow->sdu_queue = NULL;
./ipcps/shim-eth-vlan.c:                spin_lock(&data->lock);
./ipcps/shim-eth-vlan.c:                flow->port_id_state = PORT_STATE_NULL;
./ipcps/shim-eth-vlan.c:                spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                ASSERT(flow->sdu_queue);
./ipcps/shim-eth-vlan.c:                rfifo_destroy(flow->sdu_queue, (void (*)(void *)) pdu_destroy);
./ipcps/shim-eth-vlan.c:                flow->sdu_queue = NULL;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        if (kfa_flow_deallocate(data->kfa, flow->port_id)) {
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:                LOG_ERR("Failed to destroy shim-eth-vlan flow");
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        if (data->app_name) {
./ipcps/shim-eth-vlan.c:                char * tmp = name_tostring(data->app_name);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        data->app_name = name_dup(name);
./ipcps/shim-eth-vlan.c:        if (!data->app_name) {
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:                name_destroy(data->app_name);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        ha = gha_create(MAC_ADDR_802_3, data->dev->dev_addr);
./ipcps/shim-eth-vlan.c:                name_destroy(data->app_name);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        data->handle = rinarp_add(data->dev, pa, ha);
./ipcps/shim-eth-vlan.c:        if (!data->handle) {
./ipcps/shim-eth-vlan.c:                name_destroy(data->app_name);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        if (!data->app_name) {
./ipcps/shim-eth-vlan.c:                LOG_ERR("Shim-eth-vlan has no application registered");
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        if (!name_is_equal(data->app_name, name)) {
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        if (data->handle) {
./ipcps/shim-eth-vlan.c:                if (rinarp_remove(data->handle)) {
./ipcps/shim-eth-vlan.c:                        return -1;
./ipcps/shim-eth-vlan.c:                data->handle = NULL;
./ipcps/shim-eth-vlan.c:        name_destroy(data->app_name);
./ipcps/shim-eth-vlan.c:        data->app_name = NULL;
./ipcps/shim-eth-vlan.c:        LOG_DBG("Entered the sdu-write");
./ipcps/shim-eth-vlan.c:        hlen   = LL_RESERVED_SPACE(data->dev);
./ipcps/shim-eth-vlan.c:        tlen   = data->dev->needed_tailroom;
./ipcps/shim-eth-vlan.c:        length = buffer_length(sdu->buffer);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        spin_lock(&data->lock);
./ipcps/shim-eth-vlan.c:        if (flow->port_id_state != PORT_STATE_ALLOCATED) {
./ipcps/shim-eth-vlan.c:                spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:        src_hw = data->dev->dev_addr;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        dest_hw = gha_address(flow->dest_ha);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        sdu_ptr = (unsigned char *) skb_put(skb, buffer_length(sdu->buffer));
./ipcps/shim-eth-vlan.c:                    buffer_data_ro(sdu->buffer),
./ipcps/shim-eth-vlan.c:                    buffer_length(sdu->buffer))) {
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        skb->dev      = data->dev;
./ipcps/shim-eth-vlan.c:        skb->protocol = htons(ETH_P_RINA);
./ipcps/shim-eth-vlan.c:        retval = dev_hard_header(skb, data->dev,
./ipcps/shim-eth-vlan.c:                                 ETH_P_RINA, dest_hw, src_hw, skb->len);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        /* C-c-c-checks */
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        data = mapping->data;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        if (!data->app_name) {
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        if (skb->pkt_type == PACKET_OTHERHOST ||
./ipcps/shim-eth-vlan.c:            skb->pkt_type == PACKET_LOOPBACK) {
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        saddr = mh->h_source;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        sk_data = rkmalloc(skb->len, GFP_KERNEL);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        if (skb_copy_bits(skb, 0, sk_data, skb->len)) {
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        buffer = buffer_create_with_ni(sk_data, skb->len);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        spin_lock(&data->lock);
./ipcps/shim-eth-vlan.c:                        flow->port_id_state = PORT_STATE_NULL;
./ipcps/shim-eth-vlan.c:                        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                        return -1;
./ipcps/shim-eth-vlan.c:                flow->port_id_state = PORT_STATE_PENDING;
./ipcps/shim-eth-vlan.c:                INIT_LIST_HEAD(&flow->list);
./ipcps/shim-eth-vlan.c:                list_add(&flow->list, &data->flows);
./ipcps/shim-eth-vlan.c:                flow->dest_ha       = ghaddr;
./ipcps/shim-eth-vlan.c:                flow->port_id       = kfa_port_id_reserve(data->kfa, data->id);
./ipcps/shim-eth-vlan.c:                if (!is_port_id_ok(flow->port_id)) {
./ipcps/shim-eth-vlan.c:                        flow->port_id_state = PORT_STATE_NULL;
./ipcps/shim-eth-vlan.c:                        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                                LOG_ERR("Problems destroying shim-eth-vlan "
./ipcps/shim-eth-vlan.c:                        return -1;
./ipcps/shim-eth-vlan.c:                if (kfa_flow_create(data->kfa, data->id, flow->port_id)){
./ipcps/shim-eth-vlan.c:                        flow->port_id_state = PORT_STATE_NULL;
./ipcps/shim-eth-vlan.c:                        kfa_port_id_release(data->kfa, flow->port_id);
./ipcps/shim-eth-vlan.c:                        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                                LOG_ERR("Problems destroying shim-eth-vlan "
./ipcps/shim-eth-vlan.c:                        return -1;
./ipcps/shim-eth-vlan.c:                flow->sdu_queue = rfifo_create();
./ipcps/shim-eth-vlan.c:                if (!flow->sdu_queue) {
./ipcps/shim-eth-vlan.c:                        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                        return -1;
./ipcps/shim-eth-vlan.c:                if (rfifo_push(flow->sdu_queue, du)) {
./ipcps/shim-eth-vlan.c:                        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                        return -1;
./ipcps/shim-eth-vlan.c:                spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                gpaddr = rinarp_find_gpa(data->handle, flow->dest_ha);
./ipcps/shim-eth-vlan.c:                        flow->dest_pa = gpa_dup_gfp(GFP_KERNEL, gpaddr);
./ipcps/shim-eth-vlan.c:                        if (!flow->dest_pa) {
./ipcps/shim-eth-vlan.c:                                return -1;
./ipcps/shim-eth-vlan.c:                                return -1;
./ipcps/shim-eth-vlan.c:                                return -1;
./ipcps/shim-eth-vlan.c:                        flow->dest_pa = name_to_gpa(sname);
./ipcps/shim-eth-vlan.c:                        if (!flow->dest_pa) {
./ipcps/shim-eth-vlan.c:                                return -1;
./ipcps/shim-eth-vlan.c:                                       data->id,
./ipcps/shim-eth-vlan.c:                                       flow->port_id,
./ipcps/shim-eth-vlan.c:                                       data->dif_name,
./ipcps/shim-eth-vlan.c:                                       data->app_name,
./ipcps/shim-eth-vlan.c:                                       data->fspec)) {
./ipcps/shim-eth-vlan.c:                        return -1;
./ipcps/shim-eth-vlan.c:                if (flow->port_id_state == PORT_STATE_ALLOCATED) {
./ipcps/shim-eth-vlan.c:                        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                        if (kfa_sdu_post(data->kfa, flow->port_id, du))
./ipcps/shim-eth-vlan.c:                                return -1;
./ipcps/shim-eth-vlan.c:                } else if (flow->port_id_state == PORT_STATE_PENDING) {
./ipcps/shim-eth-vlan.c:                        if (rfifo_push(flow->sdu_queue, du)) {
./ipcps/shim-eth-vlan.c:                                spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                                return -1;
./ipcps/shim-eth-vlan.c:                        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                } else if (flow->port_id_state == PORT_STATE_NULL) {
./ipcps/shim-eth-vlan.c:                        spin_unlock(&data->lock);
./ipcps/shim-eth-vlan.c:                if (eth_vlan_recv_process_packet(packet->skb, packet->dev))
./ipcps/shim-eth-vlan.c:                list_del(&packet->list);
./ipcps/shim-eth-vlan.c:        packet->skb      = skb;
./ipcps/shim-eth-vlan.c:        packet->dev      = dev;
./ipcps/shim-eth-vlan.c:        packet->pt       = pt;
./ipcps/shim-eth-vlan.c:        packet->orig_dev = orig_dev;
./ipcps/shim-eth-vlan.c:        INIT_LIST_HEAD(&packet->list);
./ipcps/shim-eth-vlan.c:        list_add_tail(&packet->list, &rcv_wq_packets);
./ipcps/shim-eth-vlan.c:        info = data->info;
./ipcps/shim-eth-vlan.c:        if (data->dif_name) {
./ipcps/shim-eth-vlan.c:                ASSERT(data->dif_name->process_name);
./ipcps/shim-eth-vlan.c:                        data->dif_name->process_name);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        result = kstrtouint(dif_information->dif_name->process_name,
./ipcps/shim-eth-vlan.c:                ASSERT(dif_information->dif_name->process_name);
./ipcps/shim-eth-vlan.c:                        dif_information->dif_name->process_name);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        info->vlan_id = (uint16_t) temp_vlan;
./ipcps/shim-eth-vlan.c:        if (!vlan_id_is_ok(info->vlan_id)) {
./ipcps/shim-eth-vlan.c:                LOG_ERR("Bad vlan id specified: %d", info->vlan_id);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        data->dif_name = name_dup(dif_information->dif_name);
./ipcps/shim-eth-vlan.c:        if (!data->dif_name) {
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        list_for_each_entry(tmp, &(dif_information->
./ipcps/shim-eth-vlan.c:                                   configuration->
./ipcps/shim-eth-vlan.c:                const struct ipcp_config_entry * entry = tmp->entry;
./ipcps/shim-eth-vlan.c:                if (!strcmp(entry->name, "interface-name")) {
./ipcps/shim-eth-vlan.c:                        ASSERT(entry->value);
./ipcps/shim-eth-vlan.c:                        info->interface_name =
./ipcps/shim-eth-vlan.c:                                rkstrdup(entry->value, GFP_KERNEL);
./ipcps/shim-eth-vlan.c:                        if (!info->interface_name) {
./ipcps/shim-eth-vlan.c:                                name_destroy(data->dif_name);
./ipcps/shim-eth-vlan.c:                                data->dif_name = NULL;
./ipcps/shim-eth-vlan.c:                                return -1;
./ipcps/shim-eth-vlan.c:        data->eth_vlan_packet_type->type = cpu_to_be16(ETH_P_RINA);
./ipcps/shim-eth-vlan.c:        data->eth_vlan_packet_type->func = eth_vlan_rcv;
./ipcps/shim-eth-vlan.c:        complete_interface = create_vlan_interface_name(info->interface_name,
./ipcps/shim-eth-vlan.c:                                                        info->vlan_id);
./ipcps/shim-eth-vlan.c:                name_destroy(data->dif_name);
./ipcps/shim-eth-vlan.c:                data->dif_name = NULL;
./ipcps/shim-eth-vlan.c:                rkfree(info->interface_name);
./ipcps/shim-eth-vlan.c:                info->interface_name = NULL;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        data->dev = __dev_get_by_name(&init_net, complete_interface);
./ipcps/shim-eth-vlan.c:        if (!data->dev) {
./ipcps/shim-eth-vlan.c:                name_destroy(data->dif_name);
./ipcps/shim-eth-vlan.c:                data->dif_name = NULL;
./ipcps/shim-eth-vlan.c:                rkfree(info->interface_name);
./ipcps/shim-eth-vlan.c:                info->interface_name = NULL;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:                name_destroy(data->dif_name);
./ipcps/shim-eth-vlan.c:                data->dif_name = NULL;
./ipcps/shim-eth-vlan.c:                rkfree(info->interface_name);
./ipcps/shim-eth-vlan.c:                info->interface_name = NULL;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        mapping->dev  = data->dev;
./ipcps/shim-eth-vlan.c:        mapping->data = data;
./ipcps/shim-eth-vlan.c:        INIT_LIST_HEAD(&mapping->list);
./ipcps/shim-eth-vlan.c:        list_add(&mapping->list, &data_instances_list);
./ipcps/shim-eth-vlan.c:        data->eth_vlan_packet_type->dev = data->dev;
./ipcps/shim-eth-vlan.c:        dev_add_pack(data->eth_vlan_packet_type);
./ipcps/shim-eth-vlan.c:        info               = data->info;
./ipcps/shim-eth-vlan.c:        old_interface_name = info->interface_name;
./ipcps/shim-eth-vlan.c:        list_for_each_entry(tmp, &(new_config->ipcp_config_entries), next) {
./ipcps/shim-eth-vlan.c:                entry = tmp->entry;
./ipcps/shim-eth-vlan.c:                if (!strcmp(entry->name,"interface-name")) {
./ipcps/shim-eth-vlan.c:                        if (!strcpy(info->interface_name,
./ipcps/shim-eth-vlan.c:                                    entry->value)) {
./ipcps/shim-eth-vlan.c:                                return -1;
./ipcps/shim-eth-vlan.c:        dev_remove_pack(data->eth_vlan_packet_type);
./ipcps/shim-eth-vlan.c:        mapping = inst_data_mapping_get(data->dev);
./ipcps/shim-eth-vlan.c:                list_del(&mapping->list);
./ipcps/shim-eth-vlan.c:        data->eth_vlan_packet_type->type = cpu_to_be16(ETH_P_RINA);
./ipcps/shim-eth-vlan.c:        data->eth_vlan_packet_type->func = eth_vlan_rcv;
./ipcps/shim-eth-vlan.c:        complete_interface = create_vlan_interface_name(info->interface_name,
./ipcps/shim-eth-vlan.c:                                                        info->vlan_id);
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        data->dev = __dev_get_by_name(&init_net, complete_interface);
./ipcps/shim-eth-vlan.c:        if (!data->dev) {
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:        mapping->dev = data->dev;
./ipcps/shim-eth-vlan.c:        mapping->data = data;
./ipcps/shim-eth-vlan.c:        INIT_LIST_HEAD(&mapping->list);
./ipcps/shim-eth-vlan.c:        list_add(&mapping->list, &data_instances_list);
./ipcps/shim-eth-vlan.c:        data->eth_vlan_packet_type->dev = data->dev;
./ipcps/shim-eth-vlan.c:        dev_add_pack(data->eth_vlan_packet_type);
./ipcps/shim-eth-vlan.c:        ASSERT(name_is_ok(data->name));
./ipcps/shim-eth-vlan.c:        return data->name;
./ipcps/shim-eth-vlan.c:        INIT_LIST_HEAD(&(data->instances));
./ipcps/shim-eth-vlan.c:        ASSERT(list_empty(&(data->instances)));
./ipcps/shim-eth-vlan.c:        list_for_each_entry(pos, &(data->instances), list) {
./ipcps/shim-eth-vlan.c:                if (pos->id == id) {
./ipcps/shim-eth-vlan.c:        inst->ops  = &eth_vlan_instance_ops;
./ipcps/shim-eth-vlan.c:        inst->data = rkzalloc(sizeof(struct ipcp_instance_data), GFP_KERNEL);
./ipcps/shim-eth-vlan.c:        if (!inst->data) {
./ipcps/shim-eth-vlan.c:        inst->data->eth_vlan_packet_type =
./ipcps/shim-eth-vlan.c:        if (!inst->data->eth_vlan_packet_type) {
./ipcps/shim-eth-vlan.c:                rkfree(inst->data);
./ipcps/shim-eth-vlan.c:        inst->data->id = id;
./ipcps/shim-eth-vlan.c:        inst->data->name = name_dup(name);
./ipcps/shim-eth-vlan.c:        if (!inst->data->name) {
./ipcps/shim-eth-vlan.c:                rkfree(inst->data);
./ipcps/shim-eth-vlan.c:        inst->data->info = rkzalloc(sizeof(*inst->data->info), GFP_KERNEL);
./ipcps/shim-eth-vlan.c:        if (!inst->data->info) {
./ipcps/shim-eth-vlan.c:                rkfree(inst->data->eth_vlan_packet_type);
./ipcps/shim-eth-vlan.c:                rkfree(inst->data);
./ipcps/shim-eth-vlan.c:        inst->data->fspec = rkzalloc(sizeof(*inst->data->fspec), GFP_KERNEL);
./ipcps/shim-eth-vlan.c:        if (!inst->data->fspec) {
./ipcps/shim-eth-vlan.c:                rkfree(inst->data->info);
./ipcps/shim-eth-vlan.c:                rkfree(inst->data->eth_vlan_packet_type);
./ipcps/shim-eth-vlan.c:                rkfree(inst->data);
./ipcps/shim-eth-vlan.c:        inst->data->fspec->average_bandwidth           = 0;
./ipcps/shim-eth-vlan.c:        inst->data->fspec->average_sdu_bandwidth       = 0;
./ipcps/shim-eth-vlan.c:        inst->data->fspec->delay                       = 0;
./ipcps/shim-eth-vlan.c:        inst->data->fspec->jitter                      = 0;
./ipcps/shim-eth-vlan.c:        inst->data->fspec->max_allowable_gap           = -1;
./ipcps/shim-eth-vlan.c:        inst->data->fspec->max_sdu_size                = 1500;
./ipcps/shim-eth-vlan.c:        inst->data->fspec->ordered_delivery            = 0;
./ipcps/shim-eth-vlan.c:        inst->data->fspec->partial_delivery            = 1;
./ipcps/shim-eth-vlan.c:        inst->data->fspec->peak_bandwidth_duration     = 0;
./ipcps/shim-eth-vlan.c:        inst->data->fspec->peak_sdu_bandwidth_duration = 0;
./ipcps/shim-eth-vlan.c:        inst->data->fspec->undetected_bit_error_rate   = 0;
./ipcps/shim-eth-vlan.c:        inst->data->kfa = kipcm_kfa(default_kipcm);
./ipcps/shim-eth-vlan.c:        ASSERT(inst->data->kfa);
./ipcps/shim-eth-vlan.c:        LOG_DBG("KFA instance %pK bound to the shim eth", inst->data->kfa);
./ipcps/shim-eth-vlan.c:        spin_lock_init(&inst->data->lock);
./ipcps/shim-eth-vlan.c:        INIT_LIST_HEAD(&(inst->data->flows));
./ipcps/shim-eth-vlan.c:         * Bind the shim-instance to the shims set, to keep all our data
./ipcps/shim-eth-vlan.c:        INIT_LIST_HEAD(&(inst->data->list));
./ipcps/shim-eth-vlan.c:        list_add(&(inst->data->list), &(data->instances));
./ipcps/shim-eth-vlan.c:        LOG_DBG("Looking for the eth-vlan-instance to destroy");
./ipcps/shim-eth-vlan.c:        list_for_each_entry_safe(pos, next, &data->instances, list) {
./ipcps/shim-eth-vlan.c:                if (pos->id == instance->data->id) {
./ipcps/shim-eth-vlan.c:                        if (pos->eth_vlan_packet_type->dev)
./ipcps/shim-eth-vlan.c:                                __dev_remove_pack(pos->eth_vlan_packet_type);
./ipcps/shim-eth-vlan.c:                        list_del(&pos->list);
./ipcps/shim-eth-vlan.c:                        if (pos->name)
./ipcps/shim-eth-vlan.c:                                name_destroy(pos->name);
./ipcps/shim-eth-vlan.c:                        if (pos->dif_name)
./ipcps/shim-eth-vlan.c:                                name_destroy(pos->dif_name);
./ipcps/shim-eth-vlan.c:                        if (pos->app_name)
./ipcps/shim-eth-vlan.c:                                name_destroy(pos->app_name);
./ipcps/shim-eth-vlan.c:                        if (pos->info->interface_name)
./ipcps/shim-eth-vlan.c:                                rkfree(pos->info->interface_name);
./ipcps/shim-eth-vlan.c:                        if (pos->info)
./ipcps/shim-eth-vlan.c:                                rkfree(pos->info);
./ipcps/shim-eth-vlan.c:                        if (pos->fspec)
./ipcps/shim-eth-vlan.c:                                rkfree(pos->fspec);
./ipcps/shim-eth-vlan.c:                        if (pos->handle) {
./ipcps/shim-eth-vlan.c:                                if (rinarp_remove(pos->handle)) {
./ipcps/shim-eth-vlan.c:                                        return -1;
./ipcps/shim-eth-vlan.c:                        if (pos->eth_vlan_packet_type)
./ipcps/shim-eth-vlan.c:                                rkfree(pos->eth_vlan_packet_type);
./ipcps/shim-eth-vlan.c:                        LOG_DBG("Eth-vlan instance destroyed, returning");
./ipcps/shim-eth-vlan.c:        return -1;
./ipcps/shim-eth-vlan.c:        LOG_DBG("Create-vlan-name regression tests");
./ipcps/shim-eth-vlan.c:                LOG_ERR("Create-vlan-interface tests failed, bailing out");
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:                return -1;
./ipcps/shim-eth-vlan.c:                kfree_skb(packet->skb);
./ipcps/shim-eth-vlan.c:                list_del(&packet->list);
Binary file ./kfa-utils.o matches
./dtcp.c:#include "dt-utils.h"
./dtcp.c:#include "dtcp-utils.h"
./dtcp.c:/* This is the DT-SV part maintained by DTCP */
./dtcp.c:         * Inbound: LastRcvCtlSeq - Sequence number of the next
./dtcp.c:        struct dtcp_sv *       sv; /* The state-vector */
./dtcp.c:        if (!dtcp->conn)
./dtcp.c:        if (!dtcp->conn->policies_params)
./dtcp.c:        return dtcp->conn->policies_params->dtcp_cfg;
./dtcp.c:        if (rmt_send(dtcp->rmt,
./dtcp.c:                     dtcp->conn->destination_address,
./dtcp.c:                     dtcp->conn->qos_id,
./dtcp.c:                return -1;
./dtcp.c:        ASSERT(dtcp->sv);
./dtcp.c:        spin_lock(&dtcp->sv->lock);
./dtcp.c:        dtcp->sv->last_rcv_ctl_seq = last_rcv_ctrl_seq;
./dtcp.c:        spin_unlock(&dtcp->sv->lock);
./dtcp.c:        ASSERT(dtcp->sv);
./dtcp.c:        spin_lock(&dtcp->sv->lock);
./dtcp.c:        tmp = dtcp->sv->last_rcv_ctl_seq;
./dtcp.c:        spin_unlock(&dtcp->sv->lock);
./dtcp.c:        ASSERT(dtcp->sv);
./dtcp.c:        spin_lock(&dtcp->sv->lock);
./dtcp.c:        dtcp->sv->flow_ctl++;
./dtcp.c:        spin_unlock(&dtcp->sv->lock);
./dtcp.c:        ASSERT(dtcp->sv);
./dtcp.c:        spin_lock(&dtcp->sv->lock);
./dtcp.c:        dtcp->sv->acks++;
./dtcp.c:        spin_unlock(&dtcp->sv->lock);
./dtcp.c:        ASSERT(dtcp->sv);
./dtcp.c:        spin_lock(&dtcp->sv->lock);
./dtcp.c:        dtcp->sv->snd_rt_wind_edge = new_rt_win;
./dtcp.c:        spin_unlock(&dtcp->sv->lock);
./dtcp.c:        ASSERT(dtcp->sv);
./dtcp.c:        spin_lock(&dtcp->sv->lock);
./dtcp.c:        tmp = dtcp->sv->snd_rt_wind_edge;
./dtcp.c:        spin_unlock(&dtcp->sv->lock);
./dtcp.c:        ASSERT(dtcp->sv);
./dtcp.c:        spin_lock(&dtcp->sv->lock);
./dtcp.c:        tmp = dtcp->sv->snd_lft_win;
./dtcp.c:        spin_unlock(&dtcp->sv->lock);
./dtcp.c:        ASSERT(dtcp->sv);
./dtcp.c:        spin_lock(&dtcp->sv->lock);
./dtcp.c:        dtcp->sv->snd_lft_win = seq_num;
./dtcp.c:        spin_unlock(&dtcp->sv->lock);
./dtcp.c:        ASSERT(dtcp->sv);
./dtcp.c:        spin_lock(&dtcp->sv->lock);
./dtcp.c:        tmp = dtcp->sv->rcvr_rt_wind_edge;
./dtcp.c:        spin_unlock(&dtcp->sv->lock);
./dtcp.c:        ASSERT(dtcp->sv);
./dtcp.c:        spin_lock(&dtcp->sv->lock);
./dtcp.c:        tmp = ++dtcp->sv->next_snd_ctl_seq;
./dtcp.c:        spin_unlock(&dtcp->sv->lock);
./dtcp.c:        q = dt_cwq(dtcp->parent);
./dtcp.c:                return -1;
./dtcp.c:                        rtxq = dt_rtxq(dtcp->parent);
./dtcp.c:                                return -1;
./dtcp.c:                       dtcp->conn->source_cep_id,
./dtcp.c:                       dtcp->conn->destination_cep_id,
./dtcp.c:                       dtcp->conn->source_address,
./dtcp.c:                       dtcp->conn->destination_address,
./dtcp.c:                       dtcp->conn->qos_id,
./dtcp.c:        my_lf_win_edge = dt_sv_rcv_lft_win(dtcp->parent);
./dtcp.c:                q = dt_rtxq(dtcp->parent);
./dtcp.c:                        return -1;
./dtcp.c:                rtxq_ack(q, seq_num, dt_sv_tr(dtcp->parent));
./dtcp.c:                q = dt_rtxq(dtcp->parent);
./dtcp.c:                        return -1;
./dtcp.c:                rtxq_nack(q, seq_num, dt_sv_tr(dtcp->parent));
./dtcp.c:        q = dt_cwq(dtcp->parent);
./dtcp.c:                return -1;
./dtcp.c:            (dt_sv_last_seq_num_sent(dtcp->parent) < snd_rt_wind_edge(dtcp))) {
./dtcp.c:                dt_sv_window_closed_set(dtcp->parent, false);
./dtcp.c:                return -1;
./dtcp.c:                return -1;
./dtcp.c:                return -1;
./dtcp.c:                LOG_ERR("CommonRCVControl policy received a non-control PDU");
./dtcp.c:                return -1;
./dtcp.c:                if (dtcp->policies->lost_control_pdu(dtcp))
./dtcp.c:                return dtcp->policies->sender_ack(dtcp,
./dtcp.c:                return -1;
./dtcp.c:                return -1;
./dtcp.c:                return -1;
./dtcp.c:                return -1;
./dtcp.c:                return -1;
./dtcp.c:        if (!dt_sv_a(dtcp->parent)) 
./dtcp.c:                return dtcp->policies->sending_ack(dtcp, seq);
./dtcp.c:        ASSERT(dtcp->sv);
./dtcp.c:        spin_lock(&dtcp->sv->lock);
./dtcp.c:        seq = dtcp->sv->rcvr_credit + dtcp->sv->rcvr_rt_wind_edge;
./dtcp.c:        dtcp->sv->rcvr_rt_wind_edge = seq;
./dtcp.c:        spin_unlock(&dtcp->sv->lock);
./dtcp.c:        lf_wind_edge = dt_sv_rcv_lft_win(dtcp->parent);
./dtcp.c:                return -1;
./dtcp.c:                return -1;
./dtcp.c:        if (!dtcp || !dtcp->conn)
./dtcp.c:                return -1;
./dtcp.c:                return -1;
./dtcp.c:                        if (dtcp->policies->rcvr_flow_control(dtcp, seq)) {
./dtcp.c:                                retval = -1;
./dtcp.c:                        if (dtcp->policies->rate_reduction(dtcp)) {
./dtcp.c:                                retval = -1;
./dtcp.c:                if (dtcp->policies->rcvr_ack(dtcp, seq)) {
./dtcp.c:                        retval = -1;
./dtcp.c:                if (dtcp->policies->receiving_flow_control(dtcp, seq)) {
./dtcp.c:                        retval = -1;
./dtcp.c:                return -1;
./dtcp.c:        if (!instance->sv) {
./dtcp.c:                return -1;
./dtcp.c:                return -1;
./dtcp.c:        *instance->sv = sv;
./dtcp.c:        spin_lock_init(&instance->sv->lock);
./dtcp.c:                instance->sv->data_retransmit_max = 
./dtcp.c:        instance->sv->sndr_credit         = dtcp_initial_credit(cfg);
./dtcp.c:        instance->sv->snd_rt_wind_edge    = dtcp_initial_credit(cfg); 
./dtcp.c:        instance->sv->rcvr_credit         = dtcp_initial_credit(cfg);
./dtcp.c:        instance->sv->rcvr_rt_wind_edge   = dtcp_initial_credit(cfg);
./dtcp.c:                instance->sv->data_retransmit_max, instance->sv->sndr_credit,
./dtcp.c:                instance->sv->snd_rt_wind_edge, instance->sv->rcvr_credit,
./dtcp.c:                instance->sv->rcvr_rt_wind_edge);
./dtcp.c:                LOG_ERR("Cannot create DTCP state-vector");
./dtcp.c:        tmp->parent = dt;
./dtcp.c:        tmp->sv = rkzalloc(sizeof(*tmp->sv), GFP_KERNEL);
./dtcp.c:        if (!tmp->sv) {
./dtcp.c:                LOG_ERR("Cannot create DTCP state-vector");
./dtcp.c:        tmp->policies = rkzalloc(sizeof(*tmp->policies), GFP_KERNEL);
./dtcp.c:        if (!tmp->policies) {
./dtcp.c:        tmp->conn = conn;
./dtcp.c:        tmp->rmt  = rmt;
./dtcp.c:        /* FIXME: fixups to the state-vector should be placed here */
./dtcp.c:        *tmp->policies = default_policies;
./dtcp.c:                return -1;
./dtcp.c:        if (instance->sv)       rkfree(instance->sv);
./dtcp.c:        if (instance->policies) rkfree(instance->policies);
./dtcp.c:        return -1;
./dtcp.c:                return -1;
./dtcp.c:        if (instance->policies->sv_update(instance, seq))
./dtcp.c:                return -1;
./dtcp.c:                return -1;
./dtcp.c:        if (!dtcp || !dtcp->sv)
./dtcp.c:                return -1;
./kipcm-utils.c: * K-IPCM related utilities
./kipcm-utils.c:#define RINA_PREFIX "kipcm-utils"
./kipcm-utils.c:#include "kipcm-utils.h"
./kipcm-utils.c:#include "rnl-utils.h"
./kipcm-utils.c:#include "ipcp-utils.h"
./kipcm-utils.c:        hash_init(tmp->table);
./kipcm-utils.c:        hash_for_each_safe(map->table, bucket, tmp, entry, hlist) {
./kipcm-utils.c:                hash_del(&entry->hlist);
./kipcm-utils.c:        return hash_empty(map->table);
./kipcm-utils.c:        head = &map->table[imap_hash(map->table, key)];
./kipcm-utils.c:                if (entry->key == key)
./kipcm-utils.c:        ASSERT(name->process_name);
./kipcm-utils.c:        hash_for_each_safe(map->table, bucket, tmp, entry, hlist) {
./kipcm-utils.c:                entry_name = entry->value->ops->ipcp_name(entry->value->data);
./kipcm-utils.c:                if (!strcmp(entry_name->process_name,
./kipcm-utils.c:                            name->process_name)           &&
./kipcm-utils.c:                    !strcmp(entry_name->process_instance,
./kipcm-utils.c:                            name->process_instance)) {
./kipcm-utils.c:        return entry->value;
./kipcm-utils.c:        return entry->value;
./kipcm-utils.c:        hash_for_each(map->table, bucket, entry, hlist) {
./kipcm-utils.c:                if (entry->value->factory == factory) {
./kipcm-utils.c:                        return entry->key;
./kipcm-utils.c:                return -1;
./kipcm-utils.c:        cur->value = value;
./kipcm-utils.c:                return -1;
./kipcm-utils.c:        tmp->key   = key;
./kipcm-utils.c:        tmp->value = value;
./kipcm-utils.c:        INIT_HLIST_NODE(&tmp->hlist);
./kipcm-utils.c:        hash_add(map->table, &tmp->hlist, key);
./kipcm-utils.c:                return -1;
./kipcm-utils.c:        hash_del(&cur->hlist);
./kipcm-utils.c:#define SNVALUE_WRONG  -1
./kipcm-utils.c:        hash_init(tmp->table);
./kipcm-utils.c:        hash_for_each_safe(map->table, bucket, tmp, entry, hlist) {
./kipcm-utils.c:                hash_del(&entry->hlist);
./kipcm-utils.c:        return hash_empty(map->table);
./kipcm-utils.c:        head = &map->table[pmap_hash(map->table, key)];
./kipcm-utils.c:                if (entry->key == key)
./kipcm-utils.c:        return entry->value;
./kipcm-utils.c:                return -1;
./kipcm-utils.c:        cur->value = value;
./kipcm-utils.c:                return -1;
./kipcm-utils.c:        tmp->key   = key;
./kipcm-utils.c:        tmp->value = value;
./kipcm-utils.c:        INIT_HLIST_NODE(&tmp->hlist);
./kipcm-utils.c:        hash_add(map->table, &tmp->hlist, key);
./kipcm-utils.c:                return -1;
./kipcm-utils.c:        hash_del(&cur->hlist);
./kipcm-utils.c:        hash_init(tmp->table);
./kipcm-utils.c:        hash_for_each_safe(map->table, bucket, tmp, entry, hlist) {
./kipcm-utils.c:                hash_del(&entry->hlist);
./kipcm-utils.c:        return hash_empty(map->table);
./kipcm-utils.c:        head = &map->table[smap_hash(map->table, key)];
./kipcm-utils.c:                if (entry->key == key)
./kipcm-utils.c:        return entry->value;
./kipcm-utils.c:                return -1;
./kipcm-utils.c:        cur->value = value;
./kipcm-utils.c:                return -1;
./kipcm-utils.c:        tmp->key   = key;
./kipcm-utils.c:        tmp->value = value;
./kipcm-utils.c:        INIT_HLIST_NODE(&tmp->hlist);
./kipcm-utils.c:        hash_add(map->table, &tmp->hlist, key);
./kipcm-utils.c:                return -1;
./kipcm-utils.c:        hash_del(&cur->hlist);
Binary file ./cidm.o matches
./syscalls.c:#include "ipcp-utils.h"
./syscalls.c:                        return -1;                                      \
./syscalls.c:                ASSERT(PERS -> ops);                                    \
./syscalls.c:                if (PERS -> ops -> HOOK == NULL) {                      \
./syscalls.c:                        return -1;                                      \
./syscalls.c:                RETVAL = PERS -> ops -> HOOK (PERS->data, ##ARGS);      \
./syscalls.c:        return -ENOSYS;
./syscalls.c:                return -EFAULT;
./syscalls.c:                return -EFAULT;
./syscalls.c:                return -EFAULT;
./syscalls.c:        LOG_DBG("  Process name     = %s", tn->process_name);
./syscalls.c:        LOG_DBG("  Process instance = %s", tn->process_instance);
./syscalls.c:        LOG_DBG("  Entity name      = %s", tn->entity_name);
./syscalls.c:        LOG_DBG("  Entity instance  = %s", tn->entity_instance);
./syscalls.c:        return -ENOSYS;
./syscalls.c:        return -ENOSYS;
./syscalls.c:                return -EFAULT;
./syscalls.c:                return -EFAULT;
./syscalls.c:        if (buffer_length(tmp->buffer) > size) {
./syscalls.c:                        buffer_length(tmp->buffer), size);
./syscalls.c:                return -EFAULT;
./syscalls.c:                         buffer_data_ro(tmp->buffer),
./syscalls.c:                         buffer_length(tmp->buffer))) {
./syscalls.c:                LOG_ERR("Error copying data to user-space");
./syscalls.c:                return -EFAULT;
./syscalls.c:        retsize = buffer_length(tmp->buffer);
./syscalls.c:        return -ENOSYS;
./syscalls.c:                return -EFAULT;
./syscalls.c:        LOG_DBG("Syscall write SDU (size = %zd, port-id = %d)", size, id);
./syscalls.c:                return -EFAULT;
./syscalls.c:                return -EFAULT;
./syscalls.c:                return -EFAULT;
./syscalls.c:                return -EFAULT;
./syscalls.c:        return -ENOSYS;
./syscalls.c:                return -EFAULT;
./syscalls.c:                return -EFAULT;
./syscalls.c:        return -ENOSYS;
./syscalls.c:        return -ENOSYS;
./syscalls.c:                return -EFAULT;
./syscalls.c:                "tmp->port_id: %d\n"
./syscalls.c:                "tmp->sdu: %pk\n"
./syscalls.c:                "tmp->sdu->buffer: %pk\n",
./syscalls.c:                tmp, tmp->port_id, tmp->sdu, tmp->sdu->buffer);
./syscalls.c:                return -EFAULT;
./syscalls.c:        if (buffer_length(tmp->sdu->buffer) > size) {
./syscalls.c:                        buffer_length(tmp->sdu->buffer), size);
./syscalls.c:                return -EFAULT;
./syscalls.c:                         buffer_data_ro(tmp->sdu->buffer),
./syscalls.c:                         buffer_length(tmp->sdu->buffer))) {
./syscalls.c:                LOG_ERR("Error copying buffer data to user-space");
./syscalls.c:                return -EFAULT;
./syscalls.c:                         &tmp->port_id,
./syscalls.c:                         sizeof(tmp->port_id))) {
./syscalls.c:                LOG_ERR("Error copying port_id data to user-space");
./syscalls.c:                return -EFAULT;
./syscalls.c:        retsize = buffer_length(tmp->sdu->buffer);
./syscalls.c:        return -ENOSYS;
./syscalls.c:                return -EFAULT;
./syscalls.c:                "(size = %zd, ipcp-id %d, port-id = %d)",
./syscalls.c:                return -EFAULT;
./syscalls.c:                return -EFAULT;
./syscalls.c:                return -EFAULT;
./syscalls.c:        sdu_wpi->dst_addr = dst_addr;
./syscalls.c:        sdu_wpi->port_id  = port_id;
./syscalls.c:                return -EFAULT;
./.personality.o.cmd:cmd_net/rina/personality.o := gcc -Wp,-MD,net/rina/.personality.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(personality)"  -D"KBUILD_MODNAME=KBUILD_STR(personality)" -c -o net/rina/.tmp_personality.o net/rina/personality.c
./.personality.o.cmd:  include/linux/compiler-gcc.h \
./.personality.o.cmd:  include/linux/compiler-gcc4.h \
./.personality.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.personality.o.cmd:  include/asm-generic/int-ll64.h \
./.personality.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.personality.o.cmd:  include/asm-generic/bitsperlong.h \
./.personality.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.personality.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.personality.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.personality.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.personality.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.personality.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.personality.o.cmd:  include/asm-generic/ptrace.h \
./.personality.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.personality.o.cmd:  include/asm-generic/bitops/fls64.h \
./.personality.o.cmd:  include/asm-generic/bitops/find.h \
./.personality.o.cmd:  include/asm-generic/bitops/sched.h \
./.personality.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.personality.o.cmd:  include/asm-generic/bitops/le.h \
./.personality.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.personality.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.personality.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.personality.o.cmd:  include/asm-generic/percpu.h \
./.personality.o.cmd:  include/linux/percpu-defs.h \
./.personality.o.cmd:  include/asm-generic/memory_model.h \
./.personality.o.cmd:  include/asm-generic/getorder.h \
./.personality.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.personality.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.personality.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.personality.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.personality.o.cmd:  include/asm-generic/ioctl.h \
./.personality.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.personality.o.cmd:  include/asm-generic/bug.h \
./.personality.o.cmd:  include/asm-generic/atomic-long.h \
./.personality.o.cmd:  include/asm-generic/param.h \
./.personality.o.cmd:  include/uapi/asm-generic/param.h \
./.personality.o.cmd:  include/linux/pageblock-flags.h \
./.personality.o.cmd:  include/linux/page-flags-layout.h \
./.personality.o.cmd:  include/asm-generic/topology.h \
./.personality.o.cmd:  include/asm-generic/early_ioremap.h \
./.personality.o.cmd:  include/asm-generic/iomap.h \
./.personality.o.cmd:  include/asm-generic/pci_iomap.h \
./.personality.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.personality.o.cmd:  include/asm-generic/kmap_types.h \
./.personality.o.cmd:  include/asm-generic/fixmap.h \
./.personality.o.cmd:  include/asm-generic/sections.h \
./.personality.o.cmd:  net/rina/ipcp-instances.h \
./.pci.o.cmd:cmd_net/rina/pci.o := gcc -Wp,-MD,net/rina/.pci.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(pci)"  -D"KBUILD_MODNAME=KBUILD_STR(pci)" -c -o net/rina/.tmp_pci.o net/rina/pci.c
./.pci.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.pci.o.cmd:  include/asm-generic/int-ll64.h \
./.pci.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.pci.o.cmd:  include/asm-generic/bitsperlong.h \
./.pci.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.pci.o.cmd:  include/linux/compiler-gcc.h \
./.pci.o.cmd:  include/linux/compiler-gcc4.h \
./.pci.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.pci.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.pci.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.pci.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.pci.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.pci.o.cmd:  include/asm-generic/ptrace.h \
./.pci.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.pci.o.cmd:  include/asm-generic/bitops/fls64.h \
./.pci.o.cmd:  include/asm-generic/bitops/find.h \
./.pci.o.cmd:  include/asm-generic/bitops/sched.h \
./.pci.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.pci.o.cmd:  include/asm-generic/bitops/le.h \
./.pci.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.pci.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.pci.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.pci.o.cmd:  include/asm-generic/percpu.h \
./.pci.o.cmd:  include/linux/percpu-defs.h \
./.pci.o.cmd:  include/asm-generic/memory_model.h \
./.pci.o.cmd:  include/asm-generic/getorder.h \
./.pci.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.pci.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.pci.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.pci.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.pci.o.cmd:  include/asm-generic/ioctl.h \
./.pci.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.pci.o.cmd:  include/asm-generic/bug.h \
./.pci.o.cmd:  include/asm-generic/atomic-long.h \
./.pci.o.cmd:  include/asm-generic/param.h \
./.pci.o.cmd:  include/uapi/asm-generic/param.h \
./.pci.o.cmd:  include/linux/pageblock-flags.h \
./.pci.o.cmd:  include/linux/page-flags-layout.h \
./.pci.o.cmd:  include/asm-generic/topology.h \
./.pci.o.cmd:  include/asm-generic/early_ioremap.h \
./.pci.o.cmd:  include/asm-generic/iomap.h \
./.pci.o.cmd:  include/asm-generic/pci_iomap.h \
./.pci.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.pci.o.cmd:  include/asm-generic/kmap_types.h \
./.pci.o.cmd:  include/asm-generic/fixmap.h \
./.pci.o.cmd:  include/asm-generic/sections.h \
Binary file ./.dt-utils.c.swp matches
./Kconfig:	---help---
./Kconfig:	bool "K-IPC Manager locks debugging"
./Kconfig:	---help---
./dtcp.h:/* Used by DTP to have an ack-control PDU sent by DTCP */
./.rnl-utils.o.cmd:cmd_net/rina/rnl-utils.o := gcc -Wp,-MD,net/rina/.rnl-utils.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rnl_utils)"  -D"KBUILD_MODNAME=KBUILD_STR(rnl_utils)" -c -o net/rina/.tmp_rnl-utils.o net/rina/rnl-utils.c
./.rnl-utils.o.cmd:source_net/rina/rnl-utils.o := net/rina/rnl-utils.c
./.rnl-utils.o.cmd:deps_net/rina/rnl-utils.o := \
./.rnl-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.rnl-utils.o.cmd:  include/asm-generic/int-ll64.h \
./.rnl-utils.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.rnl-utils.o.cmd:  include/asm-generic/bitsperlong.h \
./.rnl-utils.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.rnl-utils.o.cmd:  include/linux/compiler-gcc.h \
./.rnl-utils.o.cmd:  include/linux/compiler-gcc4.h \
./.rnl-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.rnl-utils.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.rnl-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.rnl-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.rnl-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.rnl-utils.o.cmd:  include/asm-generic/ptrace.h \
./.rnl-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.rnl-utils.o.cmd:  include/asm-generic/bitops/fls64.h \
./.rnl-utils.o.cmd:  include/asm-generic/bitops/find.h \
./.rnl-utils.o.cmd:  include/asm-generic/bitops/sched.h \
./.rnl-utils.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.rnl-utils.o.cmd:  include/asm-generic/bitops/le.h \
./.rnl-utils.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.rnl-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.rnl-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.rnl-utils.o.cmd:  include/asm-generic/percpu.h \
./.rnl-utils.o.cmd:  include/linux/percpu-defs.h \
./.rnl-utils.o.cmd:  include/asm-generic/bug.h \
./.rnl-utils.o.cmd:  include/asm-generic/memory_model.h \
./.rnl-utils.o.cmd:  include/asm-generic/getorder.h \
./.rnl-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.rnl-utils.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.rnl-utils.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.rnl-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.rnl-utils.o.cmd:  include/asm-generic/ioctl.h \
./.rnl-utils.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.rnl-utils.o.cmd:  include/asm-generic/atomic-long.h \
./.rnl-utils.o.cmd:  include/linux/page-debug-flags.h \
./.rnl-utils.o.cmd:  include/asm-generic/param.h \
./.rnl-utils.o.cmd:  include/uapi/asm-generic/param.h \
./.rnl-utils.o.cmd:  include/linux/page-flags-layout.h \
./.rnl-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./.rnl-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./.rnl-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./.rnl-utils.o.cmd:  include/linux/pageblock-flags.h \
./.rnl-utils.o.cmd:  include/asm-generic/topology.h \
./.rnl-utils.o.cmd:  include/asm-generic/early_ioremap.h \
./.rnl-utils.o.cmd:  include/asm-generic/iomap.h \
./.rnl-utils.o.cmd:  include/asm-generic/pci_iomap.h \
./.rnl-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.rnl-utils.o.cmd:  include/asm-generic/kmap_types.h \
./.rnl-utils.o.cmd:  include/asm-generic/fixmap.h \
./.rnl-utils.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./.rnl-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./.rnl-utils.o.cmd:  include/asm-generic/pgtable.h \
./.rnl-utils.o.cmd:  include/linux/page-flags.h \
./.rnl-utils.o.cmd:  include/asm-generic/scatterlist.h \
./.rnl-utils.o.cmd:  include/linux/dma-mapping.h \
./.rnl-utils.o.cmd:  include/linux/dma-attrs.h \
./.rnl-utils.o.cmd:  include/linux/dma-direction.h \
./.rnl-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./.rnl-utils.o.cmd:  include/linux/dma-debug.h \
./.rnl-utils.o.cmd:  include/asm-generic/dma-coherent.h \
./.rnl-utils.o.cmd:  include/linux/dma-contiguous.h \
./.rnl-utils.o.cmd:  include/asm-generic/dma-mapping-common.h \
./.rnl-utils.o.cmd:  include/asm-generic/cputime.h \
./.rnl-utils.o.cmd:  include/asm-generic/cputime_jiffies.h \
./.rnl-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./.rnl-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./.rnl-utils.o.cmd:  include/asm-generic/siginfo.h \
./.rnl-utils.o.cmd:  include/uapi/asm-generic/siginfo.h \
./.rnl-utils.o.cmd:  include/asm-generic/resource.h \
./.rnl-utils.o.cmd:  include/uapi/asm-generic/resource.h \
./.rnl-utils.o.cmd:  include/linux/radix-tree.h \
./.rnl-utils.o.cmd:  include/linux/percpu-rwsem.h \
./.rnl-utils.o.cmd:  include/asm-generic/sections.h \
./.rnl-utils.o.cmd:  net/rina/ipcp-utils.h \
./.rnl-utils.o.cmd:  net/rina/ipcp-instances.h \
./.rnl-utils.o.cmd:  net/rina/ipcp-factories.h \
./.rnl-utils.o.cmd:  include/asm-generic/delay.h \
./.rnl-utils.o.cmd:  include/linux/percpu-refcount.h \
./.rnl-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./.rnl-utils.o.cmd:  net/rina/rnl-utils.h \
./.rnl-utils.o.cmd:  net/rina/dtcp-utils.h \
./.rnl-utils.o.cmd:net/rina/rnl-utils.o: $(deps_net/rina/rnl-utils.o)
./.rnl-utils.o.cmd:$(deps_net/rina/rnl-utils.o):
./rnl.c:#include "rnl-utils.h"
./rnl.c:#include "rnl-workarounds.h"
./rnl.c:#define RNL_WQ_NAME  "rnl-wq"
./rnl.c:#define NETLINK_RINA_C_MAX (RINA_C_MAX - 1)
./rnl.c:                return -1;
./rnl.c:        if (!info->genlhdr) {
./rnl.c:                return -1;
./rnl.c:                return -1;
./rnl.c:        LOG_DBG("Dispatching message (skb-in=%pK, info=%pK, attrs=%pK)",
./rnl.c:                skb_in, info, info->attrs);
./rnl.c:        msg_type = (msg_type_t) info->genlhdr->cmd;
./rnl.c:                return -1;
./rnl.c:                return -1;
./rnl.c:        spin_lock(&tmp->lock);
./rnl.c:        cb_function = tmp->handlers[msg_type].cb;
./rnl.c:        data        = tmp->handlers[msg_type].data;
./rnl.c:        spin_unlock(&tmp->lock);
./rnl.c:                return -1;
./rnl.c:                return -1;
./rnl.c:                return -1;
./rnl.c:                return -1;
./rnl.c:                LOG_ERR("Message type %d is out-of-range, "
./rnl.c:                return -1;
./rnl.c:        spin_lock(&set->lock);
./rnl.c:        if (set->handlers[msg_type].cb) {
./rnl.c:                spin_unlock(&set->lock);
./rnl.c:                return -1;
./rnl.c:        set->handlers[msg_type].cb   = handler;
./rnl.c:        set->handlers[msg_type].data = data;
./rnl.c:        spin_unlock(&set->lock);
./rnl.c:                return -1;
./rnl.c:                LOG_ERR("Message type %d is out-of-range, "
./rnl.c:                return -1;
./rnl.c:        spin_lock(&set->lock);
./rnl.c:        bzero(&set->handlers[msg_type], sizeof(set->handlers[msg_type]));
./rnl.c:        spin_unlock(&set->lock);
./rnl.c:                return -1;
./rnl.c:                return -2;
./rnl.c:                return -1;
./rnl.c:                return -2;
./rnl.c:        spin_lock_init(&tmp->lock);
./rnl.c:                return -1;
./rnl.c:        for (i = 0; i < ARRAY_SIZE(set->handlers); i++) {
./rnl.c:                if (set->handlers[i].cb != NULL) {
./rnl.c:        spin_lock(&set->lock);
./rnl.c:        tmp = set->sn_counter++;
./rnl.c:        if (set->sn_counter == 0) {
./rnl.c:                LOG_WARN("RNL Sequence number rolled-over for set %pK!", set);
./rnl.c:                /* FIXME: What to do about roll-over? */
./rnl.c:        spin_unlock(&set->lock);
./rnl.c:        return set->sn_counter;
./rnl.c:                return -1;
./rnl.c:        rnl_ipcm_sock_closed_notif_msg(item_data->portid,
./rnl.c:                                       item_data->ipcmanagerport);
./rnl.c:                if (port == notify->portid) {
./rnl.c:                        item_data->ipcmanagerport = port;
./rnl.c:                        item_data->portid         = notify->portid;
./rnl.c:         *   This is to allow user-space processes to exchange NL messages
./rnl.c:                return -1;
./rnl.c:         * informed when a Netlink socket in user-space is closed
./rnl.c:                return -1;
./rnl.c:                return -1;
Binary file ./dtcp.o matches
./core.c:                return -1;
./core.c:                return -1;
./core.c:        if (sysfs_create_group(&root_kset->kobj, &root_attr_group)) {
./core.c:                return -1;
./core.c:                return -1;
./core.c:        if (rina_personality_init(&root_kset->kobj)) {
./core.c:                return -1;
./logs.h:#define __GPFX "rina-"
./.rina_personality_default.mod.o.cmd:cmd_net/rina/rina_personality_default.mod.o := gcc -Wp,-MD,net/rina/.rina_personality_default.mod.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rina_personality_default.mod)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -DMODULE  -c -o net/rina/rina_personality_default.mod.o net/rina/rina_personality_default.mod.c
./.rina_personality_default.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/int-ll64.h \
./.rina_personality_default.mod.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/bitsperlong.h \
./.rina_personality_default.mod.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.rina_personality_default.mod.o.cmd:  include/linux/compiler-gcc.h \
./.rina_personality_default.mod.o.cmd:  include/linux/compiler-gcc4.h \
./.rina_personality_default.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.rina_personality_default.mod.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.rina_personality_default.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.rina_personality_default.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.rina_personality_default.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/ptrace.h \
./.rina_personality_default.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/bitops/fls64.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/bitops/find.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/bitops/sched.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/bitops/le.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.rina_personality_default.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.rina_personality_default.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/percpu.h \
./.rina_personality_default.mod.o.cmd:  include/linux/percpu-defs.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/bug.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/memory_model.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/getorder.h \
./.rina_personality_default.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.rina_personality_default.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/ioctl.h \
./.rina_personality_default.mod.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/atomic-long.h \
./.rina_personality_default.mod.o.cmd:  include/linux/pageblock-flags.h \
./.rina_personality_default.mod.o.cmd:  include/linux/page-flags-layout.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/param.h \
./.rina_personality_default.mod.o.cmd:  include/uapi/asm-generic/param.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/topology.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/early_ioremap.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/iomap.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/pci_iomap.h \
./.rina_personality_default.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/kmap_types.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/fixmap.h \
./.rina_personality_default.mod.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./.rina_personality_default.mod.o.cmd:  include/asm-generic/module.h \
./pidm.h: * PIDM (Port-IDs Manager)
./.policies.o.cmd:cmd_net/rina/policies.o := gcc -Wp,-MD,net/rina/.policies.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(policies)"  -D"KBUILD_MODNAME=KBUILD_STR(policies)" -c -o net/rina/.tmp_policies.o net/rina/policies.c
./.policies.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.policies.o.cmd:  include/asm-generic/int-ll64.h \
./.policies.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.policies.o.cmd:  include/asm-generic/bitsperlong.h \
./.policies.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.policies.o.cmd:  include/linux/compiler-gcc.h \
./.policies.o.cmd:  include/linux/compiler-gcc4.h \
./.policies.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.policies.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.policies.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.policies.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.policies.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.policies.o.cmd:  include/asm-generic/ptrace.h \
./.policies.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.policies.o.cmd:  include/asm-generic/bitops/fls64.h \
./.policies.o.cmd:  include/asm-generic/bitops/find.h \
./.policies.o.cmd:  include/asm-generic/bitops/sched.h \
./.policies.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.policies.o.cmd:  include/asm-generic/bitops/le.h \
./.policies.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.policies.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.policies.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.policies.o.cmd:  include/asm-generic/percpu.h \
./.policies.o.cmd:  include/linux/percpu-defs.h \
./.policies.o.cmd:  include/asm-generic/memory_model.h \
./.policies.o.cmd:  include/asm-generic/getorder.h \
./.policies.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.policies.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.policies.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.policies.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.policies.o.cmd:  include/asm-generic/ioctl.h \
./.policies.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.policies.o.cmd:  include/asm-generic/bug.h \
./.policies.o.cmd:  include/asm-generic/atomic-long.h \
./.policies.o.cmd:  include/asm-generic/param.h \
./.policies.o.cmd:  include/uapi/asm-generic/param.h \
./.policies.o.cmd:  include/linux/pageblock-flags.h \
./.policies.o.cmd:  include/linux/page-flags-layout.h \
./.policies.o.cmd:  include/asm-generic/topology.h \
./.policies.o.cmd:  include/asm-generic/early_ioremap.h \
./.policies.o.cmd:  include/asm-generic/iomap.h \
./.policies.o.cmd:  include/asm-generic/pci_iomap.h \
./.policies.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.policies.o.cmd:  include/asm-generic/kmap_types.h \
./.policies.o.cmd:  include/asm-generic/fixmap.h \
./.rina_personality_default.ko.cmd:cmd_net/rina/rina_personality_default.ko := ld -r -m elf_i386 -T /home/irati/linux/scripts/module-common.lds --build-id  -o net/rina/rina_personality_default.ko net/rina/rina_personality_default.o net/rina/rina_personality_default.mod.o
Binary file ./sdu.o matches
Binary file ./kipcm.o matches
./personality.c:                return -1;
./personality.c:                return -1;
./personality.c:        if ((ops->init && !ops->fini) || (!ops->init && ops->fini)) {
./personality.c:        if (!(ops->ipc_create    &&
./personality.c:              ops->ipc_destroy)) {
./personality.c:        if (!(ops->sdu_read  &&
./personality.c:              ops->sdu_write)) {
./personality.c:        if (!(ops->allocate_port  &&
./personality.c:              ops->deallocate_port)) {
./personality.c:        if (!(ops->mgmt_sdu_read  &&
./personality.c:              ops->mgmt_sdu_write)) {
./personality.c:        pers->id   = id_get();
./personality.c:        pers->data = data;
./personality.c:        pers->ops  = ops;
./personality.c:        pers->kobj.kset = personalities;
./personality.c:        if (kobject_init_and_add(&pers->kobj, &personality_ktype, NULL,
./personality.c:                kobject_put(&pers->kobj);
./personality.c:        name = kobject_name(&pers->kobj);
./personality.c:        ASSERT(pers->ops);
./personality.c:        if (pers->ops->init) {
./personality.c:                if (pers->ops->init(&pers->kobj, pers->id, pers->data)) {
./personality.c:                        kobject_put(&pers->kobj);
./personality.c:                return -1;
./personality.c:        name = kobject_name(&pers->kobj);
./personality.c:                return -1;
./personality.c:        ASSERT(pers->ops);
./personality.c:        if (pers->ops->fini) {
./personality.c:                if (pers->ops->fini(pers->data)) {
./personality.c:        id_put(pers->id);
./personality.c:        kobject_put(&pers->kobj);
./personality.c:                LOG_INFO("Re-setting default personality");
Binary file ./rina_personality_default.o matches
./.connection.o.cmd:cmd_net/rina/connection.o := gcc -Wp,-MD,net/rina/.connection.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(connection)"  -D"KBUILD_MODNAME=KBUILD_STR(connection)" -c -o net/rina/.tmp_connection.o net/rina/connection.c
./.connection.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.connection.o.cmd:  include/asm-generic/int-ll64.h \
./.connection.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.connection.o.cmd:  include/asm-generic/bitsperlong.h \
./.connection.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.connection.o.cmd:  include/linux/compiler-gcc.h \
./.connection.o.cmd:  include/linux/compiler-gcc4.h \
./.connection.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.connection.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.connection.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.connection.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.connection.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.connection.o.cmd:  include/asm-generic/ptrace.h \
./.connection.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.connection.o.cmd:  include/asm-generic/bitops/fls64.h \
./.connection.o.cmd:  include/asm-generic/bitops/find.h \
./.connection.o.cmd:  include/asm-generic/bitops/sched.h \
./.connection.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.connection.o.cmd:  include/asm-generic/bitops/le.h \
./.connection.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.connection.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.connection.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.connection.o.cmd:  include/asm-generic/percpu.h \
./.connection.o.cmd:  include/linux/percpu-defs.h \
./.connection.o.cmd:  include/asm-generic/memory_model.h \
./.connection.o.cmd:  include/asm-generic/getorder.h \
./.connection.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.connection.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.connection.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.connection.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.connection.o.cmd:  include/asm-generic/ioctl.h \
./.connection.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.connection.o.cmd:  include/asm-generic/bug.h \
./.connection.o.cmd:  include/asm-generic/atomic-long.h \
./.connection.o.cmd:  include/asm-generic/param.h \
./.connection.o.cmd:  include/uapi/asm-generic/param.h \
./.connection.o.cmd:  include/linux/pageblock-flags.h \
./.connection.o.cmd:  include/linux/page-flags-layout.h \
./.connection.o.cmd:  include/asm-generic/topology.h \
./.connection.o.cmd:  include/asm-generic/early_ioremap.h \
./.connection.o.cmd:  include/asm-generic/iomap.h \
./.connection.o.cmd:  include/asm-generic/pci_iomap.h \
./.connection.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.connection.o.cmd:  include/asm-generic/kmap_types.h \
./.connection.o.cmd:  include/asm-generic/fixmap.h \
./.connection.o.cmd:  include/asm-generic/sections.h \
./.connection.o.cmd:  net/rina/dtcp-utils.h \
./efcp.h:#include "ipcp-instances.h"
./.syscalls.o.cmd:cmd_net/rina/syscalls.o := gcc -Wp,-MD,net/rina/.syscalls.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(syscalls)"  -D"KBUILD_MODNAME=KBUILD_STR(syscalls)" -c -o net/rina/.tmp_syscalls.o net/rina/syscalls.c
./.syscalls.o.cmd:  include/linux/compiler-gcc.h \
./.syscalls.o.cmd:  include/linux/compiler-gcc4.h \
./.syscalls.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.syscalls.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.syscalls.o.cmd:  include/asm-generic/int-ll64.h \
./.syscalls.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.syscalls.o.cmd:  include/asm-generic/bitsperlong.h \
./.syscalls.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.syscalls.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.syscalls.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.syscalls.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.syscalls.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.syscalls.o.cmd:  include/asm-generic/ptrace.h \
./.syscalls.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.syscalls.o.cmd:  include/asm-generic/bitops/fls64.h \
./.syscalls.o.cmd:  include/asm-generic/bitops/find.h \
./.syscalls.o.cmd:  include/asm-generic/bitops/sched.h \
./.syscalls.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.syscalls.o.cmd:  include/asm-generic/bitops/le.h \
./.syscalls.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.syscalls.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.syscalls.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.syscalls.o.cmd:  include/asm-generic/percpu.h \
./.syscalls.o.cmd:  include/linux/percpu-defs.h \
./.syscalls.o.cmd:  include/asm-generic/bug.h \
./.syscalls.o.cmd:  include/asm-generic/memory_model.h \
./.syscalls.o.cmd:  include/asm-generic/getorder.h \
./.syscalls.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.syscalls.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.syscalls.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.syscalls.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.syscalls.o.cmd:  include/asm-generic/ioctl.h \
./.syscalls.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.syscalls.o.cmd:  include/asm-generic/atomic-long.h \
./.syscalls.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./.syscalls.o.cmd:  include/asm-generic/siginfo.h \
./.syscalls.o.cmd:  include/uapi/asm-generic/siginfo.h \
./.syscalls.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./.syscalls.o.cmd:  include/asm-generic/param.h \
./.syscalls.o.cmd:  include/uapi/asm-generic/param.h \
./.syscalls.o.cmd:  include/asm-generic/topology.h \
./.syscalls.o.cmd:  include/asm-generic/early_ioremap.h \
./.syscalls.o.cmd:  include/asm-generic/iomap.h \
./.syscalls.o.cmd:  include/asm-generic/pci_iomap.h \
./.syscalls.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.syscalls.o.cmd:  include/asm-generic/kmap_types.h \
./.syscalls.o.cmd:  include/asm-generic/fixmap.h \
./.syscalls.o.cmd:  include/linux/page-debug-flags.h \
./.syscalls.o.cmd:  include/linux/page-flags-layout.h \
./.syscalls.o.cmd:  include/linux/pageblock-flags.h \
./.syscalls.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./.syscalls.o.cmd:  include/asm-generic/pgtable.h \
./.syscalls.o.cmd:  include/linux/page-flags.h \
./.syscalls.o.cmd:  include/linux/radix-tree.h \
./.syscalls.o.cmd:  include/linux/percpu-rwsem.h \
./.syscalls.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./.syscalls.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./.syscalls.o.cmd:  include/asm-generic/sections.h \
./.syscalls.o.cmd:  include/asm-generic/cputime.h \
./.syscalls.o.cmd:  include/asm-generic/cputime_jiffies.h \
./.syscalls.o.cmd:  include/asm-generic/resource.h \
./.syscalls.o.cmd:  include/uapi/asm-generic/resource.h \
./.syscalls.o.cmd:  include/asm-generic/local64.h \
./.syscalls.o.cmd:  net/rina/ipcp-instances.h \
./.syscalls.o.cmd:  net/rina/ipcp-utils.h \
./.syscalls.o.cmd:  net/rina/ipcp-factories.h \
Binary file ./efcp-utils.o matches
./rnl.h:        /* 1 IPC Manager -> IPC Process */
./rnl.h:        /* 2 IPC Process -> IPC Manager */
./rnl.h:        /* 3 IPC Manager -> IPC Process */
./rnl.h:        /* 4 IPC Process -> IPC Manager */
./rnl.h:        /* 5 IPC Manager -> IPC Process */
./rnl.h:        /* 6 IPC Manager -> IPC Process */
./rnl.h:        /* 7 IPC Manager -> IPC Process */
./rnl.h:        /* 8 IPC Process -> IPC Manager */
./rnl.h:        /* 9 IPC Manager -> IPC Process */
./rnl.h:        /* 10 IPC Process -> IPC Manager */
./rnl.h:        /* 11 IPC Manager -> IPC Process */
./rnl.h:        /* IPC Process -> IPC Manager */
./rnl.h:        /* 13 IPC Process -> IPC Manager */
./rnl.h:        /* 14 IPC Manager -> IPC Process */
./rnl.h:        /* 15 IPC Manager -> IPC Process */
./rnl.h:        /* 16 IPC Process -> IPC Manager*/
./rnl.h:        /*  17 IPC Process -> IPC Manager, flow deallocated without the */
./rnl.h:        /* 18 IPC Manager -> IPC Process */
./rnl.h:        /* 19 IPC Process -> IPC Manager */
./rnl.h:        /* 20 IPC Manager -> IPC Process */
./rnl.h:        /* 21 IPC Process -> IPC Manager */
./rnl.h:        /* 22 IPC Manager -> IPC Process */
./rnl.h:        /* 23 IPC Process -> IPC Manager */
./rnl.h:        /* 24 IPC Process (user space) -> RMT (kernel) */
./rnl.h:        /* 25 IPC Process (user space) -> RMT (kernel) */
./rnl.h:        /* 26 RMT (kernel) -> IPC Process (user space) */
./rnl.h:        /* 27 NL layer -> IPC Manager */
./rnl.h:        /* 28 IPC Manager -> Kernel (NL Layer) */
./rnl.h:        /* IPC Process (user space) -> KIPCM*/
./rnl.h:        /* 30 KIPCM -> IPC Process (user space)*/
./rnl.h:        /* 31 IPC Process (user space) -> KIPCM */
./rnl.h:        /* 32 KIPCM -> IPC Process (user space)*/
./rnl.h:        /* 33 IPC Process (user space) -> KIPCM */
./rnl.h:        /* 34 KIPCM -> IPC Process (user space)*/
./rnl.h:        /* 35 IPC Process (user space) -> KIPCM */
./rnl.h:        /* 36 KIPCM -> IPC Process (user space)*/
./.utils.o.cmd:cmd_net/rina/utils.o := gcc -Wp,-MD,net/rina/.utils.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(utils)"  -D"KBUILD_MODNAME=KBUILD_STR(utils)" -c -o net/rina/.tmp_utils.o net/rina/utils.c
./.utils.o.cmd:  include/linux/compiler-gcc.h \
./.utils.o.cmd:  include/linux/compiler-gcc4.h \
./.utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.utils.o.cmd:  include/asm-generic/int-ll64.h \
./.utils.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.utils.o.cmd:  include/asm-generic/bitsperlong.h \
./.utils.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.utils.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.utils.o.cmd:  include/asm-generic/ptrace.h \
./.utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.utils.o.cmd:  include/asm-generic/bitops/fls64.h \
./.utils.o.cmd:  include/asm-generic/bitops/find.h \
./.utils.o.cmd:  include/asm-generic/bitops/sched.h \
./.utils.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.utils.o.cmd:  include/asm-generic/bitops/le.h \
./.utils.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.utils.o.cmd:  include/asm-generic/percpu.h \
./.utils.o.cmd:  include/linux/percpu-defs.h \
./.utils.o.cmd:  include/asm-generic/bug.h \
./.utils.o.cmd:  include/asm-generic/memory_model.h \
./.utils.o.cmd:  include/asm-generic/getorder.h \
./.utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.utils.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.utils.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.utils.o.cmd:  include/asm-generic/ioctl.h \
./.utils.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.utils.o.cmd:  include/asm-generic/atomic-long.h \
./.utils.o.cmd:  include/linux/pageblock-flags.h \
./.utils.o.cmd:  include/linux/page-flags-layout.h \
./.utils.o.cmd:  include/asm-generic/param.h \
./.utils.o.cmd:  include/uapi/asm-generic/param.h \
./.utils.o.cmd:  include/asm-generic/topology.h \
./.utils.o.cmd:  include/asm-generic/early_ioremap.h \
./.utils.o.cmd:  include/asm-generic/iomap.h \
./.utils.o.cmd:  include/asm-generic/pci_iomap.h \
./.utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.utils.o.cmd:  include/asm-generic/kmap_types.h \
./.utils.o.cmd:  include/asm-generic/fixmap.h \
./.utils.o.cmd:  include/asm-generic/sections.h \
./.core.o.cmd:cmd_net/rina/core.o := gcc -Wp,-MD,net/rina/.core.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(core)"  -D"KBUILD_MODNAME=KBUILD_STR(core)" -c -o net/rina/.tmp_core.o net/rina/core.c
./.core.o.cmd:  include/linux/compiler-gcc.h \
./.core.o.cmd:  include/linux/compiler-gcc4.h \
./.core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.core.o.cmd:  include/asm-generic/int-ll64.h \
./.core.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.core.o.cmd:  include/asm-generic/bitsperlong.h \
./.core.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.core.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.core.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.core.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.core.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.core.o.cmd:  include/asm-generic/ptrace.h \
./.core.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.core.o.cmd:  include/asm-generic/bitops/fls64.h \
./.core.o.cmd:  include/asm-generic/bitops/find.h \
./.core.o.cmd:  include/asm-generic/bitops/sched.h \
./.core.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.core.o.cmd:  include/asm-generic/bitops/le.h \
./.core.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.core.o.cmd:  include/asm-generic/percpu.h \
./.core.o.cmd:  include/linux/percpu-defs.h \
./.core.o.cmd:  include/asm-generic/memory_model.h \
./.core.o.cmd:  include/asm-generic/getorder.h \
./.core.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.core.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.core.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.core.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.core.o.cmd:  include/asm-generic/ioctl.h \
./.core.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.core.o.cmd:  include/asm-generic/bug.h \
./.core.o.cmd:  include/asm-generic/atomic-long.h \
./.core.o.cmd:  include/asm-generic/param.h \
./.core.o.cmd:  include/uapi/asm-generic/param.h \
./.core.o.cmd:  include/asm-generic/topology.h \
./.core.o.cmd:  include/asm-generic/early_ioremap.h \
./.core.o.cmd:  include/asm-generic/iomap.h \
./.core.o.cmd:  include/asm-generic/pci_iomap.h \
./.core.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.core.o.cmd:  include/asm-generic/kmap_types.h \
./.core.o.cmd:  include/asm-generic/fixmap.h \
./.core.o.cmd:  include/linux/pageblock-flags.h \
./.core.o.cmd:  include/linux/page-flags-layout.h \
./.core.o.cmd:  include/asm-generic/sections.h \
./.core.o.cmd:  include/linux/page-debug-flags.h \
./.core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./.core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./.core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./.core.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./.core.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./.core.o.cmd:  include/asm-generic/pgtable.h \
./.core.o.cmd:  include/linux/page-flags.h \
./.core.o.cmd:  include/asm-generic/scatterlist.h \
./.core.o.cmd:  include/linux/dma-mapping.h \
./.core.o.cmd:  include/linux/dma-attrs.h \
./.core.o.cmd:  include/linux/dma-direction.h \
./.core.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./.core.o.cmd:  include/linux/dma-debug.h \
./.core.o.cmd:  include/asm-generic/dma-coherent.h \
./.core.o.cmd:  include/linux/dma-contiguous.h \
./.core.o.cmd:  include/asm-generic/dma-mapping-common.h \
./.core.o.cmd:  include/asm-generic/cputime.h \
./.core.o.cmd:  include/asm-generic/cputime_jiffies.h \
./.core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./.core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./.core.o.cmd:  include/asm-generic/siginfo.h \
./.core.o.cmd:  include/uapi/asm-generic/siginfo.h \
./.core.o.cmd:  include/asm-generic/resource.h \
./.core.o.cmd:  include/uapi/asm-generic/resource.h \
./.core.o.cmd:  include/linux/radix-tree.h \
./.core.o.cmd:  include/linux/percpu-rwsem.h \
./.core.o.cmd:  include/asm-generic/delay.h \
./.core.o.cmd:  include/linux/percpu-refcount.h \
./.core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./.core.o.cmd:  net/rina/ipcp-instances.h \
./common.c:#define PORT_ID_WRONG -1
./common.c:#define CEP_ID_WRONG -1
./common.c:#define ADDRESS_WRONG -1
./.dt-utils.o.cmd:cmd_net/rina/dt-utils.o := gcc -Wp,-MD,net/rina/.dt-utils.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(dt_utils)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_dt-utils.o net/rina/dt-utils.c
./.dt-utils.o.cmd:source_net/rina/dt-utils.o := net/rina/dt-utils.c
./.dt-utils.o.cmd:deps_net/rina/dt-utils.o := \
./.dt-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.dt-utils.o.cmd:  include/asm-generic/int-ll64.h \
./.dt-utils.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.dt-utils.o.cmd:  include/asm-generic/bitsperlong.h \
./.dt-utils.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.dt-utils.o.cmd:  include/linux/compiler-gcc.h \
./.dt-utils.o.cmd:  include/linux/compiler-gcc4.h \
./.dt-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.dt-utils.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.dt-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.dt-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.dt-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.dt-utils.o.cmd:  include/asm-generic/ptrace.h \
./.dt-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.dt-utils.o.cmd:  include/asm-generic/bitops/fls64.h \
./.dt-utils.o.cmd:  include/asm-generic/bitops/find.h \
./.dt-utils.o.cmd:  include/asm-generic/bitops/sched.h \
./.dt-utils.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.dt-utils.o.cmd:  include/asm-generic/bitops/le.h \
./.dt-utils.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.dt-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.dt-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.dt-utils.o.cmd:  include/asm-generic/percpu.h \
./.dt-utils.o.cmd:  include/linux/percpu-defs.h \
./.dt-utils.o.cmd:  include/asm-generic/memory_model.h \
./.dt-utils.o.cmd:  include/asm-generic/getorder.h \
./.dt-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.dt-utils.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.dt-utils.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.dt-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.dt-utils.o.cmd:  include/asm-generic/ioctl.h \
./.dt-utils.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.dt-utils.o.cmd:  include/asm-generic/bug.h \
./.dt-utils.o.cmd:  include/asm-generic/atomic-long.h \
./.dt-utils.o.cmd:  include/asm-generic/param.h \
./.dt-utils.o.cmd:  include/uapi/asm-generic/param.h \
./.dt-utils.o.cmd:  include/linux/pageblock-flags.h \
./.dt-utils.o.cmd:  include/linux/page-flags-layout.h \
./.dt-utils.o.cmd:  include/asm-generic/topology.h \
./.dt-utils.o.cmd:  include/asm-generic/early_ioremap.h \
./.dt-utils.o.cmd:  include/asm-generic/iomap.h \
./.dt-utils.o.cmd:  include/asm-generic/pci_iomap.h \
./.dt-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.dt-utils.o.cmd:  include/asm-generic/kmap_types.h \
./.dt-utils.o.cmd:  include/asm-generic/fixmap.h \
./.dt-utils.o.cmd:  include/asm-generic/sections.h \
./.dt-utils.o.cmd:  net/rina/dt-utils.h \
./.dt-utils.o.cmd:  net/rina/ipcp-instances.h \
./.dt-utils.o.cmd:  net/rina/ipcp-factories.h \
./.dt-utils.o.cmd:  net/rina/dtcp-utils.h \
./.dt-utils.o.cmd:net/rina/dt-utils.o: $(deps_net/rina/dt-utils.o)
./.dt-utils.o.cmd:$(deps_net/rina/dt-utils.o):
./modules.order:kernel/net/rina/ipcps/normal-ipcp.ko
./modules.order:kernel/net/rina/ipcps/shim-dummy.ko
./modules.order:kernel/net/rina/ipcps/shim-eth-vlan.ko
./vmpi/xen-mpi-back-xenbus.c: * An hypervisor-side vmpi-impl implementation for Xen
./vmpi/xen-mpi-back-xenbus.c:#include "xen-mpi-back-common.h"
./vmpi/xen-mpi-back-xenbus.c:	struct backend_info *be = dev_get_drvdata(&dev->dev);
./vmpi/xen-mpi-back-xenbus.c:	if (be->vif) {
./vmpi/xen-mpi-back-xenbus.c:		kobject_uevent(&dev->dev.kobj, KOBJ_OFFLINE);
./vmpi/xen-mpi-back-xenbus.c:		xenbus_rm(XBT_NIL, dev->nodename, "hotplug-status");
./vmpi/xen-mpi-back-xenbus.c:		xenmpi_free(be->vif);
./vmpi/xen-mpi-back-xenbus.c:		be->vif = NULL;
./vmpi/xen-mpi-back-xenbus.c:	dev_set_drvdata(&dev->dev, NULL);
./vmpi/xen-mpi-back-xenbus.c:		xenbus_dev_fatal(dev, -ENOMEM,
./vmpi/xen-mpi-back-xenbus.c:		return -ENOMEM;
./vmpi/xen-mpi-back-xenbus.c:	be->dev = dev;
./vmpi/xen-mpi-back-xenbus.c:	dev_set_drvdata(&dev->dev, be);
./vmpi/xen-mpi-back-xenbus.c:		/* We support rx-copy path. */
./vmpi/xen-mpi-back-xenbus.c:		err = xenbus_printf(xbt, dev->nodename,
./vmpi/xen-mpi-back-xenbus.c:				    "feature-rx-copy", "%d", 1);
./vmpi/xen-mpi-back-xenbus.c:			message = "writing feature-rx-copy";
./vmpi/xen-mpi-back-xenbus.c:	} while (err == -EAGAIN);
./vmpi/xen-mpi-back-xenbus.c:	err = xenbus_printf(XBT_NIL, dev->nodename,
./vmpi/xen-mpi-back-xenbus.c:			    "feature-split-event-channels",
./vmpi/xen-mpi-back-xenbus.c:		pr_debug("Error writing feature-split-event-channels\n");
./vmpi/xen-mpi-back-xenbus.c:	be->state = XenbusStateInitWait;
./vmpi/xen-mpi-back-xenbus.c:	struct xenbus_device *dev = be->dev;
./vmpi/xen-mpi-back-xenbus.c:	if (be->vif != NULL)
./vmpi/xen-mpi-back-xenbus.c:	be->vif = xenmpi_alloc(&dev->dev, dev->otherend_id);
./vmpi/xen-mpi-back-xenbus.c:	if (IS_ERR(be->vif)) {
./vmpi/xen-mpi-back-xenbus.c:		err = PTR_ERR(be->vif);
./vmpi/xen-mpi-back-xenbus.c:		be->vif = NULL;
./vmpi/xen-mpi-back-xenbus.c:	if (be->vif)
./vmpi/xen-mpi-back-xenbus.c:		xenmpi_disconnect(be->vif);
./vmpi/xen-mpi-back-xenbus.c:	if (be->vif)
./vmpi/xen-mpi-back-xenbus.c:	struct xenbus_device *dev = be->dev;
./vmpi/xen-mpi-back-xenbus.c:	pr_debug("%s -> %s\n", dev->nodename, xenbus_strstate(state));
./vmpi/xen-mpi-back-xenbus.c:	be->state = state;
./vmpi/xen-mpi-back-xenbus.c: * InitWait -> Connected
./vmpi/xen-mpi-back-xenbus.c: *  Closed  <-> Closing
./vmpi/xen-mpi-back-xenbus.c:	while (be->state != state) {
./vmpi/xen-mpi-back-xenbus.c:		switch (be->state) {
./vmpi/xen-mpi-back-xenbus.c:					be->dev->nodename);
./vmpi/xen-mpi-back-xenbus.c:        printk("%s: backend --> %s\n", __func__, xenbus_strstate(state));
./vmpi/xen-mpi-back-xenbus.c:	struct backend_info *be = dev_get_drvdata(&dev->dev);
./vmpi/xen-mpi-back-xenbus.c:	pr_debug("%s -> %s\n", dev->otherend, xenbus_strstate(frontend_state));
./vmpi/xen-mpi-back-xenbus.c:	be->frontend_state = frontend_state;
./vmpi/xen-mpi-back-xenbus.c:		device_unregister(&dev->dev);
./vmpi/xen-mpi-back-xenbus.c:		xenbus_dev_fatal(dev, -EINVAL, "saw state %d at frontend",
./vmpi/xen-mpi-back-xenbus.c:	ratestr = xenbus_read(XBT_NIL, dev->nodename, "rate", NULL);
./vmpi/xen-mpi-back-xenbus.c:	struct xenbus_device *dev = be->dev;
./vmpi/xen-mpi-back-xenbus.c:	xen_net_read_rate(dev, &be->vif->credit_bytes,
./vmpi/xen-mpi-back-xenbus.c:			  &be->vif->credit_usec);
./vmpi/xen-mpi-back-xenbus.c:	be->vif->remaining_credit = be->vif->credit_bytes;
./vmpi/xen-mpi-back-xenbus.c:	struct vmpi_impl_info *vif = be->vif;
./vmpi/xen-mpi-back-xenbus.c:	struct xenbus_device *dev = be->dev;
./vmpi/xen-mpi-back-xenbus.c:	err = xenbus_gather(XBT_NIL, dev->otherend,
./vmpi/xen-mpi-back-xenbus.c:			    "tx-ring-ref", "%lu", &tx_ring_ref,
./vmpi/xen-mpi-back-xenbus.c:			    "rx-ring-ref", "%lu", &rx_ring_ref, NULL);
./vmpi/xen-mpi-back-xenbus.c:				 "reading %s/ring-ref",
./vmpi/xen-mpi-back-xenbus.c:				 dev->otherend);
./vmpi/xen-mpi-back-xenbus.c:	err = xenbus_gather(XBT_NIL, dev->otherend,
./vmpi/xen-mpi-back-xenbus.c:			    "event-channel-tx", "%u", &tx_evtchn,
./vmpi/xen-mpi-back-xenbus.c:			    "event-channel-rx", "%u", &rx_evtchn, NULL);
./vmpi/xen-mpi-back-xenbus.c:		err = xenbus_scanf(XBT_NIL, dev->otherend,
./vmpi/xen-mpi-back-xenbus.c:				   "event-channel", "%u", &tx_evtchn);
./vmpi/xen-mpi-back-xenbus.c:					 "reading %s/event-channel(-tx/rx)",
./vmpi/xen-mpi-back-xenbus.c:					 dev->otherend);
./vmpi/xen-mpi-back-xenbus.c:	err = xenbus_scanf(XBT_NIL, dev->otherend, "request-rx-copy", "%u",
./vmpi/xen-mpi-back-xenbus.c:	if (err == -ENOENT) {
./vmpi/xen-mpi-back-xenbus.c:		xenbus_dev_fatal(dev, err, "reading %s/request-rx-copy",
./vmpi/xen-mpi-back-xenbus.c:				 dev->otherend);
./vmpi/xen-mpi-back-xenbus.c:		return -EOPNOTSUPP;
./vmpi/xen-mpi-back-xenbus.c:				 "mapping shared-frames %lu/%lu port tx %u rx %u",
./vmpi/vmpi-guest.c: * A guest-side VMPI implemented using the vmpi-impl guest interface
./vmpi/vmpi-guest.c:#include "vmpi-stats.h"
./vmpi/vmpi-guest.c:#include "vmpi-iovec.h"
./vmpi/vmpi-guest.c:#include "vmpi-guest-impl.h"
./vmpi/vmpi-guest.c:#include "vmpi-structs.h"
./vmpi/vmpi-guest.c:#include "vmpi-ops.h"
./vmpi/vmpi-guest.c:#include "vmpi-test.h"
./vmpi/vmpi-guest.c:#include "vmpi-provider.h"
./vmpi/vmpi-guest.c:        mpi->read_cb = cb;
./vmpi/vmpi-guest.c:        mpi->read_cb_data = opaque;
./vmpi/vmpi-guest.c:        vmpi_impl_send_cb(mpi->vi, 0);
./vmpi/vmpi-guest.c:        while ((buf = vmpi_impl_get_written_buffer(mpi->vi)) != NULL) {
./vmpi/vmpi-guest.c:                buf->len = 0;
./vmpi/vmpi-guest.c:                VMPI_RING_INC(mpi->write.np);
./vmpi/vmpi-guest.c:                VMPI_RING_INC(mpi->write.nr);
./vmpi/vmpi-guest.c:                mpi->stats.txres++;
./vmpi/vmpi-guest.c:        vmpi_impl_info_t *vi = mpi->vi;
./vmpi/vmpi-guest.c:        size_t buf_data_size = mpi->write.buf_size - sizeof(struct vmpi_hdr);
./vmpi/vmpi-guest.c:                return -EBADFD;
./vmpi/vmpi-guest.c:        IFV(printk("vmpi_info_aio_write user-buf (%lu,%d)\n",
./vmpi/vmpi-guest.c:        add_wait_queue(&mpi->write.wqh, &wait);
./vmpi/vmpi-guest.c:                current->state = TASK_INTERRUPTIBLE;
./vmpi/vmpi-guest.c:                mutex_lock(&mpi->write.lock);
./vmpi/vmpi-guest.c:                if (vmpi_ring_unused(&mpi->write) == 0) {
./vmpi/vmpi-guest.c:                                mutex_unlock(&mpi->write.lock);
./vmpi/vmpi-guest.c:                                        ret = -ERESTARTSYS;
./vmpi/vmpi-guest.c:                buf = &mpi->write.bufs[mpi->write.nu];
./vmpi/vmpi-guest.c:                vmpi_buffer_hdr(buf)->channel = channel;
./vmpi/vmpi-guest.c:                                ret = -EFAULT;
./vmpi/vmpi-guest.c:                buf->len = sizeof(struct vmpi_hdr) + copylen;
./vmpi/vmpi-guest.c:                VMPI_RING_INC(mpi->write.nu);
./vmpi/vmpi-guest.c:                mpi->stats.txreq++;
./vmpi/vmpi-guest.c:                mutex_unlock(&mpi->write.lock);
./vmpi/vmpi-guest.c:        current->state = TASK_RUNNING;
./vmpi/vmpi-guest.c:        remove_wait_queue(&mpi->write.wqh, &wait);
./vmpi/vmpi-guest.c:        IFV(printk("vmpi_info_aio_write completed --> %d\n", (int)ret));
./vmpi/vmpi-guest.c:                return -EBADFD;
./vmpi/vmpi-guest.c:                return -EINVAL;
./vmpi/vmpi-guest.c:        IFV(printk("vmpi_info_aio-read user-buf (%lu, %d)\n",
./vmpi/vmpi-guest.c:        add_wait_queue(&mpi->read_global_wqh, &wait);
./vmpi/vmpi-guest.c:                current->state = TASK_INTERRUPTIBLE;
./vmpi/vmpi-guest.c:                mutex_lock(&mpi->read[channel].lock);
./vmpi/vmpi-guest.c:                if (vmpi_queue_len(&mpi->read[channel]) == 0) {
./vmpi/vmpi-guest.c:                        mutex_unlock(&mpi->read[channel].lock);
./vmpi/vmpi-guest.c:                                ret = -ERESTARTSYS;
./vmpi/vmpi-guest.c:                buf = vmpi_queue_pop_front(&mpi->read[channel]);
./vmpi/vmpi-guest.c:                mutex_unlock(&mpi->read[channel].lock);
./vmpi/vmpi-guest.c:                copylen = buf->len - sizeof(struct vmpi_hdr);
./vmpi/vmpi-guest.c:                        ret = -EFAULT;
./vmpi/vmpi-guest.c:                buf->len = 0;
./vmpi/vmpi-guest.c:        current->state = TASK_RUNNING;
./vmpi/vmpi-guest.c:        remove_wait_queue(&mpi->read_global_wqh, &wait);
./vmpi/vmpi-guest.c:        IFV(printk("vmpi_info_aio-read completed --> %d\n", (int)ret));
./vmpi/vmpi-guest.c:        wake_up_interruptible_poll(&mpi->write.wqh, POLLOUT |
./vmpi/vmpi-guest.c:        struct vmpi_impl_info *vi = mpi->vi;
./vmpi/vmpi-guest.c:        mutex_lock(&mpi->recv_worker_lock);
./vmpi/vmpi-guest.c:                IFV(printk("received %d bytes\n", (int)buf->len));
./vmpi/vmpi-guest.c:                channel = vmpi_buffer_hdr(buf)->channel;
./vmpi/vmpi-guest.c:                if (!mpi->read_cb) {
./vmpi/vmpi-guest.c:                        queue = &mpi->read[channel];
./vmpi/vmpi-guest.c:                        mutex_lock(&queue->lock);
./vmpi/vmpi-guest.c:                        mutex_unlock(&queue->lock);
./vmpi/vmpi-guest.c:                        mutex_unlock(&mpi->recv_worker_lock);
./vmpi/vmpi-guest.c:                        mpi->read_cb(mpi->read_cb_data, channel,
./vmpi/vmpi-guest.c:                                     buf->len - sizeof(struct vmpi_hdr));
./vmpi/vmpi-guest.c:                        mutex_lock(&mpi->recv_worker_lock);
./vmpi/vmpi-guest.c:                mpi->stats.rxres++;
./vmpi/vmpi-guest.c:                budget--;
./vmpi/vmpi-guest.c:                schedule_work(&mpi->recv_worker); /* HZ/20 */
./vmpi/vmpi-guest.c:        mutex_unlock(&mpi->recv_worker_lock);
./vmpi/vmpi-guest.c:        wake_up_interruptible_poll(&mpi->read_global_wqh, POLLIN |
./vmpi/vmpi-guest.c:        schedule_work(&mpi->recv_worker);
./vmpi/vmpi-guest.c:#include "vmpi-instances.h"
./vmpi/vmpi-guest.c:        *ret = -ENOMEM;
./vmpi/vmpi-guest.c:                *ret = -ENXIO;
./vmpi/vmpi-guest.c:        vmpi_stats_init(&mpi->stats);
./vmpi/vmpi-guest.c:        mpi->vi = vi;
./vmpi/vmpi-guest.c:        *ret = vmpi_ring_init(&mpi->write, VMPI_BUF_SIZE);
./vmpi/vmpi-guest.c:        mpi->read = kmalloc(sizeof(mpi->read[0]) * vmpi_max_channels,
./vmpi/vmpi-guest.c:        if (mpi->read == NULL) {
./vmpi/vmpi-guest.c:                *ret = vmpi_queue_init(&mpi->read[i], 0, VMPI_BUF_SIZE);
./vmpi/vmpi-guest.c:        init_waitqueue_head(&mpi->read_global_wqh);
./vmpi/vmpi-guest.c:        INIT_WORK(&mpi->recv_worker, recv_worker_function);
./vmpi/vmpi-guest.c:        mutex_init(&mpi->recv_worker_lock);
./vmpi/vmpi-guest.c:        vmpi_impl_callbacks_register(mpi->vi, xmit_callback, recv_callback);
./vmpi/vmpi-guest.c:        mpi->read_cb = NULL;
./vmpi/vmpi-guest.c:        mpi->id = vmpi_id_counter++;
./vmpi/vmpi-guest.c:        vmpi_provider_register(VMPI_PROVIDER_GUEST, mpi->id, &ops);
./vmpi/vmpi-guest.c:        vmpi_impl_callbacks_unregister(mpi->vi);
./vmpi/vmpi-guest.c:        for (--i; i >= 0; i--) {
./vmpi/vmpi-guest.c:                vmpi_queue_fini(&mpi->read[i]);
./vmpi/vmpi-guest.c:        kfree(mpi->read);
./vmpi/vmpi-guest.c:        vmpi_ring_fini(&mpi->write);
./vmpi/vmpi-guest.c:        vmpi_stats_fini(&mpi->stats);
./vmpi/vmpi-guest.c:        vmpi_provider_unregister(VMPI_PROVIDER_GUEST, mpi->id);
./vmpi/vmpi-guest.c:         * Deregister the callbacks, so that vmpi-impl will stop
./vmpi/vmpi-guest.c:        vmpi_impl_callbacks_unregister(mpi->vi);
./vmpi/vmpi-guest.c:        cancel_work_sync(&mpi->recv_worker);
./vmpi/vmpi-guest.c:                vmpi_queue_fini(&mpi->read[i]);
./vmpi/vmpi-guest.c:        kfree(mpi->read);
./vmpi/vmpi-guest.c:        vmpi_ring_fini(&mpi->write);
./vmpi/vmpi-guest.c:        vmpi_stats_fini(&mpi->stats);
Binary file ./vmpi/vmpi-host-impl-virtio.o matches
./vmpi/.vmpi-guest-impl-virtio.o.cmd:cmd_net/rina/vmpi/vmpi-guest-impl-virtio.o := gcc -Wp,-MD,net/rina/vmpi/.vmpi-guest-impl-virtio.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(vmpi_guest_impl_virtio)"  -D"KBUILD_MODNAME=KBUILD_STR(virtio_mpi)" -c -o net/rina/vmpi/.tmp_vmpi-guest-impl-virtio.o net/rina/vmpi/vmpi-guest-impl-virtio.c
./vmpi/.vmpi-guest-impl-virtio.o.cmd:source_net/rina/vmpi/vmpi-guest-impl-virtio.o := net/rina/vmpi/vmpi-guest-impl-virtio.c
./vmpi/.vmpi-guest-impl-virtio.o.cmd:deps_net/rina/vmpi/vmpi-guest-impl-virtio.o := \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/compiler-gcc.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/compiler-gcc4.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/int-ll64.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/bitsperlong.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/ptrace.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/bitops/fls64.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/bitops/find.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/bitops/sched.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/bitops/le.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/percpu.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/percpu-defs.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/memory_model.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/getorder.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/pgtable-nopud.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/ioctl.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/uapi/asm-generic/ioctl.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/bug.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/atomic-long.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/param.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/uapi/asm-generic/param.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/pageblock-flags.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/page-flags-layout.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/topology.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/iomap.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/pci_iomap.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/kmap_types.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/fixmap.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/delay.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/page-debug-flags.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/pgtable.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/page-flags.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/scatterlist.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/dma-mapping.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/dma-attrs.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/dma-direction.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/dma-debug.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/dma-coherent.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/dma-contiguous.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/dma-mapping-common.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/radix-tree.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/percpu-rwsem.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/cputime.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/cputime_jiffies.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/siginfo.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/uapi/asm-generic/siginfo.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/resource.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/uapi/asm-generic/resource.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/linux/percpu-refcount.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/sections.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  include/asm-generic/module.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  net/rina/vmpi/vmpi-guest-impl.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  net/rina/vmpi/vmpi-ring.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:  net/rina/vmpi/vmpi-guest-test.h \
./vmpi/.vmpi-guest-impl-virtio.o.cmd:net/rina/vmpi/vmpi-guest-impl-virtio.o: $(deps_net/rina/vmpi/vmpi-guest-impl-virtio.o)
./vmpi/.vmpi-guest-impl-virtio.o.cmd:$(deps_net/rina/vmpi/vmpi-guest-impl-virtio.o):
./vmpi/vmpi-stats.c:#include "vmpi-stats.h"
./vmpi/vmpi-stats.c:        seq_printf(m, "rxres[%u]\n", stats_instance->rxres);
./vmpi/vmpi-stats.c:        seq_printf(m, "txreq[%u]\n", stats_instance->txreq);
./vmpi/vmpi-stats.c:        seq_printf(m, "txres[%u]\n", stats_instance->txres);
./vmpi/vmpi-stats.c:        proc_create("vmpi-stats", 0, NULL, &vmpi_stats_fops);
./vmpi/vmpi-stats.c:        remove_proc_entry("vmpi-stats", NULL);
./vmpi/unprepare-guest-xen.sh:set -x
./vmpi/unprepare-guest-xen.sh:sudo rmmod vmpi-xen-guest
./vmpi/.built-in.o.cmd:cmd_net/rina/vmpi/built-in.o :=  rm -f net/rina/vmpi/built-in.o; ar rcsD net/rina/vmpi/built-in.o
./vmpi/.vhost-mpi.mod.o.cmd:cmd_net/rina/vmpi/vhost-mpi.mod.o := gcc -Wp,-MD,net/rina/vmpi/.vhost-mpi.mod.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(vhost_mpi.mod)"  -D"KBUILD_MODNAME=KBUILD_STR(vhost_mpi)" -DMODULE  -c -o net/rina/vmpi/vhost-mpi.mod.o net/rina/vmpi/vhost-mpi.mod.c
./vmpi/.vhost-mpi.mod.o.cmd:source_net/rina/vmpi/vhost-mpi.mod.o := net/rina/vmpi/vhost-mpi.mod.c
./vmpi/.vhost-mpi.mod.o.cmd:deps_net/rina/vmpi/vhost-mpi.mod.o := \
./vmpi/.vhost-mpi.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/int-ll64.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/bitsperlong.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/linux/compiler-gcc.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/linux/compiler-gcc4.h \
./vmpi/.vhost-mpi.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./vmpi/.vhost-mpi.mod.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./vmpi/.vhost-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./vmpi/.vhost-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./vmpi/.vhost-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/ptrace.h \
./vmpi/.vhost-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/bitops/fls64.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/bitops/find.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/bitops/sched.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/bitops/le.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./vmpi/.vhost-mpi.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./vmpi/.vhost-mpi.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/percpu.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/linux/percpu-defs.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/bug.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/memory_model.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/getorder.h \
./vmpi/.vhost-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/pgtable-nopud.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./vmpi/.vhost-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/ioctl.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/uapi/asm-generic/ioctl.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/atomic-long.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/linux/pageblock-flags.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/linux/page-flags-layout.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/param.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/uapi/asm-generic/param.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/topology.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/iomap.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/pci_iomap.h \
./vmpi/.vhost-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/kmap_types.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/fixmap.h \
./vmpi/.vhost-mpi.mod.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./vmpi/.vhost-mpi.mod.o.cmd:  include/asm-generic/module.h \
./vmpi/.vhost-mpi.mod.o.cmd:net/rina/vmpi/vhost-mpi.mod.o: $(deps_net/rina/vmpi/vhost-mpi.mod.o)
./vmpi/.vhost-mpi.mod.o.cmd:$(deps_net/rina/vmpi/vhost-mpi.mod.o):
./vmpi/unprepare-guest-kvm.sh:set -x
./vmpi/unprepare-guest-kvm.sh:sudo rmmod shim-hv
./vmpi/unprepare-guest-kvm.sh:sudo rmmod vmpi-kvm-guest
./vmpi/.vmpi-host.o.cmd:cmd_net/rina/vmpi/vmpi-host.o := gcc -Wp,-MD,net/rina/vmpi/.vmpi-host.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(vmpi_host)"  -D"KBUILD_MODNAME=KBUILD_STR(vhost_mpi)" -c -o net/rina/vmpi/.tmp_vmpi-host.o net/rina/vmpi/vmpi-host.c
./vmpi/.vmpi-host.o.cmd:source_net/rina/vmpi/vmpi-host.o := net/rina/vmpi/vmpi-host.c
./vmpi/.vmpi-host.o.cmd:deps_net/rina/vmpi/vmpi-host.o := \
./vmpi/.vmpi-host.o.cmd:  include/linux/compiler-gcc.h \
./vmpi/.vmpi-host.o.cmd:  include/linux/compiler-gcc4.h \
./vmpi/.vmpi-host.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/int-ll64.h \
./vmpi/.vmpi-host.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/bitsperlong.h \
./vmpi/.vmpi-host.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/ptrace.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/bitops/fls64.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/bitops/find.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/bitops/sched.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/bitops/le.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/percpu.h \
./vmpi/.vmpi-host.o.cmd:  include/linux/percpu-defs.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/memory_model.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/getorder.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/pgtable-nopud.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/ioctl.h \
./vmpi/.vmpi-host.o.cmd:  include/uapi/asm-generic/ioctl.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/bug.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/atomic-long.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/param.h \
./vmpi/.vmpi-host.o.cmd:  include/uapi/asm-generic/param.h \
./vmpi/.vmpi-host.o.cmd:  include/linux/page-debug-flags.h \
./vmpi/.vmpi-host.o.cmd:  include/linux/page-flags-layout.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/cputime.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/cputime_jiffies.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/topology.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/iomap.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/pci_iomap.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/kmap_types.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/fixmap.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/siginfo.h \
./vmpi/.vmpi-host.o.cmd:  include/uapi/asm-generic/siginfo.h \
./vmpi/.vmpi-host.o.cmd:  include/linux/pageblock-flags.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/resource.h \
./vmpi/.vmpi-host.o.cmd:  include/uapi/asm-generic/resource.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./vmpi/.vmpi-host.o.cmd:  net/rina/vmpi/vmpi-host-impl.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/pgtable.h \
./vmpi/.vmpi-host.o.cmd:  include/linux/page-flags.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/scatterlist.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./vmpi/.vmpi-host.o.cmd:  include/asm-generic/module.h \
./vmpi/.vmpi-host.o.cmd:  include/linux/radix-tree.h \
./vmpi/.vmpi-host.o.cmd:  include/linux/percpu-rwsem.h \
./vmpi/.vmpi-host.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./vmpi/.vmpi-host.o.cmd:  net/rina/vmpi/vmpi-ring.h \
./vmpi/.vmpi-host.o.cmd:  net/rina/vmpi/vmpi-host-test.h \
./vmpi/.vmpi-host.o.cmd:net/rina/vmpi/vmpi-host.o: $(deps_net/rina/vmpi/vmpi-host.o)
./vmpi/.vmpi-host.o.cmd:$(deps_net/rina/vmpi/vmpi-host.o):
Binary file ./vmpi/vhost-mpi.mod.o matches
./vmpi/.vmpi-ring.o.cmd:cmd_net/rina/vmpi/vmpi-ring.o := gcc -Wp,-MD,net/rina/vmpi/.vmpi-ring.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(vmpi_ring)"  -c -o net/rina/vmpi/.tmp_vmpi-ring.o net/rina/vmpi/vmpi-ring.c
./vmpi/.vmpi-ring.o.cmd:source_net/rina/vmpi/vmpi-ring.o := net/rina/vmpi/vmpi-ring.c
./vmpi/.vmpi-ring.o.cmd:deps_net/rina/vmpi/vmpi-ring.o := \
./vmpi/.vmpi-ring.o.cmd:  include/linux/compiler-gcc.h \
./vmpi/.vmpi-ring.o.cmd:  include/linux/compiler-gcc4.h \
./vmpi/.vmpi-ring.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/int-ll64.h \
./vmpi/.vmpi-ring.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/bitsperlong.h \
./vmpi/.vmpi-ring.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./vmpi/.vmpi-ring.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./vmpi/.vmpi-ring.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./vmpi/.vmpi-ring.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./vmpi/.vmpi-ring.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./vmpi/.vmpi-ring.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/ptrace.h \
./vmpi/.vmpi-ring.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/bitops/fls64.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/bitops/find.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/bitops/sched.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/bitops/le.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./vmpi/.vmpi-ring.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./vmpi/.vmpi-ring.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/percpu.h \
./vmpi/.vmpi-ring.o.cmd:  include/linux/percpu-defs.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/bug.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/memory_model.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/getorder.h \
./vmpi/.vmpi-ring.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/pgtable-nopud.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./vmpi/.vmpi-ring.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/ioctl.h \
./vmpi/.vmpi-ring.o.cmd:  include/uapi/asm-generic/ioctl.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/atomic-long.h \
./vmpi/.vmpi-ring.o.cmd:  include/linux/pageblock-flags.h \
./vmpi/.vmpi-ring.o.cmd:  include/linux/page-flags-layout.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/param.h \
./vmpi/.vmpi-ring.o.cmd:  include/uapi/asm-generic/param.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/topology.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/iomap.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/pci_iomap.h \
./vmpi/.vmpi-ring.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/kmap_types.h \
./vmpi/.vmpi-ring.o.cmd:  include/asm-generic/fixmap.h \
./vmpi/.vmpi-ring.o.cmd:  net/rina/vmpi/vmpi-ring.h \
./vmpi/.vmpi-ring.o.cmd:net/rina/vmpi/vmpi-ring.o: $(deps_net/rina/vmpi/vmpi-ring.o)
./vmpi/.vmpi-ring.o.cmd:$(deps_net/rina/vmpi/vmpi-ring.o):
./vmpi/.vmpi-guest-test.o.cmd:cmd_net/rina/vmpi/vmpi-guest-test.o := gcc -Wp,-MD,net/rina/vmpi/.vmpi-guest-test.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(vmpi_guest_test)"  -D"KBUILD_MODNAME=KBUILD_STR(virtio_mpi)" -c -o net/rina/vmpi/.tmp_vmpi-guest-test.o net/rina/vmpi/vmpi-guest-test.c
./vmpi/.vmpi-guest-test.o.cmd:source_net/rina/vmpi/vmpi-guest-test.o := net/rina/vmpi/vmpi-guest-test.c
./vmpi/.vmpi-guest-test.o.cmd:deps_net/rina/vmpi/vmpi-guest-test.o := \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/int-ll64.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/bitsperlong.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/linux/compiler-gcc.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/linux/compiler-gcc4.h \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./vmpi/.vmpi-guest-test.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/ptrace.h \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/bitops/fls64.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/bitops/find.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/bitops/sched.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/bitops/le.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/percpu.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/linux/percpu-defs.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/bug.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/memory_model.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/getorder.h \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/pgtable-nopud.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/ioctl.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/uapi/asm-generic/ioctl.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/atomic-long.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/linux/pageblock-flags.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/linux/page-flags-layout.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/param.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/uapi/asm-generic/param.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/topology.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/iomap.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/pci_iomap.h \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/kmap_types.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/fixmap.h \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/asm-generic/module.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/linux/radix-tree.h \
./vmpi/.vmpi-guest-test.o.cmd:  include/linux/percpu-rwsem.h \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./vmpi/.vmpi-guest-test.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./vmpi/.vmpi-guest-test.o.cmd:net/rina/vmpi/vmpi-guest-test.o: $(deps_net/rina/vmpi/vmpi-guest-test.o)
./vmpi/.vmpi-guest-test.o.cmd:$(deps_net/rina/vmpi/vmpi-guest-test.o):
Binary file ./vmpi/vmpi-host.o matches
./vmpi/vmpi-host-impl.h: * An hypervisor-side vmpi-impl interface
./vmpi/vmpi-host-impl.h:#include "vmpi-structs.h"
./vmpi/vmpi-host-impl.h:#include "vmpi-stats.h"
./vmpi/Kconfig:	tristate "VMPI for KVM and Virtio - guest support"
./vmpi/Kconfig:	tristate "VMPI for KVM and Virtio - host support"
./vmpi/Kconfig:        tristate "VMPI for Xen - guest support"
./vmpi/Kconfig:        tristate "VMPI for Xen - host support"
./vmpi/.virtio-mpi.o.cmd:cmd_net/rina/vmpi/virtio-mpi.o := ld -m elf_i386   -r -o net/rina/vmpi/virtio-mpi.o net/rina/vmpi/vmpi-ring.o net/rina/vmpi/vmpi-guest-impl-virtio.o net/rina/vmpi/vmpi-guest-test.o net/rina/vmpi/vmpi-guest.o 
./vmpi/vmpi-instances.h:#include "vmpi-ops.h"
./vmpi/vmpi-instances.h:        return vmpi_write_common(ops->priv, channel, iv, iovcnt, 0);
./vmpi/vmpi-instances.h:        return vmpi_register_read_callback(ops->priv, cb, opaque);
./vmpi/.virtio-mpi.mod.o.cmd:cmd_net/rina/vmpi/virtio-mpi.mod.o := gcc -Wp,-MD,net/rina/vmpi/.virtio-mpi.mod.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(virtio_mpi.mod)"  -D"KBUILD_MODNAME=KBUILD_STR(virtio_mpi)" -DMODULE  -c -o net/rina/vmpi/virtio-mpi.mod.o net/rina/vmpi/virtio-mpi.mod.c
./vmpi/.virtio-mpi.mod.o.cmd:source_net/rina/vmpi/virtio-mpi.mod.o := net/rina/vmpi/virtio-mpi.mod.c
./vmpi/.virtio-mpi.mod.o.cmd:deps_net/rina/vmpi/virtio-mpi.mod.o := \
./vmpi/.virtio-mpi.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/int-ll64.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/bitsperlong.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/linux/compiler-gcc.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/linux/compiler-gcc4.h \
./vmpi/.virtio-mpi.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./vmpi/.virtio-mpi.mod.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./vmpi/.virtio-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./vmpi/.virtio-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./vmpi/.virtio-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/ptrace.h \
./vmpi/.virtio-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/bitops/fls64.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/bitops/find.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/bitops/sched.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/bitops/le.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./vmpi/.virtio-mpi.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./vmpi/.virtio-mpi.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/percpu.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/linux/percpu-defs.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/bug.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/memory_model.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/getorder.h \
./vmpi/.virtio-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/pgtable-nopud.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./vmpi/.virtio-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/ioctl.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/uapi/asm-generic/ioctl.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/atomic-long.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/linux/pageblock-flags.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/linux/page-flags-layout.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/param.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/uapi/asm-generic/param.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/topology.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/iomap.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/pci_iomap.h \
./vmpi/.virtio-mpi.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/kmap_types.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/fixmap.h \
./vmpi/.virtio-mpi.mod.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./vmpi/.virtio-mpi.mod.o.cmd:  include/asm-generic/module.h \
./vmpi/.virtio-mpi.mod.o.cmd:net/rina/vmpi/virtio-mpi.mod.o: $(deps_net/rina/vmpi/virtio-mpi.mod.o)
./vmpi/.virtio-mpi.mod.o.cmd:$(deps_net/rina/vmpi/virtio-mpi.mod.o):
./vmpi/vmpi-structs.h:#define vmpi_buffer_hdr(b) ((struct vmpi_hdr *)b->p)
./vmpi/vmpi-structs.h:#define vmpi_buffer_data(b) (b->p + sizeof(struct vmpi_hdr))
./vmpi/vmpi-structs.h:/* ######################## VMPI-RING ############################## */
./vmpi/vmpi-structs.h:        int space = (int)ring->nr - (int)ring->nu - 1;
./vmpi/vmpi-structs.h:        int space = (int)ring->np - (int)ring->nr;
./vmpi/vmpi-structs.h:        int space = (int)ring->nu - (int)ring->np;
./vmpi/vmpi-structs.h:/* ############################# VMPI-QUEUE ########################## */
./vmpi/vmpi-structs.h:        return queue->len;
./vmpi/vmpi-structs.h:        return queue->len == 0;
./vmpi/vmpi-provider.c:#include "vmpi-provider.h"
./vmpi/vmpi-provider.c:                if (elem->id == id && (elem->provider == provider ||
./vmpi/vmpi-provider.c:                return -EINVAL;
./vmpi/vmpi-provider.c:        *ops = elem->ops;
./vmpi/vmpi-provider.c:                return -EINVAL;
./vmpi/vmpi-provider.c:                return -ENOMEM;
./vmpi/vmpi-provider.c:        elem->provider = provider;
./vmpi/vmpi-provider.c:        elem->id = id;
./vmpi/vmpi-provider.c:        elem->ops = *ops;
./vmpi/vmpi-provider.c:        list_add_tail(&elem->node, &providers);
./vmpi/vmpi-provider.c:                return -EINVAL;
./vmpi/vmpi-provider.c:                return -ENOENT;
./vmpi/vmpi-provider.c:        list_del(&elem->node);
./vmpi/.vmpi-host-test.o.cmd:cmd_net/rina/vmpi/vmpi-host-test.o := gcc -Wp,-MD,net/rina/vmpi/.vmpi-host-test.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(vmpi_host_test)"  -D"KBUILD_MODNAME=KBUILD_STR(vhost_mpi)" -c -o net/rina/vmpi/.tmp_vmpi-host-test.o net/rina/vmpi/vmpi-host-test.c
./vmpi/.vmpi-host-test.o.cmd:source_net/rina/vmpi/vmpi-host-test.o := net/rina/vmpi/vmpi-host-test.c
./vmpi/.vmpi-host-test.o.cmd:deps_net/rina/vmpi/vmpi-host-test.o := \
./vmpi/.vmpi-host-test.o.cmd:  include/linux/compiler-gcc.h \
./vmpi/.vmpi-host-test.o.cmd:  include/linux/compiler-gcc4.h \
./vmpi/.vmpi-host-test.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/int-ll64.h \
./vmpi/.vmpi-host-test.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/bitsperlong.h \
./vmpi/.vmpi-host-test.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./vmpi/.vmpi-host-test.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./vmpi/.vmpi-host-test.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./vmpi/.vmpi-host-test.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./vmpi/.vmpi-host-test.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./vmpi/.vmpi-host-test.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/ptrace.h \
./vmpi/.vmpi-host-test.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/bitops/fls64.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/bitops/find.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/bitops/sched.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/bitops/le.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./vmpi/.vmpi-host-test.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./vmpi/.vmpi-host-test.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/percpu.h \
./vmpi/.vmpi-host-test.o.cmd:  include/linux/percpu-defs.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/bug.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/memory_model.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/getorder.h \
./vmpi/.vmpi-host-test.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/pgtable-nopud.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./vmpi/.vmpi-host-test.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/ioctl.h \
./vmpi/.vmpi-host-test.o.cmd:  include/uapi/asm-generic/ioctl.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/atomic-long.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/param.h \
./vmpi/.vmpi-host-test.o.cmd:  include/uapi/asm-generic/param.h \
./vmpi/.vmpi-host-test.o.cmd:  include/linux/radix-tree.h \
./vmpi/.vmpi-host-test.o.cmd:  include/linux/percpu-rwsem.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/topology.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/iomap.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/pci_iomap.h \
./vmpi/.vmpi-host-test.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/kmap_types.h \
./vmpi/.vmpi-host-test.o.cmd:  include/asm-generic/fixmap.h \
./vmpi/.vmpi-host-test.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./vmpi/.vmpi-host-test.o.cmd:  net/rina/vmpi/vmpi-host-test.h \
./vmpi/.vmpi-host-test.o.cmd:net/rina/vmpi/vmpi-host-test.o: $(deps_net/rina/vmpi/vmpi-host-test.o)
./vmpi/.vmpi-host-test.o.cmd:$(deps_net/rina/vmpi/vmpi-host-test.o):
./vmpi/.vmpi-guest.o.cmd:cmd_net/rina/vmpi/vmpi-guest.o := gcc -Wp,-MD,net/rina/vmpi/.vmpi-guest.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(vmpi_guest)"  -D"KBUILD_MODNAME=KBUILD_STR(virtio_mpi)" -c -o net/rina/vmpi/.tmp_vmpi-guest.o net/rina/vmpi/vmpi-guest.c
./vmpi/.vmpi-guest.o.cmd:source_net/rina/vmpi/vmpi-guest.o := net/rina/vmpi/vmpi-guest.c
./vmpi/.vmpi-guest.o.cmd:deps_net/rina/vmpi/vmpi-guest.o := \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/int-ll64.h \
./vmpi/.vmpi-guest.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/bitsperlong.h \
./vmpi/.vmpi-guest.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./vmpi/.vmpi-guest.o.cmd:  include/linux/compiler-gcc.h \
./vmpi/.vmpi-guest.o.cmd:  include/linux/compiler-gcc4.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./vmpi/.vmpi-guest.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/ptrace.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/bitops/fls64.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/bitops/find.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/bitops/sched.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/bitops/le.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/percpu.h \
./vmpi/.vmpi-guest.o.cmd:  include/linux/percpu-defs.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/bug.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/memory_model.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/getorder.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/pgtable-nopud.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/ioctl.h \
./vmpi/.vmpi-guest.o.cmd:  include/uapi/asm-generic/ioctl.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/atomic-long.h \
./vmpi/.vmpi-guest.o.cmd:  include/linux/pageblock-flags.h \
./vmpi/.vmpi-guest.o.cmd:  include/linux/page-flags-layout.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/param.h \
./vmpi/.vmpi-guest.o.cmd:  include/uapi/asm-generic/param.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/topology.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/iomap.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/pci_iomap.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/kmap_types.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/fixmap.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/module.h \
./vmpi/.vmpi-guest.o.cmd:  include/linux/radix-tree.h \
./vmpi/.vmpi-guest.o.cmd:  include/linux/percpu-rwsem.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./vmpi/.vmpi-guest.o.cmd:  include/linux/page-debug-flags.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/cputime.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/cputime_jiffies.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/siginfo.h \
./vmpi/.vmpi-guest.o.cmd:  include/uapi/asm-generic/siginfo.h \
./vmpi/.vmpi-guest.o.cmd:  include/asm-generic/resource.h \
./vmpi/.vmpi-guest.o.cmd:  include/uapi/asm-generic/resource.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./vmpi/.vmpi-guest.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./vmpi/.vmpi-guest.o.cmd:  net/rina/vmpi/vmpi-guest-impl.h \
./vmpi/.vmpi-guest.o.cmd:  net/rina/vmpi/vmpi-ring.h \
./vmpi/.vmpi-guest.o.cmd:net/rina/vmpi/vmpi-guest.o: $(deps_net/rina/vmpi/vmpi-guest.o)
./vmpi/.vmpi-guest.o.cmd:$(deps_net/rina/vmpi/vmpi-guest.o):
./vmpi/modules.order:kernel/net/rina/vmpi/vhost-mpi.ko
./vmpi/modules.order:kernel/net/rina/vmpi/virtio-mpi.ko
./vmpi/vmpi-structs.c:#include "vmpi-structs.h"
./vmpi/vmpi-structs.c:        buf->len = 0;
./vmpi/vmpi-structs.c:        buf->next = NULL;
./vmpi/vmpi-structs.c:                buf->page = NULL;
./vmpi/vmpi-structs.c:                buf->p = kmalloc(size, GFP_ATOMIC);
./vmpi/vmpi-structs.c:                if (unlikely(buf->p == NULL))
./vmpi/vmpi-structs.c:                        return -ENOMEM;
./vmpi/vmpi-structs.c:                buf->size = size;
./vmpi/vmpi-structs.c:                buf->page = alloc_page(GFP_ATOMIC);
./vmpi/vmpi-structs.c:                if (unlikely(buf->page == NULL))
./vmpi/vmpi-structs.c:                        return -ENOMEM;
./vmpi/vmpi-structs.c:                buf->p = page_address(buf->page);
./vmpi/vmpi-structs.c:                buf->size = PAGE_SIZE;
./vmpi/vmpi-structs.c:        buf->len = 0;
./vmpi/vmpi-structs.c:        if (buf->page) {
./vmpi/vmpi-structs.c:                put_page(buf->page);
./vmpi/vmpi-structs.c:                kfree(buf->p);
./vmpi/vmpi-structs.c:        int ret = -ENOMEM;
./vmpi/vmpi-structs.c:        init_waitqueue_head(&ring->wqh);
./vmpi/vmpi-structs.c:        mutex_init(&ring->lock);
./vmpi/vmpi-structs.c:        ring->nu = ring->np = ring->nr = 0;
./vmpi/vmpi-structs.c:        ring->buf_size = buf_size;
./vmpi/vmpi-structs.c:        ring->bufs = kmalloc(sizeof(struct vmpi_buffer) * VMPI_RING_SIZE, GFP_KERNEL);
./vmpi/vmpi-structs.c:        if (ring->bufs == NULL) {
./vmpi/vmpi-structs.c:                ret = vmpi_buffer_init(&ring->bufs[i], ring->buf_size);
./vmpi/vmpi-structs.c:        for (i--; i >= 0; i--) {
./vmpi/vmpi-structs.c:                vmpi_buffer_fini(&ring->bufs[i]);
./vmpi/vmpi-structs.c:        kfree(ring->bufs);
./vmpi/vmpi-structs.c:                vmpi_buffer_fini(&ring->bufs[i]);
./vmpi/vmpi-structs.c:        kfree(ring->bufs);
./vmpi/vmpi-structs.c:        buf->next = NULL;
./vmpi/vmpi-structs.c:        if (queue->tail) {
./vmpi/vmpi-structs.c:                queue->tail->next = buf;
./vmpi/vmpi-structs.c:                queue->tail = buf;
./vmpi/vmpi-structs.c:                queue->head = queue->tail = buf;
./vmpi/vmpi-structs.c:        queue->len++;
./vmpi/vmpi-structs.c:        struct vmpi_buffer *ret = queue->head;
./vmpi/vmpi-structs.c:                queue->head = ret->next;
./vmpi/vmpi-structs.c:                if (queue->head == NULL) {
./vmpi/vmpi-structs.c:                        queue->tail = NULL;
./vmpi/vmpi-structs.c:                ret->next = NULL;  /* Not necessary. */
./vmpi/vmpi-structs.c:                queue->len--;
./vmpi/vmpi-structs.c:        queue->head = queue->tail = NULL;
./vmpi/vmpi-structs.c:        queue->len = 0;
./vmpi/vmpi-structs.c:        queue->buf_size = buf_size;
./vmpi/vmpi-structs.c:        init_waitqueue_head(&queue->wqh);
./vmpi/vmpi-structs.c:        mutex_init(&queue->lock);
./vmpi/vmpi-structs.c:                        buf = vmpi_buffer_create(queue->buf_size);
./vmpi/vmpi-structs.c:                                return -ENOMEM;
Binary file ./vmpi/vmpi-guest-impl-virtio.o matches
Binary file ./vmpi/virtio-mpi.o matches
./vmpi/vmpi-host-impl-kvm.c: * An hypervisor-side vmpi-impl implementation for KVM and virtio
./vmpi/vmpi-host-impl-kvm.c:#include "vmpi-iovec.h"
./vmpi/vmpi-host-impl-kvm.c:#include "vmpi-structs.h"
./vmpi/vmpi-host-impl-kvm.c:#include "vmpi-host-impl.h"
./vmpi/vmpi-host-impl-kvm.c:        vi->read_cb = cb;
./vmpi/vmpi-host-impl-kvm.c:        vi->read_cb_data = opaque;
./vmpi/vmpi-host-impl-kvm.c:                mutex_lock(&vi->read_cb_queue.lock);
./vmpi/vmpi-host-impl-kvm.c:                buf = vmpi_queue_pop_front(&vi->read_cb_queue);
./vmpi/vmpi-host-impl-kvm.c:                mutex_unlock(&vi->read_cb_queue.lock);
./vmpi/vmpi-host-impl-kvm.c:                vi->read_cb(vi->read_cb_data,
./vmpi/vmpi-host-impl-kvm.c:                            vmpi_buffer_hdr(buf)->channel,
./vmpi/vmpi-host-impl-kvm.c:                            buf->len - sizeof(struct vmpi_hdr));
./vmpi/vmpi-host-impl-kvm.c:/* Expects to be always run from workqueue - which acts as
./vmpi/vmpi-host-impl-kvm.c: * read-size critical section for our kind of RCU. */
./vmpi/vmpi-host-impl-kvm.c:        struct vmpi_impl_queue *nvq = &vi->vqs[VHOST_MPI_VQ_TX];
./vmpi/vmpi-host-impl-kvm.c:        struct vhost_virtqueue *vq = &nvq->vq;
./vmpi/vmpi-host-impl-kvm.c:        mutex_lock(&vq->mutex);
./vmpi/vmpi-host-impl-kvm.c:        opaque = vq->private_data;
./vmpi/vmpi-host-impl-kvm.c:        vhost_disable_notify(&vi->dev, vq);
./vmpi/vmpi-host-impl-kvm.c:                head = vhost_get_vq_desc(&vi->dev, vq, vq->iov,
./vmpi/vmpi-host-impl-kvm.c:                                         ARRAY_SIZE(vq->iov),
./vmpi/vmpi-host-impl-kvm.c:                if (head == vq->num) {
./vmpi/vmpi-host-impl-kvm.c:                        if (unlikely(vhost_enable_notify(&vi->dev, vq))) {
./vmpi/vmpi-host-impl-kvm.c:                                vhost_disable_notify(&vi->dev, vq);
./vmpi/vmpi-host-impl-kvm.c:                len = iov_length(vq->iov, out);
./vmpi/vmpi-host-impl-kvm.c:                        len = iovec_to_buf(vq->iov, out, buf->p, buf->size);
./vmpi/vmpi-host-impl-kvm.c:                        buf->len = len;
./vmpi/vmpi-host-impl-kvm.c:                        if (!vi->read_cb) {
./vmpi/vmpi-host-impl-kvm.c:                                channel = vmpi_buffer_hdr(buf)->channel;
./vmpi/vmpi-host-impl-kvm.c:                                read = &vi->read[channel];
./vmpi/vmpi-host-impl-kvm.c:                                mutex_lock(&read->lock);
./vmpi/vmpi-host-impl-kvm.c:                                mutex_unlock(&read->lock);
./vmpi/vmpi-host-impl-kvm.c:                                wake_up_interruptible_poll(&read->wqh,
./vmpi/vmpi-host-impl-kvm.c:                                mutex_lock(&vi->read_cb_queue.lock);
./vmpi/vmpi-host-impl-kvm.c:                                vmpi_queue_push_back(&vi->read_cb_queue, buf);
./vmpi/vmpi-host-impl-kvm.c:                                mutex_unlock(&vi->read_cb_queue.lock);
./vmpi/vmpi-host-impl-kvm.c:                                schedule_work(&vi->read_cb_worker);
./vmpi/vmpi-host-impl-kvm.c:                        vi->stats->rxres++;
./vmpi/vmpi-host-impl-kvm.c:                vhost_add_used_and_signal(&vi->dev, vq, head, 0);
./vmpi/vmpi-host-impl-kvm.c:                        vhost_poll_queue(&vq->poll);
./vmpi/vmpi-host-impl-kvm.c:        mutex_unlock(&vq->mutex);
./vmpi/vmpi-host-impl-kvm.c:                ret = ring->bufs[ring->np].len;
./vmpi/vmpi-host-impl-kvm.c:/* This is a multi-buffer version of vhost_get_desc, that works if
./vmpi/vmpi-host-impl-kvm.c: * @vq          - the relevant virtqueue
./vmpi/vmpi-host-impl-kvm.c: * @datalen     - data length we'll be reading
./vmpi/vmpi-host-impl-kvm.c: * @iovcount    - returned count of io vectors we fill
./vmpi/vmpi-host-impl-kvm.c: * @log         - vhost log
./vmpi/vmpi-host-impl-kvm.c: * @log_num     - log offset
./vmpi/vmpi-host-impl-kvm.c: * @quota       - headcount quota, 1 for big buffer
./vmpi/vmpi-host-impl-kvm.c:                        r = -ENOBUFS;
./vmpi/vmpi-host-impl-kvm.c:                d = vhost_get_vq_desc(vq->dev, vq, vq->iov + seg,
./vmpi/vmpi-host-impl-kvm.c:                                      ARRAY_SIZE(vq->iov) - seg, &out,
./vmpi/vmpi-host-impl-kvm.c:                if (d == vq->num) {
./vmpi/vmpi-host-impl-kvm.c:                        r = -EINVAL;
./vmpi/vmpi-host-impl-kvm.c:                heads[headcount].len = iov_length(vq->iov + seg, in);
./vmpi/vmpi-host-impl-kvm.c:                datalen -= heads[headcount].len;
./vmpi/vmpi-host-impl-kvm.c:        heads[headcount - 1].len += datalen;
./vmpi/vmpi-host-impl-kvm.c:/* Expects to be always run from workqueue - which acts as
./vmpi/vmpi-host-impl-kvm.c: * read-size critical section for our kind of RCU. */
./vmpi/vmpi-host-impl-kvm.c:        struct vmpi_impl_queue *nvq = &vi->vqs[VHOST_MPI_VQ_RX];
./vmpi/vmpi-host-impl-kvm.c:        struct vhost_virtqueue *vq = &nvq->vq;
./vmpi/vmpi-host-impl-kvm.c:        struct vmpi_ring *ring = vi->write;
./vmpi/vmpi-host-impl-kvm.c:        mutex_lock(&vq->mutex);
./vmpi/vmpi-host-impl-kvm.c:        opaque = vq->private_data;
./vmpi/vmpi-host-impl-kvm.c:        vhost_disable_notify(&vi->dev, vq);
./vmpi/vmpi-host-impl-kvm.c:        vq_log = unlikely(vhost_has_feature(&vi->dev, VHOST_F_LOG_ALL)) ?
./vmpi/vmpi-host-impl-kvm.c:                vq->log : NULL;
./vmpi/vmpi-host-impl-kvm.c:                headcount = get_rx_bufs(vq, vq->heads, len,
./vmpi/vmpi-host-impl-kvm.c:                        if (unlikely(vhost_enable_notify(&vi->dev, vq))) {
./vmpi/vmpi-host-impl-kvm.c:                                vhost_disable_notify(&vi->dev, vq);
./vmpi/vmpi-host-impl-kvm.c:                buf = &ring->bufs[ring->np];
./vmpi/vmpi-host-impl-kvm.c:                len = iovec_from_buf(vq->iov, in, buf->p, len);
./vmpi/vmpi-host-impl-kvm.c:                buf->len = 0;
./vmpi/vmpi-host-impl-kvm.c:                VMPI_RING_INC(ring->np);
./vmpi/vmpi-host-impl-kvm.c:                VMPI_RING_INC(ring->nr);
./vmpi/vmpi-host-impl-kvm.c:                wake_up_interruptible_poll(&ring->wqh, POLLOUT |
./vmpi/vmpi-host-impl-kvm.c:                vi->stats->txres++;
./vmpi/vmpi-host-impl-kvm.c:                vhost_add_used_and_signal_n(&vi->dev, vq, vq->heads,
./vmpi/vmpi-host-impl-kvm.c:                        vhost_poll_queue(&vq->poll);
./vmpi/vmpi-host-impl-kvm.c:        mutex_unlock(&vq->mutex);
./vmpi/vmpi-host-impl-kvm.c:        struct vmpi_impl_info *vi = container_of(vq->dev,
./vmpi/vmpi-host-impl-kvm.c:        struct vmpi_impl_info *vi = container_of(vq->dev,
./vmpi/vmpi-host-impl-kvm.c:                return -ENOMEM;
./vmpi/vmpi-host-impl-kvm.c:                return -ENOMEM;
./vmpi/vmpi-host-impl-kvm.c:        dev = &vi->dev;
./vmpi/vmpi-host-impl-kvm.c:        vqs[VHOST_MPI_VQ_TX] = &vi->vqs[VHOST_MPI_VQ_TX].vq;
./vmpi/vmpi-host-impl-kvm.c:        vqs[VHOST_MPI_VQ_RX] = &vi->vqs[VHOST_MPI_VQ_RX].vq;
./vmpi/vmpi-host-impl-kvm.c:        vi->vqs[VHOST_MPI_VQ_TX].vq.handle_kick = handle_tx_kick;
./vmpi/vmpi-host-impl-kvm.c:        vi->vqs[VHOST_MPI_VQ_RX].vq.handle_kick = handle_rx_kick;
./vmpi/vmpi-host-impl-kvm.c:        vhost_poll_init(vi->poll + VHOST_MPI_VQ_TX,
./vmpi/vmpi-host-impl-kvm.c:        vhost_poll_init(vi->poll + VHOST_MPI_VQ_RX,
./vmpi/vmpi-host-impl-kvm.c:        f->private_data = vi;
./vmpi/vmpi-host-impl-kvm.c:        vi->file = f;
./vmpi/vmpi-host-impl-kvm.c:        init_waitqueue_head(&vi->wqh_poll);
./vmpi/vmpi-host-impl-kvm.c:        vi->mpi = vmpi_init(vi, &r, true);
./vmpi/vmpi-host-impl-kvm.c:        if (vi->mpi == NULL) {
./vmpi/vmpi-host-impl-kvm.c:        vi->write = vmpi_get_write_ring(vi->mpi);
./vmpi/vmpi-host-impl-kvm.c:        vi->read = vmpi_get_read_queue(vi->mpi);
./vmpi/vmpi-host-impl-kvm.c:        vi->stats = vmpi_get_stats(vi->mpi);
./vmpi/vmpi-host-impl-kvm.c:        vi->read_cb = NULL;
./vmpi/vmpi-host-impl-kvm.c:        INIT_WORK(&vi->read_cb_worker, read_cb_worker_function);
./vmpi/vmpi-host-impl-kvm.c:        vmpi_queue_init(&vi->read_cb_queue, 0, VMPI_BUF_SIZE);
./vmpi/vmpi-host-impl-kvm.c:        vhost_dev_cleanup(&vi->dev, false);
./vmpi/vmpi-host-impl-kvm.c:        struct vhost_poll *poll = vi->poll + (nvq - vi->vqs);
./vmpi/vmpi-host-impl-kvm.c:        if (!vq->private_data)
./vmpi/vmpi-host-impl-kvm.c:        struct vhost_poll *poll = vi->poll + (nvq - vi->vqs);
./vmpi/vmpi-host-impl-kvm.c:        return vhost_poll_start(poll, vi->file);
./vmpi/vmpi-host-impl-kvm.c:        mutex_lock(&vq->mutex);
./vmpi/vmpi-host-impl-kvm.c:        vq->private_data = NULL;
./vmpi/vmpi-host-impl-kvm.c:        mutex_unlock(&vq->mutex);
./vmpi/vmpi-host-impl-kvm.c:        vhost_mpi_stop_vq(vi, &vi->vqs[VHOST_MPI_VQ_TX].vq);
./vmpi/vmpi-host-impl-kvm.c:        vhost_mpi_stop_vq(vi, &vi->vqs[VHOST_MPI_VQ_RX].vq);
./vmpi/vmpi-host-impl-kvm.c:        vhost_poll_flush(vi->poll + index);
./vmpi/vmpi-host-impl-kvm.c:        vhost_poll_flush(&vi->vqs[index].vq.poll);
./vmpi/vmpi-host-impl-kvm.c:        struct vmpi_impl_info *vi = f->private_data;
./vmpi/vmpi-host-impl-kvm.c:        vhost_dev_stop(&vi->dev);
./vmpi/vmpi-host-impl-kvm.c:        vhost_dev_cleanup(&vi->dev, false);
./vmpi/vmpi-host-impl-kvm.c:         * since jobs can re-queue themselves. */
./vmpi/vmpi-host-impl-kvm.c:        vmpi_fini(vi->mpi, true);
./vmpi/vmpi-host-impl-kvm.c:        kfree(vi->dev.vqs);
./vmpi/vmpi-host-impl-kvm.c:        mutex_lock(&vi->dev.mutex);
./vmpi/vmpi-host-impl-kvm.c:        r = vhost_dev_check_owner(&vi->dev);
./vmpi/vmpi-host-impl-kvm.c:                r = -ENOBUFS;
./vmpi/vmpi-host-impl-kvm.c:        vq = &vi->vqs[index].vq;
./vmpi/vmpi-host-impl-kvm.c:        nvq = &vi->vqs[index];
./vmpi/vmpi-host-impl-kvm.c:        mutex_lock(&vq->mutex);
./vmpi/vmpi-host-impl-kvm.c:                r = -EFAULT;
./vmpi/vmpi-host-impl-kvm.c:                file = vi->file;
./vmpi/vmpi-host-impl-kvm.c:        oldfile = vq->private_data;
./vmpi/vmpi-host-impl-kvm.c:                vq->private_data = file;
./vmpi/vmpi-host-impl-kvm.c:        mutex_unlock(&vq->mutex);
./vmpi/vmpi-host-impl-kvm.c:        mutex_unlock(&vi->dev.mutex);
./vmpi/vmpi-host-impl-kvm.c:        vq->private_data = oldfile;
./vmpi/vmpi-host-impl-kvm.c:        mutex_unlock(&vq->mutex);
./vmpi/vmpi-host-impl-kvm.c:        mutex_unlock(&vi->dev.mutex);
./vmpi/vmpi-host-impl-kvm.c:        mutex_lock(&vi->dev.mutex);
./vmpi/vmpi-host-impl-kvm.c:        err = vhost_dev_check_owner(&vi->dev);
./vmpi/vmpi-host-impl-kvm.c:                err = -ENOMEM;
./vmpi/vmpi-host-impl-kvm.c:        vhost_dev_reset_owner(&vi->dev, memory);
./vmpi/vmpi-host-impl-kvm.c:        mutex_unlock(&vi->dev.mutex);
./vmpi/vmpi-host-impl-kvm.c:        mutex_lock(&vi->dev.mutex);
./vmpi/vmpi-host-impl-kvm.c:            !vhost_log_access_ok(&vi->dev)) {
./vmpi/vmpi-host-impl-kvm.c:                mutex_unlock(&vi->dev.mutex);
./vmpi/vmpi-host-impl-kvm.c:                return -EFAULT;
./vmpi/vmpi-host-impl-kvm.c:        vi->dev.acked_features = features;
./vmpi/vmpi-host-impl-kvm.c:        mutex_unlock(&vi->dev.mutex);
./vmpi/vmpi-host-impl-kvm.c:        mutex_lock(&vi->dev.mutex);
./vmpi/vmpi-host-impl-kvm.c:        if (vhost_dev_has_owner(&vi->dev)) {
./vmpi/vmpi-host-impl-kvm.c:                r = -EBUSY;
./vmpi/vmpi-host-impl-kvm.c:        r = vhost_dev_set_owner(&vi->dev);
./vmpi/vmpi-host-impl-kvm.c:        mutex_unlock(&vi->dev.mutex);
./vmpi/vmpi-host-impl-kvm.c:        struct vmpi_impl_info *vi = f->private_data;
./vmpi/vmpi-host-impl-kvm.c:                        return -EFAULT;
./vmpi/vmpi-host-impl-kvm.c:                        return -EFAULT;
./vmpi/vmpi-host-impl-kvm.c:                        return -EFAULT;
./vmpi/vmpi-host-impl-kvm.c:                        return -EOPNOTSUPP;
./vmpi/vmpi-host-impl-kvm.c:                mutex_lock(&vi->dev.mutex);
./vmpi/vmpi-host-impl-kvm.c:                r = vhost_dev_ioctl(&vi->dev, ioctl, argp);
./vmpi/vmpi-host-impl-kvm.c:                if (r == -ENOIOCTLCMD)
./vmpi/vmpi-host-impl-kvm.c:                        r = vhost_vring_ioctl(&vi->dev, ioctl, argp);
./vmpi/vmpi-host-impl-kvm.c:                mutex_unlock(&vi->dev.mutex);
./vmpi/vmpi-host-impl-kvm.c:        struct vmpi_impl_info *vi = file->private_data;
./vmpi/vmpi-host-impl-kvm.c:        struct vmpi_ring *write = vi->write;
./vmpi/vmpi-host-impl-kvm.c:        poll_wait(file, &vi->wqh_poll, wait);
./vmpi/vmpi-host-impl-kvm.c:        mutex_lock(&write->lock);
./vmpi/vmpi-host-impl-kvm.c:        mutex_unlock(&write->lock);
./vmpi/vmpi-host-impl-kvm.c:        wake_up_interruptible_poll(&vi->wqh_poll, POLLIN |
./vmpi/vmpi-host-impl-kvm.c:        .name = "vhost-mpi",
./vmpi/vmpi-host-impl-kvm.c:MODULE_ALIAS("devname:vhost-mpi");
./vmpi/xen-mpi-back-common.h: * An hypervisor-side vmpi-impl implementation for Xen
./vmpi/xen-mpi-back-common.h:#include "xen-mpi-ioring.h"  //#include <xen/interface/io/mpi.h>
./vmpi/xen-mpi-back-common.h:#include "vmpi-structs.h"
./vmpi/xen-mpi-back-common.h:#include "vmpi-host-impl.h"
./vmpi/xen-mpi-back-common.h: * -->|<-INUSE----------------
./vmpi/xen-mpi-back-common.h: * -----FREE->|<-INUSE--------
./vmpi/xen-mpi-back-common.h: * The in use non-INVALID_PENDING_RING_IDX (say 0, 5 and 9 in the
./vmpi/xen-mpi-back-common.h:	/* When feature-split-event-channels = 0, tx_irq = rx_irq. */
./vmpi/xen-mpi-back-common.h:	/* Only used when feature-split-event-channels = 1 */
./vmpi/xen-mpi-back-common.h:	char tx_irq_name[IFNAMSIZ+4]; /* DEVNAME-tx */
./vmpi/xen-mpi-back-common.h:	/* When feature-split-event-channels = 0, tx_irq = rx_irq. */
./vmpi/xen-mpi-back-common.h:	/* Only used when feature-split-event-channels = 1 */
./vmpi/xen-mpi-back-common.h:	char rx_irq_name[IFNAMSIZ+4]; /* DEVNAME-rx */
./vmpi/xen-mpi-back-common.h:	return to_xenbus_device(vif->parent);
./vmpi/prepare-host-xen.sh:        echo "USAGE:    $0 <FRONTEND-DOM-ID>"
./vmpi/prepare-host-xen.sh:echo "$1" | grep -o "^[0-9]\+$"
./vmpi/prepare-host-xen.sh:# Load the vmpi-host-xen module, if not already loaded
./vmpi/prepare-host-xen.sh:lsmod | grep vmpi_xen_host || sudo modprobe vmpi-xen-host
./vmpi/prepare-host-xen.sh:sudo xenstore-write /local/domain/${FRONTEND_ID}/device/vmpi/0/backend-id 0
./vmpi/prepare-host-xen.sh:sudo xenstore-write /local/domain/${FRONTEND_ID}/device/vmpi/0/backend \
./vmpi/prepare-host-xen.sh:sudo xenstore-write /local/domain/0/backend/vmpi/${FRONTEND_ID}/0/frontend-id ${FRONTEND_ID}
./vmpi/prepare-host-xen.sh:sudo xenstore-write /local/domain/0/backend/vmpi/${FRONTEND_ID}/0/frontend \
./vmpi/prepare-host-xen.sh:sudo xenstore-chmod /local/domain/0/backend/vmpi/${FRONTEND_ID}/0 r
./vmpi/prepare-host-xen.sh:sudo xenstore-chmod -r /local/domain/${FRONTEND_ID}/device/vmpi/0 b   # sed 's|b|w'
./vmpi/prepare-host-xen.sh:sudo xenstore-write /local/domain/${FRONTEND_ID}/device/vmpi/0/state 1
./vmpi/prepare-host-xen.sh:sudo xenstore-write /local/domain/0/backend/vmpi/${FRONTEND_ID}/0/state 1
./vmpi/vmpi-guest-impl-kvm.c: * A guest-side vmpi-impl implementation for KVM and virtio
./vmpi/vmpi-guest-impl-kvm.c:#include "vmpi-guest-impl.h"
./vmpi/vmpi-guest-impl-kvm.c:#include "vmpi-structs.h"
./vmpi/vmpi-guest-impl-kvm.c:        return vi->private;
./vmpi/vmpi-guest-impl-kvm.c:        struct vmpi_impl_info *vi = vq->vdev->priv;
./vmpi/vmpi-guest-impl-kvm.c:         * Callback is NULL in the interval between vmpi-guest deregistering
./vmpi/vmpi-guest-impl-kvm.c:        if (likely(vi->sq->cb)) {
./vmpi/vmpi-guest-impl-kvm.c:                vi->sq->cb(vi);
./vmpi/vmpi-guest-impl-kvm.c:        struct vmpi_impl_info *vi = vq->vdev->priv;
./vmpi/vmpi-guest-impl-kvm.c:         * Callback is NULL in the interval between vmpi-guest deregistering
./vmpi/vmpi-guest-impl-kvm.c:        if (likely(vi->rq->cb)) {
./vmpi/vmpi-guest-impl-kvm.c:                vi->rq->cb(vi);
./vmpi/vmpi-guest-impl-kvm.c:        struct vmpi_impl_queue *q = vi->sq;
./vmpi/vmpi-guest-impl-kvm.c:        sg_set_buf(q->sg, buf->p, buf->len);
./vmpi/vmpi-guest-impl-kvm.c:        ret = virtqueue_add_outbuf(q->vq, q->sg, 1, buf, GFP_KERNEL);
./vmpi/vmpi-guest-impl-kvm.c:        virtqueue_kick(vi->sq->vq);
./vmpi/vmpi-guest-impl-kvm.c:        struct vmpi_buffer *buf = virtqueue_get_buf(vi->sq->vq, &len);
./vmpi/vmpi-guest-impl-kvm.c:                buf->len = len;
./vmpi/vmpi-guest-impl-kvm.c:        struct vmpi_impl_queue *q = vi->rq;
./vmpi/vmpi-guest-impl-kvm.c:        struct vmpi_buffer *buf = virtqueue_get_buf(q->vq, &len);
./vmpi/vmpi-guest-impl-kvm.c:                buf->len = len;
./vmpi/vmpi-guest-impl-kvm.c:                        sg_set_buf(q->sg, newbuf->p, newbuf->size);
./vmpi/vmpi-guest-impl-kvm.c:                        err = virtqueue_add_inbuf(q->vq, q->sg, 1, newbuf,
./vmpi/vmpi-guest-impl-kvm.c:                        virtqueue_kick(q->vq);
./vmpi/vmpi-guest-impl-kvm.c:                return virtqueue_enable_cb(q->vq);
./vmpi/vmpi-guest-impl-kvm.c:        virtqueue_disable_cb(q->vq);
./vmpi/vmpi-guest-impl-kvm.c:        return vmpi_impl_xx_cb(vi->sq, enable);
./vmpi/vmpi-guest-impl-kvm.c:        return vmpi_impl_xx_cb(vi->rq, enable);
./vmpi/vmpi-guest-impl-kvm.c:        vi->sq->cb = xmit;
./vmpi/vmpi-guest-impl-kvm.c:        vi->rq->cb = recv;
./vmpi/vmpi-guest-impl-kvm.c:        vi->sq->cb = NULL;
./vmpi/vmpi-guest-impl-kvm.c:        vi->rq->cb = NULL;
./vmpi/vmpi-guest-impl-kvm.c:        int ret = -ENOMEM;
./vmpi/vmpi-guest-impl-kvm.c:         * possible N-1 RX/TX queue pairs used in multiqueue mode, followed by
./vmpi/vmpi-guest-impl-kvm.c:        sprintf(vi->rq->name, "input.%d", 0);
./vmpi/vmpi-guest-impl-kvm.c:        sprintf(vi->sq->name, "output.%d", 0);
./vmpi/vmpi-guest-impl-kvm.c:        names[0] = vi->rq->name;
./vmpi/vmpi-guest-impl-kvm.c:        names[1] = vi->sq->name;
./vmpi/vmpi-guest-impl-kvm.c:        ret = vi->vdev->config->find_vqs(vi->vdev, total_vqs, vqs, callbacks,
./vmpi/vmpi-guest-impl-kvm.c:        vi->rq->vq = vqs[0];
./vmpi/vmpi-guest-impl-kvm.c:        vi->sq->vq = vqs[1];
./vmpi/vmpi-guest-impl-kvm.c:        struct vmpi_impl_info *vi = vdev->priv;
./vmpi/vmpi-guest-impl-kvm.c:        vi->sq = kzalloc(sizeof(*vi->sq) * 1, GFP_KERNEL);
./vmpi/vmpi-guest-impl-kvm.c:        if (!vi->sq)
./vmpi/vmpi-guest-impl-kvm.c:        vi->rq = kzalloc(sizeof(*vi->rq) * 1, GFP_KERNEL);
./vmpi/vmpi-guest-impl-kvm.c:        if (!vi->rq)
./vmpi/vmpi-guest-impl-kvm.c:        sg_init_table(vi->rq->sg, ARRAY_SIZE(vi->rq->sg));
./vmpi/vmpi-guest-impl-kvm.c:        sg_init_table(vi->sq->sg, ARRAY_SIZE(vi->sq->sg));
./vmpi/vmpi-guest-impl-kvm.c:        kfree(vi->sq);
./vmpi/vmpi-guest-impl-kvm.c:        return -ENOMEM;
./vmpi/vmpi-guest-impl-kvm.c:        kfree(vi->rq);
./vmpi/vmpi-guest-impl-kvm.c:        kfree(vi->sq);
./vmpi/vmpi-guest-impl-kvm.c:        vq = vi->sq->vq;
./vmpi/vmpi-guest-impl-kvm.c:        vq = vi->rq->vq;
./vmpi/vmpi-guest-impl-kvm.c:                //--vi->rq[0].num;
./vmpi/vmpi-guest-impl-kvm.c:        //BUG_ON(vi->rq[0].num != 0);
./vmpi/vmpi-guest-impl-kvm.c:        struct virtio_device *vdev = vi->vdev;
./vmpi/vmpi-guest-impl-kvm.c:        vdev->config->del_vqs(vdev);
./vmpi/vmpi-guest-impl-kvm.c:        vi->vdev->config->reset(vi->vdev);
./vmpi/vmpi-guest-impl-kvm.c:        struct vmpi_impl_info *vi = vdev->priv;
./vmpi/vmpi-guest-impl-kvm.c:        struct vmpi_impl_info *vi = vdev->priv;
./vmpi/vmpi-guest-impl-kvm.c:        err = -ENOMEM;
./vmpi/vmpi-guest-impl-kvm.c:        vi->vdev = vdev;
./vmpi/vmpi-guest-impl-kvm.c:        vdev->priv = vi;
./vmpi/vmpi-guest-impl-kvm.c:        vi->status = 1;
./vmpi/vmpi-guest-impl-kvm.c:        vi->private = vmpi_init(vi, &err, false);
./vmpi/vmpi-guest-impl-kvm.c:        if (vi->private == NULL) {
./vmpi/vmpi-guest-impl-kvm.c:                struct vmpi_impl_queue *q = vi->rq;
./vmpi/vmpi-guest-impl-kvm.c:                sg_set_buf(q->sg, buf->p, buf->size);
./vmpi/vmpi-guest-impl-kvm.c:                err = virtqueue_add_inbuf(q->vq, q->sg, 1, buf, GFP_ATOMIC);
./vmpi/vmpi-guest-impl-kvm.c:        virtqueue_kick(vi->rq->vq);
./vmpi/vmpi-guest-impl-kvm.c:        vmpi_fini(vi->private, false);
./vmpi/vmpi-guest-impl-kvm.c:        struct vmpi_impl_info *vi = vdev->priv;
./vmpi/vmpi-guest-impl-kvm.c:        vmpi_fini(vi->private, false);
./vmpi/vmpi-test.c:        struct file *file = iocb->ki_filp;
./vmpi/vmpi-test.c:        vmpi_info_t *mpi = file->private_data;
./vmpi/vmpi-test.c:        /* XXX file->f_flags & O_NONBLOCK */
./vmpi/vmpi-test.c:        struct file *file = iocb->ki_filp;
./vmpi/vmpi-test.c:        vmpi_info_t *mpi = file->private_data;
./vmpi/vmpi-test.c:                iocb->ki_pos = ret;
./vmpi/vmpi-test.c:                return -ENXIO;
./vmpi/vmpi-test.c:        f->private_data = vmpi_instance;
./vmpi/vmpi-test.c:        f->private_data = NULL;
./vmpi/vmpi-test.c:        .name = "vmpi-test",
./vmpi/vmpi-test.c:                printk("Failed to register vmpi-test misc device\n");
./vmpi/vmpi-host-impl-xen.c: * An hypervisor-side vmpi-impl implementation for Xen
./vmpi/vmpi-host-impl-xen.c:#include "xen-mpi-back-common.h"
./vmpi/vmpi-host-impl-xen.c:	return page_to_pfn(vif->mmap_pages[idx]);
./vmpi/vmpi-host-impl-xen.c:	return i & (XEN_MPI_TX_RING_SIZE-1);
./vmpi/vmpi-host-impl-xen.c:	return XEN_MPI_TX_RING_SIZE -
./vmpi/vmpi-host-impl-xen.c:		vif->pending_prod + vif->pending_cons;
./vmpi/vmpi-host-impl-xen.c:		prod = vif->rx.sring->req_prod;
./vmpi/vmpi-host-impl-xen.c:		cons = vif->rx.req_cons;
./vmpi/vmpi-host-impl-xen.c:		if (prod - cons >= needed)
./vmpi/vmpi-host-impl-xen.c:		vif->rx.sring->req_event = prod + 1;
./vmpi/vmpi-host-impl-xen.c:	} while (vif->rx.sring->req_prod != prod);
./vmpi/vmpi-host-impl-xen.c: * zero GSO descriptors (for non-GSO packets) or one descriptor (for
./vmpi/vmpi-host-impl-xen.c: * frontend-side LRO).
./vmpi/vmpi-host-impl-xen.c:	old_prod = vif->rx_pending_prod;
./vmpi/vmpi-host-impl-xen.c:	req = RING_GET_REQUEST(&vif->rx, vif->rx.req_cons++);
./vmpi/vmpi-host-impl-xen.c:        rx_meta = vif->rx_meta + vif->rx_pending_prod;
./vmpi/vmpi-host-impl-xen.c:                __func__, req->id, req->offset, req->gref, req->len));
./vmpi/vmpi-host-impl-xen.c:        copy_len = PAGE_SIZE - src_offset;
./vmpi/vmpi-host-impl-xen.c:        if (copy_len > buf->len)
./vmpi/vmpi-host-impl-xen.c:                copy_len = buf->len;
./vmpi/vmpi-host-impl-xen.c:        if (copy_len > req->len)
./vmpi/vmpi-host-impl-xen.c:                copy_len = req->len;
./vmpi/vmpi-host-impl-xen.c:        copy_gop = vif->rx_copy_ops + vif->rx_pending_prod++;
./vmpi/vmpi-host-impl-xen.c:        copy_gop->flags = GNTCOPY_dest_gref;
./vmpi/vmpi-host-impl-xen.c:        copy_gop->len = copy_len;
./vmpi/vmpi-host-impl-xen.c:        copy_gop->source.domid = DOMID_SELF;
./vmpi/vmpi-host-impl-xen.c:        copy_gop->source.u.gmfn = virt_to_mfn(src_data);
./vmpi/vmpi-host-impl-xen.c:        copy_gop->source.offset = src_offset;
./vmpi/vmpi-host-impl-xen.c:        copy_gop->dest.domid = vif->domid;
./vmpi/vmpi-host-impl-xen.c:        copy_gop->dest.offset = req->offset;
./vmpi/vmpi-host-impl-xen.c:        copy_gop->dest.u.ref = req->gref;
./vmpi/vmpi-host-impl-xen.c:	rx_meta->id = req->id;
./vmpi/vmpi-host-impl-xen.c:        rx_meta->size = copy_len;
./vmpi/vmpi-host-impl-xen.c:	return vif->rx_pending_prod - old_prod;
./vmpi/vmpi-host-impl-xen.c:        copy_op = vif->rx_copy_ops + vif->rx_pending_cons;
./vmpi/vmpi-host-impl-xen.c:        if (copy_op->status != GNTST_okay) {
./vmpi/vmpi-host-impl-xen.c:                        copy_op->status, vif->domid);
./vmpi/vmpi-host-impl-xen.c:	wake_up(&vif->wq);
./vmpi/vmpi-host-impl-xen.c:        struct vmpi_ring *ring = vif->write;
./vmpi/vmpi-host-impl-xen.c:        vif->rx_pending_prod = vif->rx_pending_cons = 0;
./vmpi/vmpi-host-impl-xen.c:			vif->rx_last_buf_slots = max_slots_needed;
./vmpi/vmpi-host-impl-xen.c:		vif->rx_last_buf_slots = 0;
./vmpi/vmpi-host-impl-xen.c:                buf = &ring->bufs[ring->np];
./vmpi/vmpi-host-impl-xen.c:                VMPI_RING_INC(ring->np);
./vmpi/vmpi-host-impl-xen.c:                        __func__, (int)buf->len, offset_in_page(buf->p)));
./vmpi/vmpi-host-impl-xen.c:	BUG_ON(vif->rx_pending_prod > ARRAY_SIZE(vif->rx_meta));
./vmpi/vmpi-host-impl-xen.c:	if (!vif->rx_pending_prod)
./vmpi/vmpi-host-impl-xen.c:	BUG_ON(vif->rx_pending_prod > XEN_MPI_RX_RING_SIZE);
./vmpi/vmpi-host-impl-xen.c:	gnttab_batch_copy(vif->rx_copy_ops, vif->rx_pending_prod);
./vmpi/vmpi-host-impl-xen.c:                len = buf->len;
./vmpi/vmpi-host-impl-xen.c:                buf->len = 0;
./vmpi/vmpi-host-impl-xen.c:                VMPI_RING_INC(ring->nr);
./vmpi/vmpi-host-impl-xen.c:                wake_up_interruptible_poll(&ring->wqh, POLLOUT |
./vmpi/vmpi-host-impl-xen.c:		resp = make_rx_response(vif, vif->rx_meta[vif->rx_pending_cons].id,
./vmpi/vmpi-host-impl-xen.c:					vif->rx_meta[vif->rx_pending_cons].size,
./vmpi/vmpi-host-impl-xen.c:		RING_PUSH_RESPONSES_AND_CHECK_NOTIFY(&vif->rx, ret);
./vmpi/vmpi-host-impl-xen.c:                vif->rx_pending_cons++;
./vmpi/vmpi-host-impl-xen.c:                vif->stats->txres++;
./vmpi/vmpi-host-impl-xen.c:		notify_remote_via_irq(vif->rx_irq);
./vmpi/vmpi-host-impl-xen.c:	RING_FINAL_CHECK_FOR_REQUESTS(&vif->tx, more_to_do);
./vmpi/vmpi-host-impl-xen.c:		schedule_work(&vif->tx_worker);
./vmpi/vmpi-host-impl-xen.c:	max_burst = RING_GET_REQUEST(&vif->tx, vif->tx.req_cons)->size;
./vmpi/vmpi-host-impl-xen.c:	max_burst = max(max_burst, vif->credit_bytes);
./vmpi/vmpi-host-impl-xen.c:	max_credit = vif->remaining_credit + vif->credit_bytes;
./vmpi/vmpi-host-impl-xen.c:	if (max_credit < vif->remaining_credit)
./vmpi/vmpi-host-impl-xen.c:	vif->remaining_credit = min(max_credit, max_burst);
./vmpi/vmpi-host-impl-xen.c:	RING_IDX cons = vif->tx.req_cons;
./vmpi/vmpi-host-impl-xen.c:		txp = RING_GET_REQUEST(&vif->tx, cons++);
./vmpi/vmpi-host-impl-xen.c:	vif->tx.req_cons = cons;
./vmpi/vmpi-host-impl-xen.c:	vif->mmap_pages[pending_idx] = page;
./vmpi/vmpi-host-impl-xen.c:	err = gop->status;
./vmpi/vmpi-host-impl-xen.c:	u64 next_credit = vif->credit_window_start +
./vmpi/vmpi-host-impl-xen.c:		msecs_to_jiffies(vif->credit_usec / 1000);
./vmpi/vmpi-host-impl-xen.c:	if (timer_pending(&vif->credit_timeout))
./vmpi/vmpi-host-impl-xen.c:		vif->credit_window_start = now;
./vmpi/vmpi-host-impl-xen.c:	if (size > vif->remaining_credit) {
./vmpi/vmpi-host-impl-xen.c:		vif->credit_timeout.data     =
./vmpi/vmpi-host-impl-xen.c:		vif->credit_timeout.function =
./vmpi/vmpi-host-impl-xen.c:		mod_timer(&vif->credit_timeout,
./vmpi/vmpi-host-impl-xen.c:		vif->credit_window_start = next_credit;
./vmpi/vmpi-host-impl-xen.c:	struct gnttab_copy *gop = vif->tx_copy_ops;
./vmpi/vmpi-host-impl-xen.c:	       (vmpi_queue_len(&vif->tx_queue) < budget)) {
./vmpi/vmpi-host-impl-xen.c:		if (vif->tx.sring->req_prod - vif->tx.req_cons >
./vmpi/vmpi-host-impl-xen.c:				   vif->tx.sring->req_prod, vif->tx.req_cons,
./vmpi/vmpi-host-impl-xen.c:		work_to_do = RING_HAS_UNCONSUMED_REQUESTS(&vif->tx);
./vmpi/vmpi-host-impl-xen.c:		cons = vif->tx.req_cons;
./vmpi/vmpi-host-impl-xen.c:		memcpy(&txreq, RING_GET_REQUEST(&vif->tx, cons), sizeof(txreq));
./vmpi/vmpi-host-impl-xen.c:		/* Credit-based scheduling. */
./vmpi/vmpi-host-impl-xen.c:		if (txreq.size > vif->remaining_credit &&
./vmpi/vmpi-host-impl-xen.c:		vif->remaining_credit -= txreq.size;
./vmpi/vmpi-host-impl-xen.c:		work_to_do--;
./vmpi/vmpi-host-impl-xen.c:		vif->tx.req_cons = ++cons;
./vmpi/vmpi-host-impl-xen.c:		pending_cons_idx = pending_index(vif->pending_cons);
./vmpi/vmpi-host-impl-xen.c:		pending_idx = vif->pending_ring[pending_cons_idx];
./vmpi/vmpi-host-impl-xen.c:		gop->source.u.ref = txreq.gref;
./vmpi/vmpi-host-impl-xen.c:		gop->source.domid = vif->domid;
./vmpi/vmpi-host-impl-xen.c:		gop->source.offset = txreq.offset;
./vmpi/vmpi-host-impl-xen.c:		gop->dest.u.gmfn = virt_to_mfn(page_address(page));
./vmpi/vmpi-host-impl-xen.c:		gop->dest.domid = DOMID_SELF;
./vmpi/vmpi-host-impl-xen.c:		gop->dest.offset = txreq.offset;
./vmpi/vmpi-host-impl-xen.c:		gop->len = txreq.size;
./vmpi/vmpi-host-impl-xen.c:		gop->flags = GNTCOPY_source_gref;
./vmpi/vmpi-host-impl-xen.c:		memcpy(&vif->pending_tx_info[pending_idx].req,
./vmpi/vmpi-host-impl-xen.c:		vif->pending_tx_info[pending_idx].head = pending_cons_idx;
./vmpi/vmpi-host-impl-xen.c:                buf->len = txreq.size;
./vmpi/vmpi-host-impl-xen.c:		vif->pending_cons++;
./vmpi/vmpi-host-impl-xen.c:                IFV(printk("%s: built a buffer [len=%d]\n", __func__, (int)buf->len));
./vmpi/vmpi-host-impl-xen.c:                vmpi_queue_push_back(&vif->tx_queue, buf);
./vmpi/vmpi-host-impl-xen.c:		if ((gop-vif->tx_copy_ops) >= ARRAY_SIZE(vif->tx_copy_ops))
./vmpi/vmpi-host-impl-xen.c:	return gop - vif->tx_copy_ops;
./vmpi/vmpi-host-impl-xen.c:	struct gnttab_copy *gop = vif->tx_copy_ops;
./vmpi/vmpi-host-impl-xen.c:	while ((buf = vmpi_queue_pop_front(&vif->tx_queue)) != NULL) {
./vmpi/vmpi-host-impl-xen.c:		txp = &vif->pending_tx_info[pending_idx].req;
./vmpi/vmpi-host-impl-xen.c:		       (void *)(idx_to_kaddr(vif, pending_idx)|txp->offset),
./vmpi/vmpi-host-impl-xen.c:		       buf->len);
./vmpi/vmpi-host-impl-xen.c:                channel = vmpi_buffer_hdr(buf)->channel;
./vmpi/vmpi-host-impl-xen.c:                                (int)buf->len, channel));
./vmpi/vmpi-host-impl-xen.c:                if (!vif->read_cb) {
./vmpi/vmpi-host-impl-xen.c:                        read = &vif->read[channel];
./vmpi/vmpi-host-impl-xen.c:                        mutex_lock(&read->lock);
./vmpi/vmpi-host-impl-xen.c:                        mutex_unlock(&read->lock);
./vmpi/vmpi-host-impl-xen.c:                        wake_up_interruptible_poll(&read->wqh,
./vmpi/vmpi-host-impl-xen.c:                        vif->read_cb(vif->read_cb_data, channel,
./vmpi/vmpi-host-impl-xen.c:                                     buf->len - sizeof(struct vmpi_hdr));
./vmpi/vmpi-host-impl-xen.c:                vif->stats->rxres++;
./vmpi/vmpi-host-impl-xen.c:	gnttab_batch_copy(vif->tx_copy_ops, nr_gops);
./vmpi/vmpi-host-impl-xen.c:	BUG_ON(vif->mmap_pages[pending_idx] == (void *)(~0UL));
./vmpi/vmpi-host-impl-xen.c:	if (vif->mmap_pages[pending_idx] == NULL)
./vmpi/vmpi-host-impl-xen.c:	pending_tx_info = &vif->pending_tx_info[pending_idx];
./vmpi/vmpi-host-impl-xen.c:	BUG_ON(vif->pending_ring[pending_index(pending_tx_info->head)]
./vmpi/vmpi-host-impl-xen.c:        make_tx_response(vif, &pending_tx_info->req, status);
./vmpi/vmpi-host-impl-xen.c:        pending_tx_info->head = 0;
./vmpi/vmpi-host-impl-xen.c:        pending_prod_idx = pending_index(vif->pending_prod++);
./vmpi/vmpi-host-impl-xen.c:        vif->pending_ring[pending_prod_idx] = vif->pending_ring[pending_idx];
./vmpi/vmpi-host-impl-xen.c:	put_page(vif->mmap_pages[pending_idx]);
./vmpi/vmpi-host-impl-xen.c:	vif->mmap_pages[pending_idx] = NULL;
./vmpi/vmpi-host-impl-xen.c:	RING_IDX i = vif->tx.rsp_prod_pvt;
./vmpi/vmpi-host-impl-xen.c:	resp = RING_GET_RESPONSE(&vif->tx, i);
./vmpi/vmpi-host-impl-xen.c:	resp->id     = txp->id;
./vmpi/vmpi-host-impl-xen.c:	resp->status = st;
./vmpi/vmpi-host-impl-xen.c:	vif->tx.rsp_prod_pvt = ++i;
./vmpi/vmpi-host-impl-xen.c:	RING_PUSH_RESPONSES_AND_CHECK_NOTIFY(&vif->tx, notify);
./vmpi/vmpi-host-impl-xen.c:		notify_remote_via_irq(vif->tx_irq);
./vmpi/vmpi-host-impl-xen.c:                __func__, i, resp->id, notify));
./vmpi/vmpi-host-impl-xen.c:	RING_IDX i = vif->rx.rsp_prod_pvt;
./vmpi/vmpi-host-impl-xen.c:	resp = RING_GET_RESPONSE(&vif->rx, i);
./vmpi/vmpi-host-impl-xen.c:	resp->flags      = flags;
./vmpi/vmpi-host-impl-xen.c:	resp->id         = id;
./vmpi/vmpi-host-impl-xen.c:	resp->status     = (s16)size;
./vmpi/vmpi-host-impl-xen.c:		resp->status = (s16)st;
./vmpi/vmpi-host-impl-xen.c:	vif->rx.rsp_prod_pvt = ++i;
./vmpi/vmpi-host-impl-xen.c:	return vmpi_ring_pending(vif->write) &&
./vmpi/vmpi-host-impl-xen.c:	       xenmpi_rx_ring_slots_available(vif, vif->rx_last_buf_slots);
./vmpi/vmpi-host-impl-xen.c:	if (likely(RING_HAS_UNCONSUMED_REQUESTS(&vif->tx)) &&
./vmpi/vmpi-host-impl-xen.c:	if (vif->tx.sring)
./vmpi/vmpi-host-impl-xen.c:					vif->tx.sring);
./vmpi/vmpi-host-impl-xen.c:	if (vif->rx.sring)
./vmpi/vmpi-host-impl-xen.c:					vif->rx.sring);
./vmpi/vmpi-host-impl-xen.c:	int err = -ENOMEM;
./vmpi/vmpi-host-impl-xen.c:	BACK_RING_INIT(&vif->tx, txs, PAGE_SIZE);
./vmpi/vmpi-host-impl-xen.c:	BACK_RING_INIT(&vif->rx, rxs, PAGE_SIZE);
./vmpi/vmpi-host-impl-xen.c:		wait_event_interruptible(vif->wq,
./vmpi/vmpi-host-impl-xen.c:		if (vmpi_ring_pending(vif->write))
./vmpi/vmpi-host-impl-xen.c:		if (!vmpi_ring_pending(vif->write))
./vmpi/vmpi-host-impl-xen.c:		return -ENODEV;
Binary file ./vmpi/vmpi-guest.o matches
./vmpi/.vhost-mpi.o.cmd:cmd_net/rina/vmpi/vhost-mpi.o := ld -m elf_i386   -r -o net/rina/vmpi/vhost-mpi.o net/rina/vmpi/vmpi-host-impl-virtio.o net/rina/vmpi/vmpi-host.o net/rina/vmpi/vmpi-ring.o net/rina/vmpi/vmpi-host-test.o 
./vmpi/unprepare-host-kvm.sh:set -x
./vmpi/unprepare-host-kvm.sh:sudo rmmod shim-hv
./vmpi/unprepare-host-kvm.sh:sudo rmmod vmpi-kvm-host
./vmpi/vmpi-iovec.c:#include "vmpi-iovec.h"
./vmpi/vmpi-iovec.c:                copylen = iov->iov_len;
./vmpi/vmpi-iovec.c:                memcpy(to, iov->iov_base, copylen);
./vmpi/vmpi-iovec.c:                len -= copylen;
./vmpi/vmpi-iovec.c:                iovcnt--;
./vmpi/vmpi-iovec.c:                copylen = iov->iov_len;
./vmpi/vmpi-iovec.c:                memcpy(iov->iov_base, from, copylen);
./vmpi/vmpi-iovec.c:                len -= copylen;
./vmpi/vmpi-iovec.c:                iovcnt--;
./vmpi/vmpi-test.h:/* Enable guest-side test interface. */
./vmpi/vmpi-ops.h:#include "vmpi-limits.h"
./vmpi/.vhost-mpi.ko.cmd:cmd_net/rina/vmpi/vhost-mpi.ko := ld -r -m elf_i386 -T /home/irati/linux/scripts/module-common.lds --build-id  -o net/rina/vmpi/vhost-mpi.ko net/rina/vmpi/vhost-mpi.o net/rina/vmpi/vhost-mpi.mod.o
./vmpi/xen-mpi-back-interface.c: * An hypervisor-side vmpi-impl implementation for Xen
./vmpi/xen-mpi-back-interface.c:#include "xen-mpi-back-common.h"
./vmpi/xen-mpi-back-interface.c:	if (RING_HAS_UNCONSUMED_REQUESTS(&vif->tx))
./vmpi/xen-mpi-back-interface.c:		schedule_work(&vif->tx_worker);
./vmpi/xen-mpi-back-interface.c:                schedule_work(&vif->tx_worker);
./vmpi/xen-mpi-back-interface.c:		RING_FINAL_CHECK_FOR_REQUESTS(&vif->tx, more_to_do);
./vmpi/xen-mpi-back-interface.c:		        schedule_work(&vif->tx_worker);
./vmpi/xen-mpi-back-interface.c:        return vif->mpi;
./vmpi/xen-mpi-back-interface.c:        vif->read_cb = cb;
./vmpi/xen-mpi-back-interface.c:        vif->read_cb_data = opaque;
./vmpi/xen-mpi-back-interface.c:	if (vif->task == NULL)
./vmpi/xen-mpi-back-interface.c:	return -1;
./vmpi/xen-mpi-back-interface.c:	enable_irq(vif->tx_irq);
./vmpi/xen-mpi-back-interface.c:	if (vif->tx_irq != vif->rx_irq)
./vmpi/xen-mpi-back-interface.c:		enable_irq(vif->rx_irq);
./vmpi/xen-mpi-back-interface.c:	disable_irq(vif->tx_irq);
./vmpi/xen-mpi-back-interface.c:	if (vif->tx_irq != vif->rx_irq)
./vmpi/xen-mpi-back-interface.c:		disable_irq(vif->rx_irq);
./vmpi/xen-mpi-back-interface.c:	del_timer_sync(&vif->credit_timeout);
./vmpi/xen-mpi-back-interface.c:        int r = -ENOMEM;
./vmpi/xen-mpi-back-interface.c:	snprintf(name, IFNAMSIZ - 1, "mpi%u", domid);
./vmpi/xen-mpi-back-interface.c:		return ERR_PTR(-ENOMEM);
./vmpi/xen-mpi-back-interface.c:        vif->parent = parent;
./vmpi/xen-mpi-back-interface.c:	vif->rx_copy_ops = vmalloc(sizeof(struct gnttab_copy) *
./vmpi/xen-mpi-back-interface.c:	if (vif->rx_copy_ops == NULL) {
./vmpi/xen-mpi-back-interface.c:	vif->domid  = domid;
./vmpi/xen-mpi-back-interface.c:	vif->credit_bytes = vif->remaining_credit = ~0UL;
./vmpi/xen-mpi-back-interface.c:	vif->credit_usec  = 0UL;
./vmpi/xen-mpi-back-interface.c:	init_timer(&vif->credit_timeout);
./vmpi/xen-mpi-back-interface.c:	vif->credit_window_start = get_jiffies_64();
./vmpi/xen-mpi-back-interface.c:        vmpi_queue_init(&vif->tx_queue, 0, VMPI_BUF_SIZE);
./vmpi/xen-mpi-back-interface.c:	vif->pending_cons = 0;
./vmpi/xen-mpi-back-interface.c:	vif->pending_prod = XEN_MPI_TX_RING_SIZE;
./vmpi/xen-mpi-back-interface.c:		vif->pending_ring[i] = i;
./vmpi/xen-mpi-back-interface.c:		vif->mmap_pages[i] = NULL;
./vmpi/xen-mpi-back-interface.c:        INIT_WORK(&vif->tx_worker, xenmpi_tx_worker_function);
./vmpi/xen-mpi-back-interface.c:        vif->mpi = vmpi_init((void*)vif, &r, false);
./vmpi/xen-mpi-back-interface.c:        if (vif->mpi == NULL) {
./vmpi/xen-mpi-back-interface.c:        vif->write = vmpi_get_write_ring(vif->mpi);
./vmpi/xen-mpi-back-interface.c:        vif->read = vmpi_get_read_queue(vif->mpi);
./vmpi/xen-mpi-back-interface.c:        vif->read_cb = NULL;
./vmpi/xen-mpi-back-interface.c:        vif->stats = vmpi_get_stats(vif->mpi);
./vmpi/xen-mpi-back-interface.c:        vmpi_queue_fini(&vif->tx_queue);
./vmpi/xen-mpi-back-interface.c:        vfree(vif->rx_copy_ops);
./vmpi/xen-mpi-back-interface.c:	int err = -ENOMEM;
./vmpi/xen-mpi-back-interface.c:	BUG_ON(vif->tx_irq);
./vmpi/xen-mpi-back-interface.c:	BUG_ON(vif->task);
./vmpi/xen-mpi-back-interface.c:	init_waitqueue_head(&vif->wq);
./vmpi/xen-mpi-back-interface.c:		/* feature-split-event-channels == 0 */
./vmpi/xen-mpi-back-interface.c:			vif->domid, tx_evtchn, xenmpi_interrupt, 0,
./vmpi/xen-mpi-back-interface.c:			"xen-mpi", vif);
./vmpi/xen-mpi-back-interface.c:		vif->tx_irq = vif->rx_irq = err;
./vmpi/xen-mpi-back-interface.c:		disable_irq(vif->tx_irq);
./vmpi/xen-mpi-back-interface.c:		/* feature-split-event-channels == 1 */
./vmpi/xen-mpi-back-interface.c:		snprintf(vif->tx_irq_name, sizeof(vif->tx_irq_name),
./vmpi/xen-mpi-back-interface.c:			 "%s-tx", "xen-mpi");
./vmpi/xen-mpi-back-interface.c:			vif->domid, tx_evtchn, xenmpi_tx_interrupt, 0,
./vmpi/xen-mpi-back-interface.c:			vif->tx_irq_name, vif);
./vmpi/xen-mpi-back-interface.c:		vif->tx_irq = err;
./vmpi/xen-mpi-back-interface.c:		disable_irq(vif->tx_irq);
./vmpi/xen-mpi-back-interface.c:		snprintf(vif->rx_irq_name, sizeof(vif->rx_irq_name),
./vmpi/xen-mpi-back-interface.c:			 "%s-rx", "xen-mpi");
./vmpi/xen-mpi-back-interface.c:			vif->domid, rx_evtchn, xenmpi_rx_interrupt, 0,
./vmpi/xen-mpi-back-interface.c:			vif->rx_irq_name, vif);
./vmpi/xen-mpi-back-interface.c:		vif->rx_irq = err;
./vmpi/xen-mpi-back-interface.c:		disable_irq(vif->rx_irq);
./vmpi/xen-mpi-back-interface.c:			      (void *)vif, "%s", "xen-mpi");
./vmpi/xen-mpi-back-interface.c:		pr_warn("Could not allocate kthread for %s\n", "xen-mpi");
./vmpi/xen-mpi-back-interface.c:	vif->task = task;
./vmpi/xen-mpi-back-interface.c:	wake_up_process(vif->task);
./vmpi/xen-mpi-back-interface.c:	unbind_from_irqhandler(vif->rx_irq, vif);
./vmpi/xen-mpi-back-interface.c:	vif->rx_irq = 0;
./vmpi/xen-mpi-back-interface.c:	unbind_from_irqhandler(vif->tx_irq, vif);
./vmpi/xen-mpi-back-interface.c:	vif->tx_irq = 0;
./vmpi/xen-mpi-back-interface.c:	if (vif->task) {
./vmpi/xen-mpi-back-interface.c:		kthread_stop(vif->task);
./vmpi/xen-mpi-back-interface.c:		vif->task = NULL;
./vmpi/xen-mpi-back-interface.c:	if (vif->tx_irq) {
./vmpi/xen-mpi-back-interface.c:		if (vif->tx_irq == vif->rx_irq)
./vmpi/xen-mpi-back-interface.c:			unbind_from_irqhandler(vif->tx_irq, vif);
./vmpi/xen-mpi-back-interface.c:			unbind_from_irqhandler(vif->tx_irq, vif);
./vmpi/xen-mpi-back-interface.c:			unbind_from_irqhandler(vif->rx_irq, vif);
./vmpi/xen-mpi-back-interface.c:		vif->tx_irq = 0;
./vmpi/xen-mpi-back-interface.c:        vmpi_fini(vif->mpi, false);
./vmpi/xen-mpi-back-interface.c:        vmpi_queue_fini(&vif->tx_queue);
./vmpi/xen-mpi-back-interface.c:        cancel_work_sync(&vif->tx_worker);
./vmpi/xen-mpi-back-interface.c:	vfree(vif->rx_copy_ops);
Binary file ./vmpi/vhost-mpi.o matches
./vmpi/prepare-guest-kvm.sh:set -x
./vmpi/prepare-guest-kvm.sh:sudo modprobe shim-hv
./vmpi/prepare-guest-kvm.sh:sudo modprobe vmpi-kvm-guest
Binary file ./vmpi/vmpi-guest-test.o matches
./vmpi/vmpi-host.c: * An hypervisor-side VMPI implemented using the vmpi-impl hypervisor interface
./vmpi/vmpi-host.c:#include "vmpi-stats.h"
./vmpi/vmpi-host.c:#include "vmpi-iovec.h"
./vmpi/vmpi-host.c:#include "vmpi-host-impl.h"
./vmpi/vmpi-host.c:#include "vmpi-ops.h"
./vmpi/vmpi-host.c:#include "vmpi-test.h"
./vmpi/vmpi-host.c:#include "vmpi-provider.h"
./vmpi/vmpi-host.c:        return vmpi_impl_register_read_callback(mpi->vi, cb, opaque);
./vmpi/vmpi-host.c:        return &mpi->write;
./vmpi/vmpi-host.c:        return mpi->read;
./vmpi/vmpi-host.c:        return &mpi->stats;
./vmpi/vmpi-host.c:#include "vmpi-instances.h"
./vmpi/vmpi-host.c:                *err = -ENOMEM;
./vmpi/vmpi-host.c:        vmpi_stats_init(&mpi->stats);
./vmpi/vmpi-host.c:        mpi->vi = vi;
./vmpi/vmpi-host.c:        *err = vmpi_ring_init(&mpi->write, VMPI_BUF_SIZE);
./vmpi/vmpi-host.c:        mpi->read = kmalloc(sizeof(mpi->read[0]) * vmpi_max_channels,
./vmpi/vmpi-host.c:        if (mpi->read == NULL) {
./vmpi/vmpi-host.c:                *err = -ENOMEM;
./vmpi/vmpi-host.c:                *err = vmpi_queue_init(&mpi->read[i], 0, VMPI_BUF_SIZE);
./vmpi/vmpi-host.c:        mpi->id = vmpi_id_counter++;
./vmpi/vmpi-host.c:        vmpi_provider_register(VMPI_PROVIDER_HOST, mpi->id, &ops);
./vmpi/vmpi-host.c:        for (--i; i >= 0; i--) {
./vmpi/vmpi-host.c:                vmpi_queue_fini(&mpi->read[i]);
./vmpi/vmpi-host.c:        kfree(mpi->read);
./vmpi/vmpi-host.c:        vmpi_ring_fini(&mpi->write);
./vmpi/vmpi-host.c:        vmpi_stats_fini(&mpi->stats);
./vmpi/vmpi-host.c:        vmpi_provider_unregister(VMPI_PROVIDER_HOST, mpi->id);
./vmpi/vmpi-host.c:        mpi->vi = NULL;
./vmpi/vmpi-host.c:        vmpi_ring_fini(&mpi->write);
./vmpi/vmpi-host.c:                vmpi_queue_fini(&mpi->read[i]);
./vmpi/vmpi-host.c:        kfree(mpi->read);
./vmpi/vmpi-host.c:        vmpi_stats_fini(&mpi->stats);
./vmpi/vmpi-host.c:        //struct vhost_mpi_virtqueue *nvq = &mpi->vqs[VHOST_MPI_VQ_RX];
./vmpi/vmpi-host.c:        struct vmpi_ring *ring = &mpi->write;
./vmpi/vmpi-host.c:        size_t buf_data_size = ring->buf_size - sizeof(struct vmpi_hdr);
./vmpi/vmpi-host.c:                return -EBADFD;
./vmpi/vmpi-host.c:        /* XXX file->f_flags & O_NONBLOCK */
./vmpi/vmpi-host.c:        add_wait_queue(&ring->wqh, &wait);
./vmpi/vmpi-host.c:                current->state = TASK_INTERRUPTIBLE;
./vmpi/vmpi-host.c:                mutex_lock(&ring->lock);
./vmpi/vmpi-host.c:                        mutex_unlock(&ring->lock);
./vmpi/vmpi-host.c:                                ret = -ERESTARTSYS;
./vmpi/vmpi-host.c:                buf = &ring->bufs[ring->nu];
./vmpi/vmpi-host.c:                vmpi_buffer_hdr(buf)->channel = channel;
./vmpi/vmpi-host.c:                                ret = -EFAULT;
./vmpi/vmpi-host.c:                buf->len = sizeof(struct vmpi_hdr) + copylen;
./vmpi/vmpi-host.c:                VMPI_RING_INC(ring->nu);
./vmpi/vmpi-host.c:                mpi->stats.txreq++;
./vmpi/vmpi-host.c:                mutex_unlock(&ring->lock);
./vmpi/vmpi-host.c:                vmpi_impl_txkick(mpi->vi);
./vmpi/vmpi-host.c:        current->state = TASK_RUNNING;
./vmpi/vmpi-host.c:        remove_wait_queue(&ring->wqh, &wait);
./vmpi/vmpi-host.c:        //struct vhost_mpi_virtqueue *nvq = &mpi->vqs[VHOST_MPI_VQ_TX];
./vmpi/vmpi-host.c:                return -EBADFD;
./vmpi/vmpi-host.c:                return -EINVAL;
./vmpi/vmpi-host.c:        queue = &mpi->read[channel];
./vmpi/vmpi-host.c:        add_wait_queue(&queue->wqh, &wait);
./vmpi/vmpi-host.c:                current->state = TASK_INTERRUPTIBLE;
./vmpi/vmpi-host.c:                mutex_lock(&queue->lock);
./vmpi/vmpi-host.c:                        mutex_unlock(&queue->lock);
./vmpi/vmpi-host.c:                                ret = -ERESTARTSYS;
./vmpi/vmpi-host.c:                mutex_unlock(&queue->lock);
./vmpi/vmpi-host.c:                copylen = buf->len - sizeof(struct vmpi_hdr);
./vmpi/vmpi-host.c:                        ret = -EFAULT;
./vmpi/vmpi-host.c:                buf->len = 0;
./vmpi/vmpi-host.c:        current->state = TASK_RUNNING;
./vmpi/vmpi-host.c:        remove_wait_queue(&queue->wqh, &wait);
./vmpi/.vmpi-host-impl-virtio.o.cmd:cmd_net/rina/vmpi/vmpi-host-impl-virtio.o := gcc -Wp,-MD,net/rina/vmpi/.vmpi-host-impl-virtio.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(vmpi_host_impl_virtio)"  -D"KBUILD_MODNAME=KBUILD_STR(vhost_mpi)" -c -o net/rina/vmpi/.tmp_vmpi-host-impl-virtio.o net/rina/vmpi/vmpi-host-impl-virtio.c
./vmpi/.vmpi-host-impl-virtio.o.cmd:source_net/rina/vmpi/vmpi-host-impl-virtio.o := net/rina/vmpi/vmpi-host-impl-virtio.c
./vmpi/.vmpi-host-impl-virtio.o.cmd:deps_net/rina/vmpi/vmpi-host-impl-virtio.o := \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/int-ll64.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/bitsperlong.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/linux/compiler-gcc.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/linux/compiler-gcc4.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/ptrace.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/bitops/fls64.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/bitops/find.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/bitops/sched.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/bitops/le.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/percpu.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/linux/percpu-defs.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/bug.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/memory_model.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/getorder.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/pgtable-nopud.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/ioctl.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/uapi/asm-generic/ioctl.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/atomic-long.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/linux/pageblock-flags.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/linux/page-flags-layout.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/param.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/uapi/asm-generic/param.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/topology.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/iomap.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/pci_iomap.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/kmap_types.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/fixmap.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/linux/page-debug-flags.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/pgtable.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/linux/page-flags.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/scatterlist.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/module.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/cputime.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/cputime_jiffies.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/siginfo.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/uapi/asm-generic/siginfo.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/asm-generic/resource.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/uapi/asm-generic/resource.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/linux/radix-tree.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  include/linux/percpu-rwsem.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  net/rina/vmpi/vmpi-ring.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  net/rina/vmpi/vmpi-host-impl.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:  net/rina/vmpi/vmpi-host-test.h \
./vmpi/.vmpi-host-impl-virtio.o.cmd:net/rina/vmpi/vmpi-host-impl-virtio.o: $(deps_net/rina/vmpi/vmpi-host-impl-virtio.o)
./vmpi/.vmpi-host-impl-virtio.o.cmd:$(deps_net/rina/vmpi/vmpi-host-impl-virtio.o):
./vmpi/vmpi-guest-impl-xen.c: * A guest-side vmpi-impl implementation for Xen
./vmpi/vmpi-guest-impl-xen.c:#include "xen-mpi-ioring.h"
./vmpi/vmpi-guest-impl-xen.c:#include "vmpi-limits.h"
./vmpi/vmpi-guest-impl-xen.c:#include "vmpi-structs.h"
./vmpi/vmpi-guest-impl-xen.c:#include "vmpi-guest-impl.h"
./vmpi/vmpi-guest-impl-xen.c:	char tx_irq_name[IFNAMSIZ+4]; /* DEVNAME-tx */
./vmpi/vmpi-guest-impl-xen.c:	char rx_irq_name[IFNAMSIZ+4]; /* DEVNAME-rx */
./vmpi/vmpi-guest-impl-xen.c:	/* Receive-ring batched refills. */
./vmpi/vmpi-guest-impl-xen.c:	list->link = id;
./vmpi/vmpi-guest-impl-xen.c:	BUILD_BUG_ON(sizeof(list->buf) != sizeof(list->link));
./vmpi/vmpi-guest-impl-xen.c:	return (unsigned long)list->buf < PAGE_OFFSET;
./vmpi/vmpi-guest-impl-xen.c:	return idx & (NET_RX_RING_SIZE - 1);
./vmpi/vmpi-guest-impl-xen.c:	struct vmpi_buffer *buf = np->rx_bufs[i];
./vmpi/vmpi-guest-impl-xen.c:	np->rx_bufs[i] = NULL;
./vmpi/vmpi-guest-impl-xen.c:	grant_ref_t ref = np->grant_rx_ref[i];
./vmpi/vmpi-guest-impl-xen.c:	np->grant_rx_ref[i] = GRANT_INVALID_REF;
./vmpi/vmpi-guest-impl-xen.c:        if (likely(np->recv_cb))
./vmpi/vmpi-guest-impl-xen.c:                np->recv_cb(np);
./vmpi/vmpi-guest-impl-xen.c:	RING_IDX req_prod = np->rx.req_prod_pvt;
./vmpi/vmpi-guest-impl-xen.c:	batch_target = np->rx_target - (req_prod - np->rx.rsp_cons);
./vmpi/vmpi-guest-impl-xen.c:	for (i = vmpi_queue_len(&np->rx_batch); i < batch_target; i++) {
./vmpi/vmpi-guest-impl-xen.c:			mod_timer(&np->rx_refill_timer,
./vmpi/vmpi-guest-impl-xen.c:		vmpi_queue_push_back(&np->rx_batch, buf);
./vmpi/vmpi-guest-impl-xen.c:	if (i < (np->rx_target/2)) {
./vmpi/vmpi-guest-impl-xen.c:		if (req_prod > np->rx.sring->req_prod)
./vmpi/vmpi-guest-impl-xen.c:	if (((req_prod - np->rx.sring->rsp_prod) < (np->rx_target / 4)) &&
./vmpi/vmpi-guest-impl-xen.c:	    ((np->rx_target *= 2) > np->rx_max_target))
./vmpi/vmpi-guest-impl-xen.c:		np->rx_target = np->rx_max_target;
./vmpi/vmpi-guest-impl-xen.c:                buf = vmpi_queue_pop_front(&np->rx_batch);
./vmpi/vmpi-guest-impl-xen.c:		BUG_ON(np->rx_bufs[id]);
./vmpi/vmpi-guest-impl-xen.c:		np->rx_bufs[id] = buf;
./vmpi/vmpi-guest-impl-xen.c:		ref = gnttab_claim_grant_reference(&np->gref_rx_head);
./vmpi/vmpi-guest-impl-xen.c:                mfn = virt_to_mfn(buf->p);
./vmpi/vmpi-guest-impl-xen.c:						np->xbdev->otherend_id,
./vmpi/vmpi-guest-impl-xen.c:		req = RING_GET_REQUEST(&np->rx, req_prod);
./vmpi/vmpi-guest-impl-xen.c:		req->id = id;
./vmpi/vmpi-guest-impl-xen.c:		req->gref = np->grant_rx_ref[id] = ref;
./vmpi/vmpi-guest-impl-xen.c:        pr_info("xen-mpi alloced %d rx bufs\n", req_prod - np->rx.req_prod_pvt);
./vmpi/vmpi-guest-impl-xen.c:	np->rx.req_prod_pvt = req_prod;
./vmpi/vmpi-guest-impl-xen.c:	RING_PUSH_REQUESTS_AND_CHECK_NOTIFY(&np->rx, notify);
./vmpi/vmpi-guest-impl-xen.c:		notify_remote_via_irq(np->rx_irq);
./vmpi/vmpi-guest-impl-xen.c:	prod = np->tx.sring->rsp_prod;
./vmpi/vmpi-guest-impl-xen.c:        cons = np->tx.rsp_cons;
./vmpi/vmpi-guest-impl-xen.c:                txrsp = RING_GET_RESPONSE(&np->tx, cons);
./vmpi/vmpi-guest-impl-xen.c:                if (txrsp->status != XEN_MPI_RSP_OKAY) {
./vmpi/vmpi-guest-impl-xen.c:                                __func__, txrsp->status);
./vmpi/vmpi-guest-impl-xen.c:                /*if (txrsp->status == XEN_MPI_RSP_NULL)
./vmpi/vmpi-guest-impl-xen.c:                id  = txrsp->id;
./vmpi/vmpi-guest-impl-xen.c:                buf = np->tx_bufs[id].buf;
./vmpi/vmpi-guest-impl-xen.c:                                                np->grant_tx_ref[id]) != 0)) {
./vmpi/vmpi-guest-impl-xen.c:                        pr_alert("%s: warning -- grant still in use by backend domain\n",
./vmpi/vmpi-guest-impl-xen.c:                                np->grant_tx_ref[id], GNTMAP_readonly);
./vmpi/vmpi-guest-impl-xen.c:                                &np->gref_tx_head, np->grant_tx_ref[id]);
./vmpi/vmpi-guest-impl-xen.c:                np->grant_tx_ref[id] = GRANT_INVALID_REF;
./vmpi/vmpi-guest-impl-xen.c:                np->grant_tx_page[id] = NULL;
./vmpi/vmpi-guest-impl-xen.c:                add_id_to_freelist(&np->tx_buf_freelist, np->tx_bufs, id);
./vmpi/vmpi-guest-impl-xen.c:                np->tx.rsp_cons = ++cons;
./vmpi/vmpi-guest-impl-xen.c:	char *data = buf->p;
./vmpi/vmpi-guest-impl-xen.c:	unsigned int len = buf->len;
./vmpi/vmpi-guest-impl-xen.c:	/* If buf->len is too big for wire format, drop buf and alert
./vmpi/vmpi-guest-impl-xen.c:			"xenmpi: buf->len = %u, too big for wire format\n",
./vmpi/vmpi-guest-impl-xen.c:                len = PAGE_SIZE - offset;
./vmpi/vmpi-guest-impl-xen.c:	spin_lock_irqsave(&np->tx_lock, flags);
./vmpi/vmpi-guest-impl-xen.c:		spin_unlock_irqrestore(&np->tx_lock, flags);
./vmpi/vmpi-guest-impl-xen.c:	i = np->tx.req_prod_pvt;
./vmpi/vmpi-guest-impl-xen.c:                if (slice > PAGE_SIZE - offset) {
./vmpi/vmpi-guest-impl-xen.c:                        slice = PAGE_SIZE - offset;
./vmpi/vmpi-guest-impl-xen.c:	        id = get_id_from_freelist(&np->tx_buf_freelist, np->tx_bufs);
./vmpi/vmpi-guest-impl-xen.c:	        np->tx_bufs[id].buf = buf;
./vmpi/vmpi-guest-impl-xen.c:	        ref = gnttab_claim_grant_reference(&np->gref_tx_head);
./vmpi/vmpi-guest-impl-xen.c:		        ref, np->xbdev->otherend_id, mfn, GNTMAP_readonly);
./vmpi/vmpi-guest-impl-xen.c:	        tx = RING_GET_REQUEST(&np->tx, i);
./vmpi/vmpi-guest-impl-xen.c:	        tx->id   = id;
./vmpi/vmpi-guest-impl-xen.c:	        tx->gref = np->grant_tx_ref[id] = ref;
./vmpi/vmpi-guest-impl-xen.c:	        tx->offset = offset;
./vmpi/vmpi-guest-impl-xen.c:	        tx->size = slice;
./vmpi/vmpi-guest-impl-xen.c:                tx->flags = 1;  /* set the MORE_DATA flag */
./vmpi/vmpi-guest-impl-xen.c:	        np->grant_tx_page[id] = virt_to_page(data);
./vmpi/vmpi-guest-impl-xen.c:                        buf, tx->id, tx->gref, tx->offset, tx->size));
./vmpi/vmpi-guest-impl-xen.c:                len -= slice;
./vmpi/vmpi-guest-impl-xen.c:	tx->flags = 0;  /* clear the MORE_DATA flag */
./vmpi/vmpi-guest-impl-xen.c:	np->tx.req_prod_pvt = i;
./vmpi/vmpi-guest-impl-xen.c:	RING_PUSH_REQUESTS_AND_CHECK_NOTIFY(&np->tx, notify);
./vmpi/vmpi-guest-impl-xen.c:		notify_remote_via_irq(np->tx_irq);
./vmpi/vmpi-guest-impl-xen.c:	spin_unlock_irqrestore(&np->tx_lock, flags);
./vmpi/vmpi-guest-impl-xen.c:        return -1;
./vmpi/vmpi-guest-impl-xen.c:	RING_IDX req_prod = np->rx.req_prod_pvt;
./vmpi/vmpi-guest-impl-xen.c:        BUG_ON(np->rx_bufs[id]);
./vmpi/vmpi-guest-impl-xen.c:        np->rx_bufs[id] = buf;
./vmpi/vmpi-guest-impl-xen.c:        ref = gnttab_claim_grant_reference(&np->gref_rx_head);
./vmpi/vmpi-guest-impl-xen.c:        mfn = virt_to_mfn(buf->p);
./vmpi/vmpi-guest-impl-xen.c:                        np->xbdev->otherend_id,
./vmpi/vmpi-guest-impl-xen.c:        req = RING_GET_REQUEST(&np->rx, req_prod);
./vmpi/vmpi-guest-impl-xen.c:        req->id = id;
./vmpi/vmpi-guest-impl-xen.c:        req->gref = np->grant_rx_ref[id] = ref;
./vmpi/vmpi-guest-impl-xen.c:        req->offset = offset_in_page(buf->p);
./vmpi/vmpi-guest-impl-xen.c:        req->len = PAGE_SIZE;
./vmpi/vmpi-guest-impl-xen.c:	np->rx.req_prod_pvt = req_prod;
./vmpi/vmpi-guest-impl-xen.c:	RING_PUSH_REQUESTS_AND_CHECK_NOTIFY(&np->rx, notify);
./vmpi/vmpi-guest-impl-xen.c:		notify_remote_via_irq(np->rx_irq);
./vmpi/vmpi-guest-impl-xen.c:                __func__, req_prod, req->id, req->gref, req->offset, req->len));
./vmpi/vmpi-guest-impl-xen.c:	spin_lock(&np->rx_lock);
./vmpi/vmpi-guest-impl-xen.c:	prod = np->rx.sring->rsp_prod;
./vmpi/vmpi-guest-impl-xen.c:	cons = np->rx.rsp_cons;
./vmpi/vmpi-guest-impl-xen.c:                rx = RING_GET_RESPONSE(&np->rx, cons);
./vmpi/vmpi-guest-impl-xen.c:                if (rx->status < 0) {
./vmpi/vmpi-guest-impl-xen.c:                                __func__, rx->status);
./vmpi/vmpi-guest-impl-xen.c:                                cons, rx->id, rx->status));
./vmpi/vmpi-guest-impl-xen.c:                buf->len = rx->status;
./vmpi/vmpi-guest-impl-xen.c:                                                rx->id);
./vmpi/vmpi-guest-impl-xen.c:                gnttab_release_grant_reference(&np->gref_rx_head, ref);
./vmpi/vmpi-guest-impl-xen.c:                        __func__, cons, (int)buf->len));
./vmpi/vmpi-guest-impl-xen.c:                np->rx.rsp_cons = ++cons;
./vmpi/vmpi-guest-impl-xen.c:	spin_unlock(&np->rx_lock);
./vmpi/vmpi-guest-impl-xen.c:		if (buf_entry_is_link(&np->tx_bufs[i]))
./vmpi/vmpi-guest-impl-xen.c:		get_page(np->grant_tx_page[i]);
./vmpi/vmpi-guest-impl-xen.c:		gnttab_end_foreign_access(np->grant_tx_ref[i],
./vmpi/vmpi-guest-impl-xen.c:					  (unsigned long)page_address(np->grant_tx_page[i]));
./vmpi/vmpi-guest-impl-xen.c:		np->grant_tx_page[i] = NULL;
./vmpi/vmpi-guest-impl-xen.c:		np->grant_tx_ref[i] = GRANT_INVALID_REF;
./vmpi/vmpi-guest-impl-xen.c:		add_id_to_freelist(&np->tx_buf_freelist, np->tx_bufs, i);
./vmpi/vmpi-guest-impl-xen.c:		buf = np->tx_bufs[i].buf;
./vmpi/vmpi-guest-impl-xen.c:	spin_lock_bh(&np->rx_lock);
./vmpi/vmpi-guest-impl-xen.c:		buf = np->rx_bufs[id];
./vmpi/vmpi-guest-impl-xen.c:		ref = np->grant_rx_ref[id];
./vmpi/vmpi-guest-impl-xen.c:		page = virt_to_page(buf->p);
./vmpi/vmpi-guest-impl-xen.c:		np->grant_rx_ref[id] = GRANT_INVALID_REF;
./vmpi/vmpi-guest-impl-xen.c:	spin_unlock_bh(&np->rx_lock);
./vmpi/vmpi-guest-impl-xen.c:	gnttab_free_grant_references(np->gref_tx_head);
./vmpi/vmpi-guest-impl-xen.c:	gnttab_free_grant_references(np->gref_rx_head);
./vmpi/vmpi-guest-impl-xen.c:        return np->private;
./vmpi/vmpi-guest-impl-xen.c:        np->xmit_cb = xmit;
./vmpi/vmpi-guest-impl-xen.c:        np->recv_cb = recv;
./vmpi/vmpi-guest-impl-xen.c:        np->xmit_cb = NULL;
./vmpi/vmpi-guest-impl-xen.c:        np->recv_cb = NULL;
./vmpi/vmpi-guest-impl-xen.c:        RING_FINAL_CHECK_FOR_RESPONSES(&np->tx, more_to_do);
./vmpi/vmpi-guest-impl-xen.c:        RING_FINAL_CHECK_FOR_RESPONSES(&np->rx, more_to_do);
./vmpi/vmpi-guest-impl-xen.c:        if (likely(np->xmit_cb))
./vmpi/vmpi-guest-impl-xen.c:                np->xmit_cb(np);
./vmpi/vmpi-guest-impl-xen.c:        if (likely(np->recv_cb))
./vmpi/vmpi-guest-impl-xen.c:                np->recv_cb(np);
./vmpi/vmpi-guest-impl-xen.c:            return ERR_PTR(-ENOMEM);
./vmpi/vmpi-guest-impl-xen.c:	np->xbdev            = dev;
./vmpi/vmpi-guest-impl-xen.c:	spin_lock_init(&np->tx_lock);
./vmpi/vmpi-guest-impl-xen.c:	spin_lock_init(&np->rx_lock);
./vmpi/vmpi-guest-impl-xen.c:        vmpi_queue_init(&np->rx_batch, 0, VMPI_BUF_SIZE);
./vmpi/vmpi-guest-impl-xen.c:	np->rx_target     = RX_DFL_MIN_TARGET;
./vmpi/vmpi-guest-impl-xen.c:	np->rx_min_target = RX_DFL_MIN_TARGET;
./vmpi/vmpi-guest-impl-xen.c:	np->rx_max_target = RX_MAX_TARGET;
./vmpi/vmpi-guest-impl-xen.c:	init_timer(&np->rx_refill_timer);
./vmpi/vmpi-guest-impl-xen.c:	np->rx_refill_timer.data = (unsigned long)np;
./vmpi/vmpi-guest-impl-xen.c:	np->rx_refill_timer.function = rx_refill_timeout;
./vmpi/vmpi-guest-impl-xen.c:	np->tx_buf_freelist = 0;
./vmpi/vmpi-guest-impl-xen.c:		buf_entry_set_link(&np->tx_bufs[i], i+1);
./vmpi/vmpi-guest-impl-xen.c:		np->grant_tx_ref[i] = GRANT_INVALID_REF;
./vmpi/vmpi-guest-impl-xen.c:		np->rx_bufs[i] = NULL;
./vmpi/vmpi-guest-impl-xen.c:		np->grant_rx_ref[i] = GRANT_INVALID_REF;
./vmpi/vmpi-guest-impl-xen.c:		np->grant_tx_page[i] = NULL;
./vmpi/vmpi-guest-impl-xen.c:					  &np->gref_tx_head) < 0) {
./vmpi/vmpi-guest-impl-xen.c:		err = -ENOMEM;
./vmpi/vmpi-guest-impl-xen.c:					  &np->gref_rx_head) < 0) {
./vmpi/vmpi-guest-impl-xen.c:		err = -ENOMEM;
./vmpi/vmpi-guest-impl-xen.c:	gnttab_free_grant_references(np->gref_tx_head);
./vmpi/vmpi-guest-impl-xen.c:	dev_set_drvdata(&dev->dev, np);
./vmpi/vmpi-guest-impl-xen.c:        np->private = vmpi_init(np, &err, false);
./vmpi/vmpi-guest-impl-xen.c:        if (np->private == NULL) {
./vmpi/vmpi-guest-impl-xen.c:        printk("%s: Xen-mpi probe completed\n", __func__);
./vmpi/vmpi-guest-impl-xen.c:	/* This frees the page as a side-effect */
./vmpi/vmpi-guest-impl-xen.c:	spin_lock_bh(&info->rx_lock);
./vmpi/vmpi-guest-impl-xen.c:	spin_lock_irq(&info->tx_lock);
./vmpi/vmpi-guest-impl-xen.c:	spin_unlock_irq(&info->tx_lock);
./vmpi/vmpi-guest-impl-xen.c:	spin_unlock_bh(&info->rx_lock);
./vmpi/vmpi-guest-impl-xen.c:	if (info->tx_irq && (info->tx_irq == info->rx_irq))
./vmpi/vmpi-guest-impl-xen.c:		unbind_from_irqhandler(info->tx_irq, info);
./vmpi/vmpi-guest-impl-xen.c:	if (info->tx_irq && (info->tx_irq != info->rx_irq)) {
./vmpi/vmpi-guest-impl-xen.c:		unbind_from_irqhandler(info->tx_irq, info);
./vmpi/vmpi-guest-impl-xen.c:		unbind_from_irqhandler(info->rx_irq, info);
./vmpi/vmpi-guest-impl-xen.c:	info->tx_evtchn = info->rx_evtchn = 0;
./vmpi/vmpi-guest-impl-xen.c:	info->tx_irq = info->rx_irq = 0;
./vmpi/vmpi-guest-impl-xen.c:	xenmpi_end_access(info->tx_ring_ref, info->tx.sring);
./vmpi/vmpi-guest-impl-xen.c:	xenmpi_end_access(info->rx_ring_ref, info->rx.sring);
./vmpi/vmpi-guest-impl-xen.c:	info->tx_ring_ref = GRANT_INVALID_REF;
./vmpi/vmpi-guest-impl-xen.c:	info->rx_ring_ref = GRANT_INVALID_REF;
./vmpi/vmpi-guest-impl-xen.c:	info->tx.sring = NULL;
./vmpi/vmpi-guest-impl-xen.c:	info->rx.sring = NULL;
./vmpi/vmpi-guest-impl-xen.c:        printk("%s: xen-mpi disconnection complete\n", __func__);
./vmpi/vmpi-guest-impl-xen.c: * leave the device-layer structures intact so that this is transparent to the
./vmpi/vmpi-guest-impl-xen.c:	struct vmpi_impl_info *info = dev_get_drvdata(&dev->dev);
./vmpi/vmpi-guest-impl-xen.c:	dev_dbg(&dev->dev, "%s\n", dev->nodename);
./vmpi/vmpi-guest-impl-xen.c:	err = xenbus_alloc_evtchn(info->xbdev, &info->tx_evtchn);
./vmpi/vmpi-guest-impl-xen.c:	err = bind_evtchn_to_irqhandler(info->tx_evtchn,
./vmpi/vmpi-guest-impl-xen.c:					0, "xen-mpi", info);
./vmpi/vmpi-guest-impl-xen.c:	info->rx_evtchn = info->tx_evtchn;
./vmpi/vmpi-guest-impl-xen.c:	info->rx_irq = info->tx_irq = err;
./vmpi/vmpi-guest-impl-xen.c:	xenbus_free_evtchn(info->xbdev, info->tx_evtchn);
./vmpi/vmpi-guest-impl-xen.c:	info->tx_evtchn = 0;
./vmpi/vmpi-guest-impl-xen.c:	err = xenbus_alloc_evtchn(info->xbdev, &info->tx_evtchn);
./vmpi/vmpi-guest-impl-xen.c:	err = xenbus_alloc_evtchn(info->xbdev, &info->rx_evtchn);
./vmpi/vmpi-guest-impl-xen.c:	snprintf(info->tx_irq_name, sizeof(info->tx_irq_name),
./vmpi/vmpi-guest-impl-xen.c:		 "%s-tx", "xen-mpi");
./vmpi/vmpi-guest-impl-xen.c:	err = bind_evtchn_to_irqhandler(info->tx_evtchn,
./vmpi/vmpi-guest-impl-xen.c:					0, info->tx_irq_name, info);
./vmpi/vmpi-guest-impl-xen.c:	info->tx_irq = err;
./vmpi/vmpi-guest-impl-xen.c:	snprintf(info->rx_irq_name, sizeof(info->rx_irq_name),
./vmpi/vmpi-guest-impl-xen.c:		 "%s-rx", "xen-mpi");
./vmpi/vmpi-guest-impl-xen.c:	err = bind_evtchn_to_irqhandler(info->rx_evtchn,
./vmpi/vmpi-guest-impl-xen.c:					0, info->rx_irq_name, info);
./vmpi/vmpi-guest-impl-xen.c:	info->rx_irq = err;
./vmpi/vmpi-guest-impl-xen.c:	unbind_from_irqhandler(info->tx_irq, info);
./vmpi/vmpi-guest-impl-xen.c:	info->tx_irq = 0;
./vmpi/vmpi-guest-impl-xen.c:	xenbus_free_evtchn(info->xbdev, info->rx_evtchn);
./vmpi/vmpi-guest-impl-xen.c:	info->rx_evtchn = 0;
./vmpi/vmpi-guest-impl-xen.c:	xenbus_free_evtchn(info->xbdev, info->tx_evtchn);
./vmpi/vmpi-guest-impl-xen.c:	info->tx_evtchn = 0;
./vmpi/vmpi-guest-impl-xen.c:	info->tx_ring_ref = GRANT_INVALID_REF;
./vmpi/vmpi-guest-impl-xen.c:	info->rx_ring_ref = GRANT_INVALID_REF;
./vmpi/vmpi-guest-impl-xen.c:	info->rx.sring = NULL;
./vmpi/vmpi-guest-impl-xen.c:	info->tx.sring = NULL;
./vmpi/vmpi-guest-impl-xen.c:	err = xenbus_scanf(XBT_NIL, info->xbdev->otherend,
./vmpi/vmpi-guest-impl-xen.c:			   "feature-split-event-channels", "%u",
./vmpi/vmpi-guest-impl-xen.c:		err = -ENOMEM;
./vmpi/vmpi-guest-impl-xen.c:	FRONT_RING_INIT(&info->tx, txs, PAGE_SIZE);
./vmpi/vmpi-guest-impl-xen.c:	info->tx_ring_ref = err;
./vmpi/vmpi-guest-impl-xen.c:		err = -ENOMEM;
./vmpi/vmpi-guest-impl-xen.c:	FRONT_RING_INIT(&info->rx, rxs, PAGE_SIZE);
./vmpi/vmpi-guest-impl-xen.c:	info->rx_ring_ref = err;
./vmpi/vmpi-guest-impl-xen.c:	 *  a) feature-split-event-channels == 0
./vmpi/vmpi-guest-impl-xen.c:	 *  b) feature-split-event-channels == 1 but failed to setup
./vmpi/vmpi-guest-impl-xen.c:	gnttab_end_foreign_access_ref(info->rx_ring_ref, 0);
./vmpi/vmpi-guest-impl-xen.c:	gnttab_end_foreign_access_ref(info->tx_ring_ref, 0);
./vmpi/vmpi-guest-impl-xen.c:	err = xenbus_printf(xbt, dev->nodename, "tx-ring-ref", "%u",
./vmpi/vmpi-guest-impl-xen.c:			    info->tx_ring_ref);
./vmpi/vmpi-guest-impl-xen.c:		message = "writing tx ring-ref";
./vmpi/vmpi-guest-impl-xen.c:	err = xenbus_printf(xbt, dev->nodename, "rx-ring-ref", "%u",
./vmpi/vmpi-guest-impl-xen.c:			    info->rx_ring_ref);
./vmpi/vmpi-guest-impl-xen.c:		message = "writing rx ring-ref";
./vmpi/vmpi-guest-impl-xen.c:	if (info->tx_evtchn == info->rx_evtchn) {
./vmpi/vmpi-guest-impl-xen.c:		err = xenbus_printf(xbt, dev->nodename,
./vmpi/vmpi-guest-impl-xen.c:				    "event-channel", "%u", info->tx_evtchn);
./vmpi/vmpi-guest-impl-xen.c:			message = "writing event-channel";
./vmpi/vmpi-guest-impl-xen.c:		err = xenbus_printf(xbt, dev->nodename,
./vmpi/vmpi-guest-impl-xen.c:				    "event-channel-tx", "%u", info->tx_evtchn);
./vmpi/vmpi-guest-impl-xen.c:			message = "writing event-channel-tx";
./vmpi/vmpi-guest-impl-xen.c:		err = xenbus_printf(xbt, dev->nodename,
./vmpi/vmpi-guest-impl-xen.c:				    "event-channel-rx", "%u", info->rx_evtchn);
./vmpi/vmpi-guest-impl-xen.c:			message = "writing event-channel-rx";
./vmpi/vmpi-guest-impl-xen.c:	err = xenbus_printf(xbt, dev->nodename, "request-rx-copy", "%u",
./vmpi/vmpi-guest-impl-xen.c:		message = "writing request-rx-copy";
./vmpi/vmpi-guest-impl-xen.c:	err = xenbus_printf(xbt, dev->nodename, "feature-rx-notify", "%d", 1);
./vmpi/vmpi-guest-impl-xen.c:		message = "writing feature-rx-notify";
./vmpi/vmpi-guest-impl-xen.c:		if (err == -EAGAIN)
./vmpi/vmpi-guest-impl-xen.c:	err = xenbus_scanf(XBT_NIL, np->xbdev->otherend,
./vmpi/vmpi-guest-impl-xen.c:			   "feature-rx-copy", "%u", &feature_rx_copy);
./vmpi/vmpi-guest-impl-xen.c:		dev_info(&np->xbdev->dev,
./vmpi/vmpi-guest-impl-xen.c:		return -ENODEV;
./vmpi/vmpi-guest-impl-xen.c:	err = talk_to_mpiback(np->xbdev, np);
./vmpi/vmpi-guest-impl-xen.c:	spin_lock_bh(&np->rx_lock);
./vmpi/vmpi-guest-impl-xen.c:	spin_lock_irq(&np->tx_lock);
./vmpi/vmpi-guest-impl-xen.c:		if (!np->rx_bufs[i])
./vmpi/vmpi-guest-impl-xen.c:		buf = np->rx_bufs[requeue_idx] = xenmpi_get_rx_buf(np, i);
./vmpi/vmpi-guest-impl-xen.c:		ref = np->grant_rx_ref[requeue_idx] = xenmpi_get_rx_ref(np, i);
./vmpi/vmpi-guest-impl-xen.c:		req = RING_GET_REQUEST(&np->rx, requeue_idx);
./vmpi/vmpi-guest-impl-xen.c:		page = virt_to_page(buf->p);
./vmpi/vmpi-guest-impl-xen.c:			ref, np->xbdev->otherend_id,
./vmpi/vmpi-guest-impl-xen.c:		req->gref = ref;
./vmpi/vmpi-guest-impl-xen.c:		req->id   = requeue_idx;
./vmpi/vmpi-guest-impl-xen.c:                req->offset = offset_in_page(buf->p);
./vmpi/vmpi-guest-impl-xen.c:                req->len = PAGE_SIZE;
./vmpi/vmpi-guest-impl-xen.c:	np->rx.req_prod_pvt = requeue_idx;
./vmpi/vmpi-guest-impl-xen.c:	notify_remote_via_irq(np->tx_irq);
./vmpi/vmpi-guest-impl-xen.c:	if (np->tx_irq != np->rx_irq)
./vmpi/vmpi-guest-impl-xen.c:		notify_remote_via_irq(np->rx_irq);
./vmpi/vmpi-guest-impl-xen.c:        np->rx.sring->rsp_event = np->rx.rsp_cons + 1;
./vmpi/vmpi-guest-impl-xen.c:        if (RING_HAS_UNCONSUMED_RESPONSES(&np->rx)) {
./vmpi/vmpi-guest-impl-xen.c:                if (likely(np->recv_cb))
./vmpi/vmpi-guest-impl-xen.c:                        np->recv_cb(np);
./vmpi/vmpi-guest-impl-xen.c:	spin_unlock_irq(&np->tx_lock);
./vmpi/vmpi-guest-impl-xen.c:	spin_unlock_bh(&np->rx_lock);
./vmpi/vmpi-guest-impl-xen.c:        printk("%s: xen-mpi connection completed\n", __func__);
./vmpi/vmpi-guest-impl-xen.c:	struct vmpi_impl_info *np = dev_get_drvdata(&dev->dev);
./vmpi/vmpi-guest-impl-xen.c:	dev_dbg(&dev->dev, "%s\n", xenbus_strstate(backend_state));
./vmpi/vmpi-guest-impl-xen.c:        printk("%s: xen-mpi backend state --> %s\n", __func__,
./vmpi/vmpi-guest-impl-xen.c:		if (dev->state != XenbusStateInitialising)
./vmpi/vmpi-guest-impl-xen.c:		if (dev->state == XenbusStateClosed)
./vmpi/vmpi-guest-impl-xen.c:		/* Missed the backend's CLOSING state -- fallthrough */
./vmpi/vmpi-guest-impl-xen.c:	struct vmpi_impl_info *info = dev_get_drvdata(&dev->dev);
./vmpi/vmpi-guest-impl-xen.c:	dev_dbg(&dev->dev, "%s\n", dev->nodename);
./vmpi/vmpi-guest-impl-xen.c:	del_timer_sync(&info->rx_refill_timer);
./vmpi/vmpi-guest-impl-xen.c:        vmpi_fini(info->private, false);
./vmpi/vmpi-guest-impl-xen.c:        vmpi_queue_fini(&info->rx_batch);
./vmpi/vmpi-guest-impl-xen.c:        printk("%s: Xen-mpi removed\n", __func__);
./vmpi/vmpi-guest-impl-xen.c:		return -ENODEV;
./vmpi/xen-mpi-ioring.h: * I/O ring definitions for vmpi-impl over Xen
./vmpi/xen-mpi-ioring.h: * "feature-split-event-channels" is introduced to separate guest TX
./vmpi/xen-mpi-ioring.h: * "event-channel-tx" and "event-channel-rx" respectively. If frontend
./vmpi/xen-mpi-ioring.h: * doesn't want to use this feature, it just writes "event-channel"
./vmpi/xen-mpi-ioring.h:    int16_t  status;       /* -ve: BLKIF_RSP_* ; +ve: Rx'ed pkt size. */
./vmpi/xen-mpi-ioring.h:#define XEN_MPI_RSP_DROPPED	-2
./vmpi/xen-mpi-ioring.h:#define XEN_MPI_RSP_ERROR	-1
./vmpi/vmpi-provider.h:#include "vmpi-ops.h"
./vmpi/prepare-host-kvm.sh:set -x
./vmpi/prepare-host-kvm.sh:sudo modprobe shim-hv
./vmpi/prepare-host-kvm.sh:sudo modprobe vmpi-kvm-host
./vmpi/prepare-host-kvm.sh:sudo chmod a+rwx /dev/vhost-mpi
Binary file ./vmpi/vmpi-ring.o matches
Binary file ./vmpi/virtio-mpi.ko matches
Binary file ./vmpi/vmpi-host-test.o matches
./vmpi/Makefile:ccflags-y += -I$(srctree)/net/rina
./vmpi/Makefile:ccflags-y += -I$(srctree)/net/rina/ipcps
./vmpi/Makefile:ccflags-y += -Wtype-limits
./vmpi/Makefile:obj-m += vmpi-provider.o
./vmpi/Makefile:obj-$(CONFIG_VMPI_KVM_GUEST) += vmpi-kvm-guest.o
./vmpi/Makefile:vmpi-kvm-guest-y :=						\
./vmpi/Makefile:	vmpi-guest-impl-kvm.o vmpi-test.o vmpi-guest.o	\
./vmpi/Makefile:	vmpi-structs.o vmpi-iovec.o vmpi-stats.o
./vmpi/Makefile:obj-$(CONFIG_VMPI_KVM_HOST) += vmpi-kvm-host.o
./vmpi/Makefile:vmpi-kvm-host-y :=						\
./vmpi/Makefile:	vmpi-host-impl-kvm.o  vmpi-test.o  vmpi-host.o	\
./vmpi/Makefile:	vmpi-structs.o vmpi-iovec.o vmpi-stats.o
./vmpi/Makefile:obj-$(CONFIG_VMPI_XEN_GUEST) += vmpi-xen-guest.o
./vmpi/Makefile:vmpi-xen-guest-y :=						\
./vmpi/Makefile:	vmpi-guest-impl-xen.o vmpi-structs.o vmpi-guest.o		\
./vmpi/Makefile:	vmpi-iovec.o vmpi-test.o vmpi-stats.o
./vmpi/Makefile:obj-$(CONFIG_VMPI_XEN_HOST) += vmpi-xen-host.o
./vmpi/Makefile:vmpi-xen-host-y :=						\
./vmpi/Makefile:	vmpi-host-impl-xen.o  xen-mpi-back-interface.o		\
./vmpi/Makefile:	xen-mpi-back-xenbus.o vmpi-structs.o vmpi-host.o	\
./vmpi/Makefile:	vmpi-iovec.o vmpi-test.o vmpi-stats.o
Binary file ./vmpi/virtio-mpi.mod.o matches
./vmpi/vmpi.h:#include "vmpi-limits.h"
./vmpi/unprepare-host-xen.sh:        echo "USAGE:    $0 <FRONTEND-DOM-ID>"
./vmpi/unprepare-host-xen.sh:        result=$(sudo xenstore-list ${param})
./vmpi/unprepare-host-xen.sh:               sudo xenstore-rm ${param}/${key}
./vmpi/unprepare-host-xen.sh:echo "$1" | grep -o "^[0-9]\+$"
./vmpi/unprepare-host-xen.sh:sudo rmmod vmpi-xen-host.ko
./vmpi/vmpi-guest-impl.h: * A guest-side vmpi-impl interface
./vmpi/vmpi-guest-impl.h:#include "vmpi-structs.h"
./vmpi/prepare-guest-xen.sh:set -x
./vmpi/prepare-guest-xen.sh:sudo insmod vmpi-xen-guest.ko
./vmpi/.virtio-mpi.ko.cmd:cmd_net/rina/vmpi/virtio-mpi.ko := ld -r -m elf_i386 -T /home/irati/linux/scripts/module-common.lds --build-id  -o net/rina/vmpi/virtio-mpi.ko net/rina/vmpi/virtio-mpi.o net/rina/vmpi/virtio-mpi.mod.o
Binary file ./vmpi/vhost-mpi.ko matches
./.pim.o.cmd:cmd_net/rina/pim.o := gcc -Wp,-MD,net/rina/.pim.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(pim)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_pim.o net/rina/pim.c
./.pim.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.pim.o.cmd:  include/asm-generic/int-ll64.h \
./.pim.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.pim.o.cmd:  include/asm-generic/bitsperlong.h \
./.pim.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.pim.o.cmd:  include/linux/compiler-gcc.h \
./.pim.o.cmd:  include/linux/compiler-gcc4.h \
./.pim.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.pim.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.pim.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.pim.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.pim.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.pim.o.cmd:  include/asm-generic/ptrace.h \
./.pim.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.pim.o.cmd:  include/asm-generic/bitops/fls64.h \
./.pim.o.cmd:  include/asm-generic/bitops/find.h \
./.pim.o.cmd:  include/asm-generic/bitops/sched.h \
./.pim.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.pim.o.cmd:  include/asm-generic/bitops/le.h \
./.pim.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.pim.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.pim.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.pim.o.cmd:  include/asm-generic/percpu.h \
./.pim.o.cmd:  include/linux/percpu-defs.h \
./.pim.o.cmd:  include/asm-generic/bug.h \
./.pim.o.cmd:  include/asm-generic/memory_model.h \
./.pim.o.cmd:  include/asm-generic/getorder.h \
./.pim.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.pim.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.pim.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.pim.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.pim.o.cmd:  include/asm-generic/ioctl.h \
./.pim.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.pim.o.cmd:  include/asm-generic/atomic-long.h \
./.pim.o.cmd:  include/asm-generic/param.h \
./.pim.o.cmd:  include/uapi/asm-generic/param.h \
./.pim.o.cmd:  include/asm-generic/topology.h \
./.pim.o.cmd:  include/asm-generic/early_ioremap.h \
./.pim.o.cmd:  include/asm-generic/iomap.h \
./.pim.o.cmd:  include/asm-generic/pci_iomap.h \
./.pim.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.pim.o.cmd:  include/asm-generic/kmap_types.h \
./.pim.o.cmd:  include/asm-generic/fixmap.h \
./.pim.o.cmd:  include/linux/pageblock-flags.h \
./.pim.o.cmd:  include/linux/page-flags-layout.h \
./.pim.o.cmd:  include/asm-generic/sections.h \
./.pim.o.cmd:  net/rina/ipcp-instances.h \
./dtcp-utils.c:#define RINA_PREFIX "dtcp-utils"
./dtcp-utils.c:#include "dtcp-utils.h"
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        if (cfg->rcvr_flow_control)
./dtcp-utils.c:                policy_destroy(cfg->rcvr_flow_control);
./dtcp-utils.c:        if (cfg->tx_control)
./dtcp-utils.c:                policy_destroy(cfg->tx_control);
./dtcp-utils.c:        tmp->rcvr_flow_control = policy_create_gfp(flags);
./dtcp-utils.c:        tmp->tx_control        = policy_create_gfp(flags);
./dtcp-utils.c:        if (!tmp->rcvr_flow_control || !tmp->tx_control) {
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        if (cfg->no_rate_slow_down)
./dtcp-utils.c:                policy_destroy(cfg->no_rate_slow_down);
./dtcp-utils.c:        if (cfg->no_override_default_peak)
./dtcp-utils.c:                policy_destroy(cfg->no_override_default_peak);
./dtcp-utils.c:        if (cfg->rate_reduction)
./dtcp-utils.c:                policy_destroy(cfg->rate_reduction);
./dtcp-utils.c:        tmp->no_rate_slow_down        = policy_create_gfp(flags);
./dtcp-utils.c:        tmp->no_override_default_peak = policy_create_gfp(flags);
./dtcp-utils.c:        tmp->rate_reduction           = policy_create_gfp(flags);
./dtcp-utils.c:        if (!tmp->no_rate_slow_down        ||
./dtcp-utils.c:            !tmp->no_override_default_peak ||
./dtcp-utils.c:            !tmp->rate_reduction) {
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        if (cfg->wfctrl_cfg) window_fctrl_config_destroy(cfg->wfctrl_cfg);
./dtcp-utils.c:        if (cfg->rfctrl_cfg) rate_fctrl_config_destroy(cfg->rfctrl_cfg);
./dtcp-utils.c:        if (cfg->closed_window)
./dtcp-utils.c:                policy_destroy(cfg->closed_window);
./dtcp-utils.c:        if (cfg->flow_control_overrun)
./dtcp-utils.c:                policy_destroy(cfg->flow_control_overrun);
./dtcp-utils.c:        if (cfg->reconcile_flow_conflict)
./dtcp-utils.c:                policy_destroy(cfg->reconcile_flow_conflict);
./dtcp-utils.c:        if (cfg->receiving_flow_control)
./dtcp-utils.c:                policy_destroy(cfg->receiving_flow_control);
./dtcp-utils.c:        tmp->wfctrl_cfg = window_fctrl_config_create_gfp(flags);
./dtcp-utils.c:        if (!tmp->wfctrl_cfg) {
./dtcp-utils.c:        tmp->rfctrl_cfg = rate_fctrl_config_create_gfp(flags);
./dtcp-utils.c:        if (!tmp->rfctrl_cfg) {
./dtcp-utils.c:        tmp->closed_window            = policy_create_gfp(flags);
./dtcp-utils.c:        tmp->flow_control_overrun     = policy_create_gfp(flags);
./dtcp-utils.c:        tmp->reconcile_flow_conflict  = policy_create_gfp(flags);
./dtcp-utils.c:        tmp->receiving_flow_control   = policy_create_gfp(flags);
./dtcp-utils.c:        if (!tmp->closed_window              ||
./dtcp-utils.c:            !tmp->flow_control_overrun       ||
./dtcp-utils.c:            !tmp->reconcile_flow_conflict    ||
./dtcp-utils.c:            !tmp->receiving_flow_control) {
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        if (cfg->retransmission_timer_expiry)
./dtcp-utils.c:                policy_destroy(cfg->retransmission_timer_expiry);
./dtcp-utils.c:        if (cfg->sender_ack)
./dtcp-utils.c:                policy_destroy(cfg->sender_ack);
./dtcp-utils.c:        if (cfg->receiving_ack_list)
./dtcp-utils.c:                policy_destroy(cfg->receiving_ack_list);
./dtcp-utils.c:        if (cfg->rcvr_ack)
./dtcp-utils.c:                policy_destroy(cfg->rcvr_ack);
./dtcp-utils.c:        if (cfg->sending_ack)
./dtcp-utils.c:                policy_destroy(cfg->sending_ack);
./dtcp-utils.c:        if (cfg->rcvr_control_ack)
./dtcp-utils.c:                policy_destroy(cfg->rcvr_control_ack);
./dtcp-utils.c:        tmp->retransmission_timer_expiry = policy_create_gfp(flags);
./dtcp-utils.c:        tmp->sender_ack                  = policy_create_gfp(flags);
./dtcp-utils.c:        tmp->receiving_ack_list          = policy_create_gfp(flags);
./dtcp-utils.c:        tmp->rcvr_ack                    = policy_create_gfp(flags);
./dtcp-utils.c:        tmp->sending_ack                 = policy_create_gfp(flags);
./dtcp-utils.c:        tmp->rcvr_control_ack            = policy_create_gfp(flags);
./dtcp-utils.c:        if (!tmp->retransmission_timer_expiry ||
./dtcp-utils.c:            !tmp->sender_ack                  ||
./dtcp-utils.c:            !tmp->receiving_ack_list          ||
./dtcp-utils.c:            !tmp->rcvr_ack                    ||
./dtcp-utils.c:            !tmp->sending_ack                 ||
./dtcp-utils.c:            !tmp->rcvr_control_ack) {
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        if (cfg->fctrl_cfg)
./dtcp-utils.c:                dtcp_fctrl_config_destroy(cfg->fctrl_cfg);
./dtcp-utils.c:        if (cfg->rxctrl_cfg)
./dtcp-utils.c:                dtcp_rxctrl_config_destroy(cfg->rxctrl_cfg);
./dtcp-utils.c:        if (cfg->receiver_inactivity_timer)
./dtcp-utils.c:                policy_destroy(cfg->receiver_inactivity_timer);
./dtcp-utils.c:        if (cfg->sender_inactivity_timer)
./dtcp-utils.c:                policy_destroy(cfg->sender_inactivity_timer);
./dtcp-utils.c:        if (cfg->lost_control_pdu)
./dtcp-utils.c:                policy_destroy(cfg->lost_control_pdu);
./dtcp-utils.c:        if (cfg->rtt_estimator)
./dtcp-utils.c:                policy_destroy(cfg->rtt_estimator);
./dtcp-utils.c:        tmp->fctrl_cfg = dtcp_fctrl_config_create_gfp(flags);
./dtcp-utils.c:        if (!tmp->fctrl_cfg) {
./dtcp-utils.c:        tmp->rxctrl_cfg = dtcp_rxctrl_config_create_gfp(flags);
./dtcp-utils.c:        if (!tmp->rxctrl_cfg){
./dtcp-utils.c:        tmp->receiver_inactivity_timer = policy_create_gfp(flags);
./dtcp-utils.c:        if (!tmp->receiver_inactivity_timer) {
./dtcp-utils.c:        tmp->sender_inactivity_timer = policy_create_gfp(flags);
./dtcp-utils.c:        if (!tmp->sender_inactivity_timer) {
./dtcp-utils.c:        tmp->lost_control_pdu = policy_create_gfp(flags);
./dtcp-utils.c:        if (!tmp->lost_control_pdu) {
./dtcp-utils.c:        tmp->rtt_estimator = policy_create_gfp(flags);
./dtcp-utils.c:        if (!tmp->rtt_estimator) {
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->wfctrl_cfg->max_closed_winq_length = len;
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->wfctrl_cfg->initial_credit = ic;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!rcvr_flow_control) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->wfctrl_cfg->rcvr_flow_control = rcvr_flow_control;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!tx_control) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->wfctrl_cfg->tx_control = tx_control;
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->rfctrl_cfg->sending_rate = sending_rate;
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->rfctrl_cfg->time_period = time_period;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!no_rate_slow_down) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->rfctrl_cfg->no_rate_slow_down = no_rate_slow_down;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!no_override_def_peak) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->rfctrl_cfg->no_override_default_peak =
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!rate_reduction) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->rfctrl_cfg->rate_reduction = rate_reduction;
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        if (!cfg->fctrl_cfg)
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->window_based_fctrl = wb_fctrl;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!wfctrl_cfg) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->wfctrl_cfg = wfctrl_cfg;
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        if (!cfg->fctrl_cfg)
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->rate_based_fctrl = rate_based_fctrl;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!rfctrl_cfg) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->rfctrl_cfg = rfctrl_cfg;
./dtcp-utils.c:        if (!cfg)            return -1;
./dtcp-utils.c:        if (!cfg->fctrl_cfg) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->sent_bytes_th = sent_bytes_th;
./dtcp-utils.c:        if (!cfg)            return -1;
./dtcp-utils.c:        if (!cfg->fctrl_cfg) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->sent_bytes_percent_th = sent_bytes_percent_th;
./dtcp-utils.c:        if (!cfg)            return -1;
./dtcp-utils.c:        if (!cfg->fctrl_cfg) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->sent_buffers_th = sent_buffers_th;
./dtcp-utils.c:        if (!cfg)            return -1;
./dtcp-utils.c:        if (!cfg->fctrl_cfg) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->rcvd_bytes_th = rcvd_bytes_th;
./dtcp-utils.c:        if (!cfg)            return -1;
./dtcp-utils.c:        if (!cfg->fctrl_cfg) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->rcvd_bytes_percent_th = rcvd_byte_pth;
./dtcp-utils.c:        if (!cfg)            return -1;
./dtcp-utils.c:        if (!cfg->fctrl_cfg) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->rcvd_buffers_th = rcvd_buffers_th;
./dtcp-utils.c:        if (!cfg)            return -1;
./dtcp-utils.c:        if (!cfg->fctrl_cfg) return -1;
./dtcp-utils.c:        if (!closed_window)  return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->closed_window = closed_window;
./dtcp-utils.c:        if (!cfg)                  return -1;
./dtcp-utils.c:        if (!cfg->fctrl_cfg)       return -1;
./dtcp-utils.c:        if (!flow_control_overrun) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->flow_control_overrun = flow_control_overrun;
./dtcp-utils.c:        if (!cfg)                     return -1;
./dtcp-utils.c:        if (!cfg->fctrl_cfg)          return -1;
./dtcp-utils.c:        if (!reconcile_flow_conflict) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->reconcile_flow_conflict = reconcile_flow_conflict;
./dtcp-utils.c:        if (!cfg)                    return -1;
./dtcp-utils.c:        if (!cfg->fctrl_cfg)         return -1;
./dtcp-utils.c:        if (!receiving_flow_control) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg->receiving_flow_control =
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        cfg->rxctrl_cfg->data_retransmit_max = data_retransmit_max;
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        cfg->rxctrl_cfg->initial_tr = tr;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!rtx_timer_expiry) return -1;
./dtcp-utils.c:        cfg->rxctrl_cfg->retransmission_timer_expiry = rtx_timer_expiry;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!sender_ack) return -1;
./dtcp-utils.c:        cfg->rxctrl_cfg->sender_ack = sender_ack;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!receiving_ack_list) return -1;
./dtcp-utils.c:        cfg->rxctrl_cfg->receiving_ack_list = receiving_ack_list;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!rcvr_ack) return -1;
./dtcp-utils.c:        cfg->rxctrl_cfg->rcvr_ack = rcvr_ack;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!sending_ack) return -1;
./dtcp-utils.c:        cfg->rxctrl_cfg->sending_ack = sending_ack;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!rcvr_control_ack) return -1;
./dtcp-utils.c:        cfg->rxctrl_cfg->rcvr_control_ack = rcvr_control_ack;
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        cfg->flow_ctrl = flow_ctrl;
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        cfg->rtx_ctrl = rtx_ctrl;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!fctrl_cfg) return -1;
./dtcp-utils.c:        cfg->fctrl_cfg = fctrl_cfg;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!rxctrl_cfg) return -1;
./dtcp-utils.c:        cfg->rxctrl_cfg = rxctrl_cfg;
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        cfg->receiver_inactivity = receiver_inactivity;
./dtcp-utils.c:                return -1;
./dtcp-utils.c:        cfg->sender_inactivity = sender_inactivity;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!rcvr_inactivity_timer) return -1;
./dtcp-utils.c:        cfg->receiver_inactivity_timer = rcvr_inactivity_timer;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!sender_inactivity_timer) return -1;
./dtcp-utils.c:        cfg->sender_inactivity_timer = sender_inactivity_timer;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!lost_control_pdu) return -1;
./dtcp-utils.c:        cfg->lost_control_pdu = lost_control_pdu;
./dtcp-utils.c:        if (!cfg) return -1;
./dtcp-utils.c:        if (!rtt_estimator) return -1;
./dtcp-utils.c:        cfg->rtt_estimator = rtt_estimator;
./dtcp-utils.c:        return cfg->fctrl_cfg->wfctrl_cfg->max_closed_winq_length;
./dtcp-utils.c:        return cfg->fctrl_cfg->wfctrl_cfg->initial_credit;
./dtcp-utils.c:        return cfg->fctrl_cfg->wfctrl_cfg->rcvr_flow_control;
./dtcp-utils.c:        return cfg->fctrl_cfg->wfctrl_cfg->tx_control;
./dtcp-utils.c:        return cfg->fctrl_cfg->rfctrl_cfg->sending_rate;
./dtcp-utils.c:        return cfg->fctrl_cfg->rfctrl_cfg->time_period;
./dtcp-utils.c:        return cfg->fctrl_cfg->rfctrl_cfg->no_rate_slow_down;
./dtcp-utils.c:        return cfg->fctrl_cfg->rfctrl_cfg->no_override_default_peak;
./dtcp-utils.c:        return cfg->fctrl_cfg->rfctrl_cfg->rate_reduction;
./dtcp-utils.c:        if (!cfg->fctrl_cfg)
./dtcp-utils.c:        return cfg->fctrl_cfg->window_based_fctrl;
./dtcp-utils.c:        return cfg->fctrl_cfg->wfctrl_cfg;
./dtcp-utils.c:        if (!cfg->fctrl_cfg)
./dtcp-utils.c:        return cfg->fctrl_cfg->rate_based_fctrl;
./dtcp-utils.c:        return cfg->fctrl_cfg->rfctrl_cfg;
./dtcp-utils.c:        return cfg->fctrl_cfg->sent_bytes_th;
./dtcp-utils.c:        return cfg->fctrl_cfg->sent_bytes_percent_th;
./dtcp-utils.c:        return cfg->fctrl_cfg->sent_buffers_th;
./dtcp-utils.c:        return cfg->fctrl_cfg->rcvd_bytes_th;
./dtcp-utils.c:        return cfg->fctrl_cfg->rcvd_bytes_percent_th;
./dtcp-utils.c:        return cfg->fctrl_cfg->rcvd_buffers_th;
./dtcp-utils.c:        return cfg->fctrl_cfg->closed_window;
./dtcp-utils.c:        return cfg->fctrl_cfg->flow_control_overrun;
./dtcp-utils.c:        return cfg->fctrl_cfg->reconcile_flow_conflict;
./dtcp-utils.c:        return cfg->fctrl_cfg->receiving_flow_control;
./dtcp-utils.c:        return cfg->rxctrl_cfg->data_retransmit_max;
./dtcp-utils.c:        return cfg->rxctrl_cfg->initial_tr;
./dtcp-utils.c:        return cfg->rxctrl_cfg->retransmission_timer_expiry;
./dtcp-utils.c:        return cfg->rxctrl_cfg->sender_ack;
./dtcp-utils.c:        return cfg->rxctrl_cfg->receiving_ack_list;
./dtcp-utils.c:        return cfg->rxctrl_cfg->rcvr_ack;
./dtcp-utils.c:        return cfg->rxctrl_cfg->sending_ack;
./dtcp-utils.c:        return cfg->rxctrl_cfg->rcvr_control_ack;
./dtcp-utils.c:        return cfg->flow_ctrl;
./dtcp-utils.c:        return cfg->rtx_ctrl;
./dtcp-utils.c:        return cfg->fctrl_cfg;
./dtcp-utils.c:        return cfg->rxctrl_cfg;
./dtcp-utils.c:        return cfg->receiver_inactivity;
./dtcp-utils.c:        return cfg->sender_inactivity;
./dtcp-utils.c:        return cfg->receiver_inactivity_timer;
./dtcp-utils.c:        return cfg->sender_inactivity_timer;
./dtcp-utils.c:        return cfg->lost_control_pdu;
./dtcp-utils.c:        return cfg->rtt_estimator;
./.rnl-workarounds.o.cmd:cmd_net/rina/rnl-workarounds.o := gcc -Wp,-MD,net/rina/.rnl-workarounds.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rnl_workarounds)"  -D"KBUILD_MODNAME=KBUILD_STR(rnl_workarounds)" -c -o net/rina/.tmp_rnl-workarounds.o net/rina/rnl-workarounds.c
./.rnl-workarounds.o.cmd:source_net/rina/rnl-workarounds.o := net/rina/rnl-workarounds.c
./.rnl-workarounds.o.cmd:deps_net/rina/rnl-workarounds.o := \
./.rnl-workarounds.o.cmd:  include/linux/compiler-gcc.h \
./.rnl-workarounds.o.cmd:  include/linux/compiler-gcc4.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/int-ll64.h \
./.rnl-workarounds.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/bitsperlong.h \
./.rnl-workarounds.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.rnl-workarounds.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/ptrace.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/bitops/fls64.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/bitops/find.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/bitops/sched.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/bitops/le.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/percpu.h \
./.rnl-workarounds.o.cmd:  include/linux/percpu-defs.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/bug.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/memory_model.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/getorder.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/ioctl.h \
./.rnl-workarounds.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/atomic-long.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/param.h \
./.rnl-workarounds.o.cmd:  include/uapi/asm-generic/param.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/topology.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/early_ioremap.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/iomap.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/pci_iomap.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/kmap_types.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/fixmap.h \
./.rnl-workarounds.o.cmd:  include/linux/pageblock-flags.h \
./.rnl-workarounds.o.cmd:  include/linux/page-flags-layout.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/sections.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/delay.h \
./.rnl-workarounds.o.cmd:  include/linux/page-debug-flags.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/pgtable.h \
./.rnl-workarounds.o.cmd:  include/linux/page-flags.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/scatterlist.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./.rnl-workarounds.o.cmd:  include/linux/dma-mapping.h \
./.rnl-workarounds.o.cmd:  include/linux/dma-attrs.h \
./.rnl-workarounds.o.cmd:  include/linux/dma-direction.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./.rnl-workarounds.o.cmd:  include/linux/dma-debug.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/dma-coherent.h \
./.rnl-workarounds.o.cmd:  include/linux/dma-contiguous.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/dma-mapping-common.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/cputime.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/cputime_jiffies.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/siginfo.h \
./.rnl-workarounds.o.cmd:  include/uapi/asm-generic/siginfo.h \
./.rnl-workarounds.o.cmd:  include/asm-generic/resource.h \
./.rnl-workarounds.o.cmd:  include/uapi/asm-generic/resource.h \
./.rnl-workarounds.o.cmd:  include/linux/radix-tree.h \
./.rnl-workarounds.o.cmd:  include/linux/percpu-rwsem.h \
./.rnl-workarounds.o.cmd:  include/linux/percpu-refcount.h \
./.rnl-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./.rnl-workarounds.o.cmd:  net/rina/rnl-workarounds.h \
./.rnl-workarounds.o.cmd:net/rina/rnl-workarounds.o: $(deps_net/rina/rnl-workarounds.o)
./.rnl-workarounds.o.cmd:$(deps_net/rina/rnl-workarounds.o):
Binary file ./dtp.o matches
Binary file ./rds/rqueue.o matches
Binary file ./rds/rds.o matches
./rds/rref.c:        tmp->count = count;
./rds/rref.c:                return -1;
./rds/rref.c:                return -1;
./rds/rref.c:        return r->count++;
./rds/rref.c:                return -1;
./rds/rref.c:        return r->count--;
./rds/rref.c:                return -1;
./rds/rref.c:        return r->count;
Binary file ./rds/built-in.o matches
Binary file ./rds/rwq.o matches
./rds/.built-in.o.cmd:cmd_net/rina/rds/built-in.o :=  ld -m elf_i386   -r -o net/rina/rds/built-in.o net/rina/rds/rstr.o net/rina/rds/rmem.o net/rina/rds/rmap.o net/rina/rds/rwq.o net/rina/rds/rbmp.o net/rina/rds/rqueue.o net/rina/rds/rfifo.o net/rina/rds/rref.o net/rina/rds/rtimer.o net/rina/rds/rds.o 
./rds/.rref.o.cmd:cmd_net/rina/rds/rref.o := gcc -Wp,-MD,net/rina/rds/.rref.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rref)"  -D"KBUILD_MODNAME=KBUILD_STR(rref)" -c -o net/rina/rds/.tmp_rref.o net/rina/rds/rref.c
./rds/.rref.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rds/.rref.o.cmd:  include/asm-generic/int-ll64.h \
./rds/.rref.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rds/.rref.o.cmd:  include/asm-generic/bitsperlong.h \
./rds/.rref.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rds/.rref.o.cmd:  include/linux/compiler-gcc.h \
./rds/.rref.o.cmd:  include/linux/compiler-gcc4.h \
./rds/.rref.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rds/.rref.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rds/.rref.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rds/.rref.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rds/.rref.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rds/.rref.o.cmd:  include/asm-generic/ptrace.h \
./rds/.rref.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rds/.rref.o.cmd:  include/asm-generic/bitops/fls64.h \
./rds/.rref.o.cmd:  include/asm-generic/bitops/find.h \
./rds/.rref.o.cmd:  include/asm-generic/bitops/sched.h \
./rds/.rref.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rds/.rref.o.cmd:  include/asm-generic/bitops/le.h \
./rds/.rref.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rds/.rref.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rds/.rref.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rds/.rref.o.cmd:  include/asm-generic/bug.h \
./rds/.rref.o.cmd:  include/asm-generic/percpu.h \
./rds/.rref.o.cmd:  include/linux/percpu-defs.h \
./rds/.rref.o.cmd:  include/asm-generic/memory_model.h \
./rds/.rref.o.cmd:  include/asm-generic/getorder.h \
./rds/.rref.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rds/.rref.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rds/.rref.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rds/.rref.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rds/.rref.o.cmd:  include/asm-generic/ioctl.h \
./rds/.rref.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rds/.rref.o.cmd:  include/asm-generic/atomic-long.h \
./rds/.rref.o.cmd:  include/asm-generic/param.h \
./rds/.rref.o.cmd:  include/uapi/asm-generic/param.h \
./rds/.rref.o.cmd:  include/asm-generic/topology.h \
./rds/.rref.o.cmd:  include/asm-generic/early_ioremap.h \
./rds/.rref.o.cmd:  include/asm-generic/iomap.h \
./rds/.rref.o.cmd:  include/asm-generic/pci_iomap.h \
./rds/.rref.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rds/.rref.o.cmd:  include/asm-generic/kmap_types.h \
./rds/.rref.o.cmd:  include/asm-generic/fixmap.h \
./rds/.rref.o.cmd:  include/linux/pageblock-flags.h \
./rds/.rref.o.cmd:  include/linux/page-flags-layout.h \
./rds/.rref.o.cmd:  include/asm-generic/sections.h \
./rds/.rds.o.cmd:cmd_net/rina/rds/rds.o := gcc -Wp,-MD,net/rina/rds/.rds.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rds)"  -D"KBUILD_MODNAME=KBUILD_STR(rds)" -c -o net/rina/rds/.tmp_rds.o net/rina/rds/rds.c
./rds/.rds.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rds/.rds.o.cmd:  include/linux/compiler-gcc.h \
./rds/.rds.o.cmd:  include/linux/compiler-gcc4.h \
./rds/.rds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rds/.rds.o.cmd:  include/asm-generic/int-ll64.h \
./rds/.rds.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rds/.rds.o.cmd:  include/asm-generic/bitsperlong.h \
./rds/.rds.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rds/.rds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rds/.rds.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rds/.rds.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rds/.rds.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rds/.rds.o.cmd:  include/asm-generic/ptrace.h \
./rds/.rds.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rds/.rds.o.cmd:  include/asm-generic/bitops/fls64.h \
./rds/.rds.o.cmd:  include/asm-generic/bitops/find.h \
./rds/.rds.o.cmd:  include/asm-generic/bitops/sched.h \
./rds/.rds.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rds/.rds.o.cmd:  include/asm-generic/bitops/le.h \
./rds/.rds.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rds/.rds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rds/.rds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rds/.rds.o.cmd:  include/asm-generic/bug.h \
./rds/.rds.o.cmd:  include/asm-generic/percpu.h \
./rds/.rds.o.cmd:  include/linux/percpu-defs.h \
./rds/.rds.o.cmd:  include/asm-generic/memory_model.h \
./rds/.rds.o.cmd:  include/asm-generic/getorder.h \
./rds/.rds.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rds/.rds.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rds/.rds.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rds/.rds.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rds/.rds.o.cmd:  include/asm-generic/ioctl.h \
./rds/.rds.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rds/.rds.o.cmd:  include/asm-generic/atomic-long.h \
./rds/.rds.o.cmd:  include/asm-generic/param.h \
./rds/.rds.o.cmd:  include/uapi/asm-generic/param.h \
./rds/.rds.o.cmd:  include/asm-generic/topology.h \
./rds/.rds.o.cmd:  include/asm-generic/early_ioremap.h \
./rds/.rds.o.cmd:  include/asm-generic/iomap.h \
./rds/.rds.o.cmd:  include/asm-generic/pci_iomap.h \
./rds/.rds.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rds/.rds.o.cmd:  include/asm-generic/kmap_types.h \
./rds/.rds.o.cmd:  include/asm-generic/fixmap.h \
./rds/.rds.o.cmd:  include/linux/pageblock-flags.h \
./rds/.rds.o.cmd:  include/linux/page-flags-layout.h \
./rds/.rds.o.cmd:  include/asm-generic/sections.h \
./rds/.rtimer.o.cmd:cmd_net/rina/rds/rtimer.o := gcc -Wp,-MD,net/rina/rds/.rtimer.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rtimer)"  -D"KBUILD_MODNAME=KBUILD_STR(rtimer)" -c -o net/rina/rds/.tmp_rtimer.o net/rina/rds/rtimer.c
./rds/.rtimer.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rds/.rtimer.o.cmd:  include/asm-generic/int-ll64.h \
./rds/.rtimer.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rds/.rtimer.o.cmd:  include/asm-generic/bitsperlong.h \
./rds/.rtimer.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rds/.rtimer.o.cmd:  include/linux/compiler-gcc.h \
./rds/.rtimer.o.cmd:  include/linux/compiler-gcc4.h \
./rds/.rtimer.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rds/.rtimer.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rds/.rtimer.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rds/.rtimer.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rds/.rtimer.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rds/.rtimer.o.cmd:  include/asm-generic/ptrace.h \
./rds/.rtimer.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rds/.rtimer.o.cmd:  include/asm-generic/bitops/fls64.h \
./rds/.rtimer.o.cmd:  include/asm-generic/bitops/find.h \
./rds/.rtimer.o.cmd:  include/asm-generic/bitops/sched.h \
./rds/.rtimer.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rds/.rtimer.o.cmd:  include/asm-generic/bitops/le.h \
./rds/.rtimer.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rds/.rtimer.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rds/.rtimer.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rds/.rtimer.o.cmd:  include/asm-generic/percpu.h \
./rds/.rtimer.o.cmd:  include/linux/percpu-defs.h \
./rds/.rtimer.o.cmd:  include/asm-generic/bug.h \
./rds/.rtimer.o.cmd:  include/asm-generic/memory_model.h \
./rds/.rtimer.o.cmd:  include/asm-generic/getorder.h \
./rds/.rtimer.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rds/.rtimer.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rds/.rtimer.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rds/.rtimer.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rds/.rtimer.o.cmd:  include/asm-generic/ioctl.h \
./rds/.rtimer.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rds/.rtimer.o.cmd:  include/asm-generic/atomic-long.h \
./rds/.rtimer.o.cmd:  include/asm-generic/param.h \
./rds/.rtimer.o.cmd:  include/uapi/asm-generic/param.h \
./rds/.rtimer.o.cmd:  include/asm-generic/topology.h \
./rds/.rtimer.o.cmd:  include/asm-generic/early_ioremap.h \
./rds/.rtimer.o.cmd:  include/asm-generic/iomap.h \
./rds/.rtimer.o.cmd:  include/asm-generic/pci_iomap.h \
./rds/.rtimer.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rds/.rtimer.o.cmd:  include/asm-generic/kmap_types.h \
./rds/.rtimer.o.cmd:  include/asm-generic/fixmap.h \
./rds/.rtimer.o.cmd:  include/linux/pageblock-flags.h \
./rds/.rtimer.o.cmd:  include/linux/page-flags-layout.h \
./rds/.rtimer.o.cmd:  include/asm-generic/sections.h \
Binary file ./rds/rref.o matches
./rds/Kconfig:	int "Rate limit mem-stat dumps (in msecs)"
./rds/rwq.c:        ASSERT(item->worker); /* Ensured by post */
./rds/rwq.c:        if (item->worker(item->data)) {
./rds/rwq.c:        tmp->worker = work;
./rds/rwq.c:        tmp->data   = data;
./rds/rwq.c:                return -1;
./rds/rwq.c:                return -1;
./rds/rwq.c:                return -1;
./rds/rwq.c:                return -1;
./rds/rwq.c:                return -1;
./rds/rwq.c:                return -1;
./rds/rwq.c:                return -1;
./rds/rwq.c:                return -1;
./rds/rqueue.c:        INIT_LIST_HEAD(&q->head);
./rds/rqueue.c:        q->length = 0;
./rds/rqueue.c:                return -1;
./rds/rqueue.c:        return q->length;
./rds/rqueue.c:        entry->data = data;
./rds/rqueue.c:        INIT_LIST_HEAD(&entry->next);
./rds/rqueue.c:                return -1;
./rds/rqueue.c:        list_for_each_entry_safe(pos, nxt, &q->head, next) {
./rds/rqueue.c:                list_del(&pos->next);
./rds/rqueue.c:                dtor(pos->data);
./rds/rqueue.c:                q->length--;
./rds/rqueue.c:        ASSERT(q->length == 0);
./rds/rqueue.c:                return -1;
./rds/rqueue.c:                return -1;
./rds/rqueue.c:                LOG_ERR("Cannot head-push on a NULL queue");
./rds/rqueue.c:                return -1;
./rds/rqueue.c:                return -1;
./rds/rqueue.c:        list_add(&entry->next, &q->head);
./rds/rqueue.c:        q->length++;
./rds/rqueue.c:        LOG_DBG("Entry %pK head-pushed into queue %pK (length = %zd)",
./rds/rqueue.c:                entry, q, q->length);
./rds/rqueue.c:                LOG_ERR("Cannot head-pop from a NULL queue");
./rds/rqueue.c:        if (list_empty(&q->head)) {
./rds/rqueue.c:                LOG_WARN("queue %pK is empty, can't head-pop", q);
./rds/rqueue.c:        ASSERT(q->length > 0);
./rds/rqueue.c:        entry = list_first_entry(&q->head, struct rqueue_entry, next);
./rds/rqueue.c:        data = entry->data;
./rds/rqueue.c:        list_del(&entry->next);
./rds/rqueue.c:        q->length--;
./rds/rqueue.c:        LOG_DBG("Entry %pK head-popped from queue %pK (length = %zd)",
./rds/rqueue.c:                entry, q, q->length);
./rds/rqueue.c:                LOG_ERR("Cannot tail-push on a NULL queue");
./rds/rqueue.c:                return -1;
./rds/rqueue.c:                return -1;
./rds/rqueue.c:        list_add_tail(&entry->next, &q->head);
./rds/rqueue.c:        q->length++;
./rds/rqueue.c:        LOG_DBG("Entry %pK tail-pushed into queue %pK (length = %zd)",
./rds/rqueue.c:                entry, q, q->length);
./rds/rqueue.c:                LOG_ERR("Cannot tail-pop from a NULL queue");
./rds/rqueue.c:        if (list_empty(&q->head)) {
./rds/rqueue.c:                LOG_WARN("queue %pK is empty, can't tail-pop", q);
./rds/rqueue.c:        ASSERT(q->length > 0);
./rds/rqueue.c:        list_move_tail(&q->head, h);
./rds/rqueue.c:        q->length--;
./rds/rqueue.c:        LOG_DBG("Entry %pK tail-popped from queue %pK (length = %zd)",
./rds/rqueue.c:                entry, q, q->length);
./rds/rqueue.c:        data = entry->data;
./rds/rqueue.c:        return list_empty(&q->head) ? true : false;
./rds/.rfifo.o.cmd:cmd_net/rina/rds/rfifo.o := gcc -Wp,-MD,net/rina/rds/.rfifo.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rfifo)"  -D"KBUILD_MODNAME=KBUILD_STR(rfifo)" -c -o net/rina/rds/.tmp_rfifo.o net/rina/rds/rfifo.c
./rds/.rfifo.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rds/.rfifo.o.cmd:  include/asm-generic/int-ll64.h \
./rds/.rfifo.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rds/.rfifo.o.cmd:  include/asm-generic/bitsperlong.h \
./rds/.rfifo.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rds/.rfifo.o.cmd:  include/linux/compiler-gcc.h \
./rds/.rfifo.o.cmd:  include/linux/compiler-gcc4.h \
./rds/.rfifo.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rds/.rfifo.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rds/.rfifo.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rds/.rfifo.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rds/.rfifo.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rds/.rfifo.o.cmd:  include/asm-generic/ptrace.h \
./rds/.rfifo.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rds/.rfifo.o.cmd:  include/asm-generic/bitops/fls64.h \
./rds/.rfifo.o.cmd:  include/asm-generic/bitops/find.h \
./rds/.rfifo.o.cmd:  include/asm-generic/bitops/sched.h \
./rds/.rfifo.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rds/.rfifo.o.cmd:  include/asm-generic/bitops/le.h \
./rds/.rfifo.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rds/.rfifo.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rds/.rfifo.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rds/.rfifo.o.cmd:  include/asm-generic/bug.h \
./rds/.rfifo.o.cmd:  include/asm-generic/percpu.h \
./rds/.rfifo.o.cmd:  include/linux/percpu-defs.h \
./rds/.rfifo.o.cmd:  include/asm-generic/memory_model.h \
./rds/.rfifo.o.cmd:  include/asm-generic/getorder.h \
./rds/.rfifo.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rds/.rfifo.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rds/.rfifo.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rds/.rfifo.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rds/.rfifo.o.cmd:  include/asm-generic/ioctl.h \
./rds/.rfifo.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rds/.rfifo.o.cmd:  include/asm-generic/atomic-long.h \
./rds/.rfifo.o.cmd:  include/asm-generic/param.h \
./rds/.rfifo.o.cmd:  include/uapi/asm-generic/param.h \
./rds/.rfifo.o.cmd:  include/asm-generic/topology.h \
./rds/.rfifo.o.cmd:  include/asm-generic/early_ioremap.h \
./rds/.rfifo.o.cmd:  include/asm-generic/iomap.h \
./rds/.rfifo.o.cmd:  include/asm-generic/pci_iomap.h \
./rds/.rfifo.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rds/.rfifo.o.cmd:  include/asm-generic/kmap_types.h \
./rds/.rfifo.o.cmd:  include/asm-generic/fixmap.h \
./rds/.rfifo.o.cmd:  include/linux/pageblock-flags.h \
./rds/.rfifo.o.cmd:  include/linux/page-flags-layout.h \
./rds/.rfifo.o.cmd:  include/asm-generic/sections.h \
./rds/.rwq.o.cmd:cmd_net/rina/rds/rwq.o := gcc -Wp,-MD,net/rina/rds/.rwq.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rwq)"  -D"KBUILD_MODNAME=KBUILD_STR(rwq)" -c -o net/rina/rds/.tmp_rwq.o net/rina/rds/rwq.c
./rds/.rwq.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rds/.rwq.o.cmd:  include/asm-generic/int-ll64.h \
./rds/.rwq.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rds/.rwq.o.cmd:  include/asm-generic/bitsperlong.h \
./rds/.rwq.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rds/.rwq.o.cmd:  include/linux/compiler-gcc.h \
./rds/.rwq.o.cmd:  include/linux/compiler-gcc4.h \
./rds/.rwq.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rds/.rwq.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rds/.rwq.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rds/.rwq.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rds/.rwq.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rds/.rwq.o.cmd:  include/asm-generic/ptrace.h \
./rds/.rwq.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rds/.rwq.o.cmd:  include/asm-generic/bitops/fls64.h \
./rds/.rwq.o.cmd:  include/asm-generic/bitops/find.h \
./rds/.rwq.o.cmd:  include/asm-generic/bitops/sched.h \
./rds/.rwq.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rds/.rwq.o.cmd:  include/asm-generic/bitops/le.h \
./rds/.rwq.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rds/.rwq.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rds/.rwq.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rds/.rwq.o.cmd:  include/asm-generic/bug.h \
./rds/.rwq.o.cmd:  include/asm-generic/percpu.h \
./rds/.rwq.o.cmd:  include/linux/percpu-defs.h \
./rds/.rwq.o.cmd:  include/asm-generic/memory_model.h \
./rds/.rwq.o.cmd:  include/asm-generic/getorder.h \
./rds/.rwq.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rds/.rwq.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rds/.rwq.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rds/.rwq.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rds/.rwq.o.cmd:  include/asm-generic/ioctl.h \
./rds/.rwq.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rds/.rwq.o.cmd:  include/asm-generic/atomic-long.h \
./rds/.rwq.o.cmd:  include/asm-generic/param.h \
./rds/.rwq.o.cmd:  include/uapi/asm-generic/param.h \
./rds/.rwq.o.cmd:  include/asm-generic/topology.h \
./rds/.rwq.o.cmd:  include/asm-generic/early_ioremap.h \
./rds/.rwq.o.cmd:  include/asm-generic/iomap.h \
./rds/.rwq.o.cmd:  include/asm-generic/pci_iomap.h \
./rds/.rwq.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rds/.rwq.o.cmd:  include/asm-generic/kmap_types.h \
./rds/.rwq.o.cmd:  include/asm-generic/fixmap.h \
./rds/.rwq.o.cmd:  include/linux/pageblock-flags.h \
./rds/.rwq.o.cmd:  include/linux/page-flags-layout.h \
./rds/.rwq.o.cmd:  include/asm-generic/sections.h \
Binary file ./rds/.rtimer.c.swp matches
./rds/rfifo.c:        f->q = rqueue_create_gfp(flags);
./rds/rfifo.c:        if (!f->q) {
./rds/rfifo.c:                return -1;
./rds/rfifo.c:                return -1;
./rds/rfifo.c:        if (rqueue_destroy(f->q, dtor))
./rds/rfifo.c:                return -1;
./rds/rfifo.c:                return -1;
./rds/rfifo.c:        return rqueue_tail_push(f->q, e);
./rds/rfifo.c:                return -1;
./rds/rfifo.c:        return rqueue_tail_push_ni(f->q, e);
./rds/rfifo.c:        return rqueue_head_pop(f->q);
./rds/rfifo.c:        return rqueue_is_empty(f->q);
./rds/rstr.c:                return -1;
./rds/rstr.c:                                "in kernel-space");
./rds/rstr.c:                        return -1;
./rds/.rqueue.o.cmd:cmd_net/rina/rds/rqueue.o := gcc -Wp,-MD,net/rina/rds/.rqueue.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rqueue)"  -D"KBUILD_MODNAME=KBUILD_STR(rqueue)" -c -o net/rina/rds/.tmp_rqueue.o net/rina/rds/rqueue.c
./rds/.rqueue.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rds/.rqueue.o.cmd:  include/asm-generic/int-ll64.h \
./rds/.rqueue.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rds/.rqueue.o.cmd:  include/asm-generic/bitsperlong.h \
./rds/.rqueue.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rds/.rqueue.o.cmd:  include/linux/compiler-gcc.h \
./rds/.rqueue.o.cmd:  include/linux/compiler-gcc4.h \
./rds/.rqueue.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rds/.rqueue.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rds/.rqueue.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rds/.rqueue.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rds/.rqueue.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rds/.rqueue.o.cmd:  include/asm-generic/ptrace.h \
./rds/.rqueue.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rds/.rqueue.o.cmd:  include/asm-generic/bitops/fls64.h \
./rds/.rqueue.o.cmd:  include/asm-generic/bitops/find.h \
./rds/.rqueue.o.cmd:  include/asm-generic/bitops/sched.h \
./rds/.rqueue.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rds/.rqueue.o.cmd:  include/asm-generic/bitops/le.h \
./rds/.rqueue.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rds/.rqueue.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rds/.rqueue.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rds/.rqueue.o.cmd:  include/asm-generic/bug.h \
./rds/.rqueue.o.cmd:  include/asm-generic/percpu.h \
./rds/.rqueue.o.cmd:  include/linux/percpu-defs.h \
./rds/.rqueue.o.cmd:  include/asm-generic/memory_model.h \
./rds/.rqueue.o.cmd:  include/asm-generic/getorder.h \
./rds/.rqueue.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rds/.rqueue.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rds/.rqueue.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rds/.rqueue.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rds/.rqueue.o.cmd:  include/asm-generic/ioctl.h \
./rds/.rqueue.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rds/.rqueue.o.cmd:  include/asm-generic/atomic-long.h \
./rds/.rqueue.o.cmd:  include/asm-generic/param.h \
./rds/.rqueue.o.cmd:  include/uapi/asm-generic/param.h \
./rds/.rqueue.o.cmd:  include/asm-generic/topology.h \
./rds/.rqueue.o.cmd:  include/asm-generic/early_ioremap.h \
./rds/.rqueue.o.cmd:  include/asm-generic/iomap.h \
./rds/.rqueue.o.cmd:  include/asm-generic/pci_iomap.h \
./rds/.rqueue.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rds/.rqueue.o.cmd:  include/asm-generic/kmap_types.h \
./rds/.rqueue.o.cmd:  include/asm-generic/fixmap.h \
./rds/.rqueue.o.cmd:  include/linux/pageblock-flags.h \
./rds/.rqueue.o.cmd:  include/linux/page-flags-layout.h \
./rds/.rqueue.o.cmd:  include/asm-generic/sections.h \
Binary file ./rds/rmem.o matches
./rds/rtimer.c:        tmp->function = function;
./rds/rtimer.c:        tmp->data     = data;
./rds/rtimer.c:        init_timer(&tmp->tl);
./rds/rtimer.c:        return timer_pending(&timer->tl) ? true : false;
./rds/rtimer.c:        timer->tl.function = (void (*)(unsigned long)) timer->function;
./rds/rtimer.c:        timer->tl.data     = (unsigned long)           timer->data;
./rds/rtimer.c:        timer->tl.expires  = jiffies + (millisecs * HZ) / 1000;
./rds/rtimer.c:        add_timer(&timer->tl);
./rds/rtimer.c:                (void *) timer->tl.function,
./rds/rtimer.c:                (void *) timer->tl.data,
./rds/rtimer.c:                timer->tl.expires);
./rds/rtimer.c:                return -1;
./rds/rtimer.c:        del_timer(&timer->tl);
./rds/rtimer.c:                return -1;
./rds/rtimer.c:                return -1;
./rds/rtimer.c:                return -1;
./rds/rtimer.c:                return -1;
./rds/rtimer.c:                return -1;
./rds/rtimer.c:        LOG_DBG("Timer - step 0");
./rds/rtimer.c:        LOG_DBG("Timer - step 1");
./rds/rtimer.c:        LOG_DBG("Timer - step 2");
./rds/rtimer.c:        LOG_DBG("Timer - step 3");
./rds/rtimer.c:        LOG_DBG("Timer - step 4");
./rds/rtimer.c:        LOG_DBG("Timer - step 5");
./rds/rtimer.c:        LOG_DBG("Timer - OK");
./rds/rmem.c:                ((uint8_t *) ptr - sizeof(struct memblock_header));
./rds/rmem.c:{ mb_filler_init(m->filler, ARRAY_SIZE(m->filler)); }
./rds/rmem.c:{ return mb_is_filler_ok(m->filler, ARRAY_SIZE(m->filler)); }
./rds/rmem.c:{ mb_filler_init(m->filler, ARRAY_SIZE(m->filler)); }
./rds/rmem.c:{ return mb_is_filler_ok(m->filler, ARRAY_SIZE(m->filler)); }
./rds/rmem.c:        LOG_DBG("Poisoning memory %pK-%pK (%zd bytes)", p, p + size - 1, size);
./rds/rmem.c:        size--;
./rds/rmem.c:                bin = BLOCKS_COUNT - 1;
./rds/rmem.c:        LOG_DBG("Tampering block at %pK, size %zd, real-size %zd",
./rds/rmem.c:        header->inner_length = size;
./rds/rmem.c:                ((uint8_t *) ptr + sizeof(*header) + header->inner_length);
./rds/rmem.c:        poison(ptr, header->inner_length);
./rds/.rmem.o.cmd:cmd_net/rina/rds/rmem.o := gcc -Wp,-MD,net/rina/rds/.rmem.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rmem)"  -D"KBUILD_MODNAME=KBUILD_STR(rmem)" -c -o net/rina/rds/.tmp_rmem.o net/rina/rds/rmem.c
./rds/.rmem.o.cmd:  include/linux/compiler-gcc.h \
./rds/.rmem.o.cmd:  include/linux/compiler-gcc4.h \
./rds/.rmem.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rds/.rmem.o.cmd:  include/asm-generic/int-ll64.h \
./rds/.rmem.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rds/.rmem.o.cmd:  include/asm-generic/bitsperlong.h \
./rds/.rmem.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rds/.rmem.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rds/.rmem.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rds/.rmem.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rds/.rmem.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rds/.rmem.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rds/.rmem.o.cmd:  include/asm-generic/ptrace.h \
./rds/.rmem.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rds/.rmem.o.cmd:  include/asm-generic/bitops/fls64.h \
./rds/.rmem.o.cmd:  include/asm-generic/bitops/find.h \
./rds/.rmem.o.cmd:  include/asm-generic/bitops/sched.h \
./rds/.rmem.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rds/.rmem.o.cmd:  include/asm-generic/bitops/le.h \
./rds/.rmem.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rds/.rmem.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rds/.rmem.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rds/.rmem.o.cmd:  include/asm-generic/percpu.h \
./rds/.rmem.o.cmd:  include/linux/percpu-defs.h \
./rds/.rmem.o.cmd:  include/asm-generic/bug.h \
./rds/.rmem.o.cmd:  include/asm-generic/memory_model.h \
./rds/.rmem.o.cmd:  include/asm-generic/getorder.h \
./rds/.rmem.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rds/.rmem.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rds/.rmem.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rds/.rmem.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rds/.rmem.o.cmd:  include/asm-generic/ioctl.h \
./rds/.rmem.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rds/.rmem.o.cmd:  include/asm-generic/atomic-long.h \
./rds/.rmem.o.cmd:  include/linux/pageblock-flags.h \
./rds/.rmem.o.cmd:  include/linux/page-flags-layout.h \
./rds/.rmem.o.cmd:  include/asm-generic/param.h \
./rds/.rmem.o.cmd:  include/uapi/asm-generic/param.h \
./rds/.rmem.o.cmd:  include/asm-generic/topology.h \
./rds/.rmem.o.cmd:  include/asm-generic/early_ioremap.h \
./rds/.rmem.o.cmd:  include/asm-generic/iomap.h \
./rds/.rmem.o.cmd:  include/asm-generic/pci_iomap.h \
./rds/.rmem.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rds/.rmem.o.cmd:  include/asm-generic/kmap_types.h \
./rds/.rmem.o.cmd:  include/asm-generic/fixmap.h \
./rds/.rmem.o.cmd:  include/asm-generic/sections.h \
Binary file ./rds/rmap.o matches
Binary file ./rds/rfifo.o matches
./rds/.rmap.o.cmd:cmd_net/rina/rds/rmap.o := gcc -Wp,-MD,net/rina/rds/.rmap.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rmap)"  -D"KBUILD_MODNAME=KBUILD_STR(rmap)" -c -o net/rina/rds/.tmp_rmap.o net/rina/rds/rmap.c
./rds/.rmap.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rds/.rmap.o.cmd:  include/asm-generic/int-ll64.h \
./rds/.rmap.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rds/.rmap.o.cmd:  include/asm-generic/bitsperlong.h \
./rds/.rmap.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rds/.rmap.o.cmd:  include/linux/compiler-gcc.h \
./rds/.rmap.o.cmd:  include/linux/compiler-gcc4.h \
./rds/.rmap.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rds/.rmap.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rds/.rmap.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rds/.rmap.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rds/.rmap.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rds/.rmap.o.cmd:  include/asm-generic/ptrace.h \
./rds/.rmap.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rds/.rmap.o.cmd:  include/asm-generic/bitops/fls64.h \
./rds/.rmap.o.cmd:  include/asm-generic/bitops/find.h \
./rds/.rmap.o.cmd:  include/asm-generic/bitops/sched.h \
./rds/.rmap.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rds/.rmap.o.cmd:  include/asm-generic/bitops/le.h \
./rds/.rmap.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rds/.rmap.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rds/.rmap.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rds/.rmap.o.cmd:  include/asm-generic/percpu.h \
./rds/.rmap.o.cmd:  include/linux/percpu-defs.h \
./rds/.rmap.o.cmd:  include/asm-generic/bug.h \
./rds/.rmap.o.cmd:  include/asm-generic/memory_model.h \
./rds/.rmap.o.cmd:  include/asm-generic/getorder.h \
./rds/.rmap.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rds/.rmap.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rds/.rmap.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rds/.rmap.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rds/.rmap.o.cmd:  include/asm-generic/ioctl.h \
./rds/.rmap.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rds/.rmap.o.cmd:  include/asm-generic/atomic-long.h \
./rds/.rmap.o.cmd:  include/asm-generic/param.h \
./rds/.rmap.o.cmd:  include/uapi/asm-generic/param.h \
./rds/.rmap.o.cmd:  include/asm-generic/topology.h \
./rds/.rmap.o.cmd:  include/asm-generic/early_ioremap.h \
./rds/.rmap.o.cmd:  include/asm-generic/iomap.h \
./rds/.rmap.o.cmd:  include/asm-generic/pci_iomap.h \
./rds/.rmap.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rds/.rmap.o.cmd:  include/asm-generic/kmap_types.h \
./rds/.rmap.o.cmd:  include/asm-generic/fixmap.h \
./rds/.rmap.o.cmd:  include/linux/pageblock-flags.h \
./rds/.rmap.o.cmd:  include/linux/page-flags-layout.h \
./rds/.rmap.o.cmd:  include/asm-generic/sections.h \
./rds/rbmp.c:        tmp->size   = bits;
./rds/rbmp.c:        tmp->offset = offset;
./rds/rbmp.c:        bitmap_zero(tmp->bitmap, BITS_IN_BITMAP);
./rds/rbmp.c:                return -1;
./rds/rbmp.c:        return b->offset - 1;
./rds/rbmp.c:        id = (ssize_t) bitmap_find_next_zero_area(b->bitmap,
./rds/rbmp.c:        bitmap_set(b->bitmap, id, 1);
./rds/rbmp.c:        return id + b->offset;
./rds/rbmp.c:        if ((id < b->offset) || (id > (b->offset + b->size)))
./rds/rbmp.c:                return -1;
./rds/rbmp.c:                return -1;
./rds/rbmp.c:        rid = id - b->offset;
./rds/rbmp.c:        bitmap_clear(b->bitmap, id, 1);
./rds/.rbmp.o.cmd:cmd_net/rina/rds/rbmp.o := gcc -Wp,-MD,net/rina/rds/.rbmp.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rbmp)"  -D"KBUILD_MODNAME=KBUILD_STR(rbmp)" -c -o net/rina/rds/.tmp_rbmp.o net/rina/rds/rbmp.c
./rds/.rbmp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rds/.rbmp.o.cmd:  include/asm-generic/int-ll64.h \
./rds/.rbmp.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rds/.rbmp.o.cmd:  include/asm-generic/bitsperlong.h \
./rds/.rbmp.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rds/.rbmp.o.cmd:  include/linux/compiler-gcc.h \
./rds/.rbmp.o.cmd:  include/linux/compiler-gcc4.h \
./rds/.rbmp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rds/.rbmp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rds/.rbmp.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rds/.rbmp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rds/.rbmp.o.cmd:  include/asm-generic/ptrace.h \
./rds/.rbmp.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rds/.rbmp.o.cmd:  include/asm-generic/bitops/fls64.h \
./rds/.rbmp.o.cmd:  include/asm-generic/bitops/find.h \
./rds/.rbmp.o.cmd:  include/asm-generic/bitops/sched.h \
./rds/.rbmp.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rds/.rbmp.o.cmd:  include/asm-generic/bitops/le.h \
./rds/.rbmp.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rds/.rbmp.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rds/.rbmp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rds/.rbmp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rds/.rbmp.o.cmd:  include/asm-generic/bug.h \
./rds/.rbmp.o.cmd:  include/asm-generic/percpu.h \
./rds/.rbmp.o.cmd:  include/linux/percpu-defs.h \
./rds/.rbmp.o.cmd:  include/asm-generic/memory_model.h \
./rds/.rbmp.o.cmd:  include/asm-generic/getorder.h \
./rds/.rbmp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rds/.rbmp.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rds/.rbmp.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rds/.rbmp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rds/.rbmp.o.cmd:  include/asm-generic/ioctl.h \
./rds/.rbmp.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rds/.rbmp.o.cmd:  include/asm-generic/atomic-long.h \
./rds/.rbmp.o.cmd:  include/asm-generic/param.h \
./rds/.rbmp.o.cmd:  include/uapi/asm-generic/param.h \
./rds/.rbmp.o.cmd:  include/asm-generic/topology.h \
./rds/.rbmp.o.cmd:  include/asm-generic/early_ioremap.h \
./rds/.rbmp.o.cmd:  include/asm-generic/iomap.h \
./rds/.rbmp.o.cmd:  include/asm-generic/pci_iomap.h \
./rds/.rbmp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rds/.rbmp.o.cmd:  include/asm-generic/kmap_types.h \
./rds/.rbmp.o.cmd:  include/asm-generic/fixmap.h \
./rds/.rbmp.o.cmd:  include/linux/pageblock-flags.h \
./rds/.rbmp.o.cmd:  include/linux/page-flags-layout.h \
./rds/.rbmp.o.cmd:  include/asm-generic/sections.h \
./rds/Makefile:ccflags-y += -I$(srctree)/net/rina
./rds/Makefile:ccflags-y += -Wtype-limits
./rds/Makefile:obj-$(CONFIG_RINA) +=				\
Binary file ./rds/rbmp.o matches
Binary file ./rds/rstr.o matches
./rds/.rstr.o.cmd:cmd_net/rina/rds/rstr.o := gcc -Wp,-MD,net/rina/rds/.rstr.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rstr)"  -D"KBUILD_MODNAME=KBUILD_STR(rstr)" -c -o net/rina/rds/.tmp_rstr.o net/rina/rds/rstr.c
./rds/.rstr.o.cmd:  include/linux/compiler-gcc.h \
./rds/.rstr.o.cmd:  include/linux/compiler-gcc4.h \
./rds/.rstr.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rds/.rstr.o.cmd:  include/asm-generic/int-ll64.h \
./rds/.rstr.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rds/.rstr.o.cmd:  include/asm-generic/bitsperlong.h \
./rds/.rstr.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rds/.rstr.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rds/.rstr.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rds/.rstr.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rds/.rstr.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rds/.rstr.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rds/.rstr.o.cmd:  include/asm-generic/ptrace.h \
./rds/.rstr.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rds/.rstr.o.cmd:  include/asm-generic/bitops/fls64.h \
./rds/.rstr.o.cmd:  include/asm-generic/bitops/find.h \
./rds/.rstr.o.cmd:  include/asm-generic/bitops/sched.h \
./rds/.rstr.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rds/.rstr.o.cmd:  include/asm-generic/bitops/le.h \
./rds/.rstr.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rds/.rstr.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rds/.rstr.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rds/.rstr.o.cmd:  include/asm-generic/percpu.h \
./rds/.rstr.o.cmd:  include/linux/percpu-defs.h \
./rds/.rstr.o.cmd:  include/asm-generic/bug.h \
./rds/.rstr.o.cmd:  include/asm-generic/memory_model.h \
./rds/.rstr.o.cmd:  include/asm-generic/getorder.h \
./rds/.rstr.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rds/.rstr.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rds/.rstr.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rds/.rstr.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rds/.rstr.o.cmd:  include/asm-generic/ioctl.h \
./rds/.rstr.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rds/.rstr.o.cmd:  include/asm-generic/atomic-long.h \
./rds/.rstr.o.cmd:  include/asm-generic/param.h \
./rds/.rstr.o.cmd:  include/uapi/asm-generic/param.h \
./rds/.rstr.o.cmd:  include/asm-generic/topology.h \
./rds/.rstr.o.cmd:  include/asm-generic/early_ioremap.h \
./rds/.rstr.o.cmd:  include/asm-generic/iomap.h \
./rds/.rstr.o.cmd:  include/asm-generic/pci_iomap.h \
./rds/.rstr.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rds/.rstr.o.cmd:  include/asm-generic/kmap_types.h \
./rds/.rstr.o.cmd:  include/asm-generic/fixmap.h \
./rds/.rstr.o.cmd:  include/linux/pageblock-flags.h \
./rds/.rstr.o.cmd:  include/linux/page-flags-layout.h \
./rds/.rstr.o.cmd:  include/asm-generic/sections.h \
./rds/rwq.h: * RWQ allows to post multiple times the same work-item (worker and data)
Binary file ./rds/rtimer.o matches
./rds/rmap.c:        hash_init(tmp->table);
./rds/rmap.c:                return -1;
./rds/rmap.c:                return -1;
./rds/rmap.c:        hash_for_each_safe(map->table, bucket, tmp, entry, hlist) {
./rds/rmap.c:        return hash_empty(map->table) ? true : false;
./rds/rmap.c:                return -1;
./rds/rmap.c:                return -1;
./rds/rmap.c:        hash_add(map->table, &entry->hlist, key);
./rds/rmap.c:                LOG_ERR("Cannot look-up in a empty map");
./rds/rmap.c:        head = &map->table[rmap_hash(map->table, key)];
./rds/rmap.c:                if (entry->key == key)
./rds/rmap.c:                return -1;
./rds/rmap.c:                return -1;
./rds/rmap.c:        hash_del(&entry->hlist);
./rds/rmap.c:        hash_for_each_safe(map->table, bucket, tmp, entry, hlist)
./rds/rmap.c:                return -1;
./rds/rmap.c:        entry->value = value;
./rds/rmap.c:        tmp->key   = key;
./rds/rmap.c:        tmp->value = value;
./rds/rmap.c:        INIT_HLIST_NODE(&tmp->hlist);
./rds/rmap.c:        return entry->value;
./rds/rmap.c:                return -1;
Binary file ./default.o matches
./.common.o.cmd:cmd_net/rina/common.o := gcc -Wp,-MD,net/rina/.common.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(common)"  -D"KBUILD_MODNAME=KBUILD_STR(common)" -c -o net/rina/.tmp_common.o net/rina/common.c
./.common.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.common.o.cmd:  include/asm-generic/int-ll64.h \
./.common.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.common.o.cmd:  include/asm-generic/bitsperlong.h \
./.common.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.common.o.cmd:  include/linux/compiler-gcc.h \
./.common.o.cmd:  include/linux/compiler-gcc4.h \
./.common.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.common.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.common.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.common.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.common.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.common.o.cmd:  include/asm-generic/ptrace.h \
./.common.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.common.o.cmd:  include/asm-generic/bitops/fls64.h \
./.common.o.cmd:  include/asm-generic/bitops/find.h \
./.common.o.cmd:  include/asm-generic/bitops/sched.h \
./.common.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.common.o.cmd:  include/asm-generic/bitops/le.h \
./.common.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.common.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.common.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.common.o.cmd:  include/asm-generic/percpu.h \
./.common.o.cmd:  include/linux/percpu-defs.h \
./.common.o.cmd:  include/asm-generic/bug.h \
./.common.o.cmd:  include/asm-generic/memory_model.h \
./.common.o.cmd:  include/asm-generic/getorder.h \
./.common.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.common.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.common.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.common.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.common.o.cmd:  include/asm-generic/ioctl.h \
./.common.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.common.o.cmd:  include/asm-generic/atomic-long.h \
./dt-utils.c:#define RINA_PREFIX "dt-utils"
./dt-utils.c:#include "dt-utils.h"
./dt-utils.c:#include "dtcp-utils.h"
./dt-utils.c:        tmp->q = rqueue_create();
./dt-utils.c:        if (!tmp->q) {
./dt-utils.c:        spin_lock_init(&tmp->lock);
./dt-utils.c:        tmp->q = rqueue_create_ni();
./dt-utils.c:        if (!tmp->q) {
./dt-utils.c:        spin_lock_init(&tmp->lock);
./dt-utils.c:                return -1;
./dt-utils.c:        ASSERT(queue->q);
./dt-utils.c:        if (rqueue_destroy(queue->q,
./dt-utils.c:                return -1;
./dt-utils.c:                return -1;
./dt-utils.c:                return -1;
./dt-utils.c:        spin_lock(&queue->lock);
./dt-utils.c:        if (rqueue_tail_push_ni(queue->q, pdu)) {
./dt-utils.c:                spin_unlock(&queue->lock);
./dt-utils.c:                return -1;
./dt-utils.c:        spin_unlock(&queue->lock);
./dt-utils.c:        spin_lock(&queue->lock);
./dt-utils.c:        tmp = (struct pdu *) rqueue_head_pop(queue->q);
./dt-utils.c:        spin_unlock(&queue->lock);
./dt-utils.c:        spin_lock(&queue->lock);
./dt-utils.c:        ret = rqueue_is_empty(queue->q);
./dt-utils.c:        spin_unlock(&queue->lock);
./dt-utils.c:                return -1;
./dt-utils.c:        spin_lock(&queue->lock);
./dt-utils.c:        tmp = rqueue_length(queue->q);
./dt-utils.c:        spin_unlock(&queue->lock);
./dt-utils.c:        tmp->pdu        = pdu;
./dt-utils.c:        tmp->time_stamp = jiffies;
./dt-utils.c:        tmp->retries    = 1;
./dt-utils.c:        INIT_LIST_HEAD(&tmp->next);
./dt-utils.c:        INIT_LIST_HEAD(&tmp->head);
./dt-utils.c:        INIT_LIST_HEAD(&tmp->head);
./dt-utils.c:                return -1;
./dt-utils.c:        pdu_destroy(entry->pdu);
./dt-utils.c:        list_for_each_entry_safe(cur, n, &q->head, next) {
./dt-utils.c:                if (pci_sequence_number_get(pdu_pci_get_rw((cur->pdu))) <=
./dt-utils.c:                        list_del(&cur->next);
./dt-utils.c:        list_for_each_entry_safe_reverse(cur, p, &q->head, next) {
./dt-utils.c:                if (pci_sequence_number_get(pdu_pci_get_rw((cur->pdu))) >
./dt-utils.c:                        cur->retries++;
./dt-utils.c:                        if (cur->retries >= data_rtx_max) {
./dt-utils.c:                        tmp = pdu_dup_ni(cur->pdu);
./dt-utils.c:                return -1;
./dt-utils.c:        list_for_each_entry_safe(cur, n, &q->head, next) {
./dt-utils.c:                return -1;
./dt-utils.c:                return -1;
./dt-utils.c:                return -1;
./dt-utils.c:        if (list_empty(&q->head)) {
./dt-utils.c:                list_add(&tmp->next, &q->head);
./dt-utils.c:        last = list_last_entry(&q->head, struct rtxq_entry, next);
./dt-utils.c:                return -1;
./dt-utils.c:        pci  = pdu_pci_get_ro(last->pdu);
./dt-utils.c:                return -1;
./dt-utils.c:                list_add_tail(&tmp->next, &q->head);
./dt-utils.c:        list_for_each_entry(cur, &q->head, next) {
./dt-utils.c:                pci = pdu_pci_get_ro(cur->pdu);
./dt-utils.c:                        return -1;
./dt-utils.c:                        list_add(&tmp->next, &cur->next);
./dt-utils.c:                return -1;
./dt-utils.c:        list_for_each_entry_safe(cur, n, &q->head, next) {
./dt-utils.c:                pci = pdu_pci_get_ro(cur->pdu);
./dt-utils.c:                list_del(&cur->next);
./dt-utils.c:        list_for_each_entry_safe(cur, n, &q->head, next) {
./dt-utils.c:                if (cur->time_stamp < tr) {
./dt-utils.c:                        cur->retries++;
./dt-utils.c:                        if (cur->retries >= data_rtx_max) {
./dt-utils.c:                                     pci_destination(pdu_pci_get_ro(cur->pdu)),
./dt-utils.c:                                     pci_qos_id(pdu_pci_get_ro(cur->pdu)),
./dt-utils.c:                                     cur->pdu)) {
./dt-utils.c:        dtcp_cfg = dtcp_config_get(dt_dtcp(q->parent));
./dt-utils.c:        if (rtxqueue_rtx(q->queue,
./dt-utils.c:                         dt_sv_tr(q->parent),
./dt-utils.c:                         q->rmt,
./dt-utils.c:        rtimer_restart(q->r_timer, dt_sv_tr(q->parent));
./dt-utils.c:                return -1;
./dt-utils.c:        if (q->r_timer && rtimer_destroy(q->r_timer))
./dt-utils.c:                LOG_ERR("Problems destroying timer for RTXQ %pK", q->r_timer);
./dt-utils.c:        if (q->queue  && rtxqueue_destroy(q->queue))
./dt-utils.c:                LOG_ERR("Problems destroying queue for RTXQ %pK", q->queue);
./dt-utils.c:        tmp->r_timer = rtimer_create(Rtimer_handler, tmp);
./dt-utils.c:        if (!tmp->r_timer) {
./dt-utils.c:        tmp->queue = rtxqueue_create();
./dt-utils.c:        if (!tmp->queue) {
./dt-utils.c:        tmp->parent = dt;
./dt-utils.c:        tmp->rmt    = rmt;
./dt-utils.c:        spin_lock_init(&tmp->lock);
./dt-utils.c:        tmp->r_timer = rtimer_create_ni(Rtimer_handler, tmp);
./dt-utils.c:        if (!tmp->r_timer) {
./dt-utils.c:        tmp->queue = rtxqueue_create_ni();
./dt-utils.c:        if (!tmp->queue) {
./dt-utils.c:        tmp->parent = dt;
./dt-utils.c:        tmp->rmt    = rmt;
./dt-utils.c:        spin_lock_init(&tmp->lock);
./dt-utils.c:                return -1;
./dt-utils.c:        spin_lock(&q->lock);
./dt-utils.c:        if (!rtimer_is_pending(q->r_timer))
./dt-utils.c:                rtimer_restart(q->r_timer, dt_sv_tr(q->parent));
./dt-utils.c:        rtxqueue_push(q->queue, pdu);
./dt-utils.c:        spin_unlock(&q->lock);
./dt-utils.c:                return -1;
./dt-utils.c:        spin_lock(&q->lock);
./dt-utils.c:        rtimer_stop(q->r_timer);
./dt-utils.c:        rtxqueue_drop(q->queue, from, to);
./dt-utils.c:        spin_unlock(&q->lock);
./dt-utils.c:                return -1;
./dt-utils.c:        spin_lock(&q->lock);
./dt-utils.c:        entries_ack(q->queue, seq_num);
./dt-utils.c:        if (rtimer_restart(q->r_timer, tr)) {
./dt-utils.c:                spin_unlock(&q->lock);
./dt-utils.c:                return -1;
./dt-utils.c:        spin_unlock(&q->lock);
./dt-utils.c:                return -1;
./dt-utils.c:        dtcp_cfg = dtcp_config_get(dt_dtcp(q->parent));
./dt-utils.c:                return -1;
./dt-utils.c:        spin_lock(&q->lock);
./dt-utils.c:        entries_nack(q->queue,
./dt-utils.c:                     q->rmt,
./dt-utils.c:        if (rtimer_restart(q->r_timer, tr)) {
./dt-utils.c:                spin_unlock(&q->lock);
./dt-utils.c:                return -1;
./dt-utils.c:        spin_unlock(&q->lock);
./pft.c:        tmp->port_id = port_id;
./pft.c:        INIT_LIST_HEAD(&tmp->next);
./pft.c:        list_del_rcu(&pe->next);
./pft.c:        return pe->port_id;
./pft.c:        tmp->destination = destination;
./pft.c:        tmp->qos_id      = qos_id;
./pft.c:        INIT_LIST_HEAD(&tmp->ports);
./pft.c:        INIT_LIST_HEAD(&tmp->next);
./pft.c:        list_for_each_entry_safe(pos, next, &entry->ports, next) {
./pft.c:        list_del_rcu(&entry->next);
./pft.c:        list_for_each_entry_rcu(pos, &entry->ports, next) {
./pft.c:                if (pos->port_id == id)
./pft.c:                return -1;
./pft.c:        list_add_rcu(&pe->next, &entry->ports);
./pft.c:        list_for_each_entry_safe(pos, next, &entry->ports, next) {
./pft.c:        list_for_each_entry_rcu(pos, &entry->ports, next) {
./pft.c:                                return -1;
./pft.c:        list_for_each_entry_rcu(pos, &entry->ports, next) {
./pft.c:        spin_lock_init(&tmp->write_lock);
./pft.c:        INIT_LIST_HEAD(&tmp->entries);
./pft.c:        empty = list_empty(&instance->entries);
./pft.c:        list_for_each_entry_safe(pos, next, &instance->entries, next) {
./pft.c:                return -1;
./pft.c:        spin_lock(&instance->write_lock);
./pft.c:        spin_unlock(&instance->write_lock);
./pft.c:                return -1;
./pft.c:        spin_lock(&instance->write_lock);
./pft.c:        spin_unlock(&instance->write_lock);
./pft.c:        list_for_each_entry_rcu(pos, &instance->entries, next) {
./pft.c:                if ((pos->destination == destination) &&
./pft.c:                    (pos->qos_id      == qos_id)) {
./pft.c:                return -1;
./pft.c:                return -1;
./pft.c:                LOG_ERR("Bogus qos-id passed, cannot add");
./pft.c:                return -1;
./pft.c:                return -1;
./pft.c:        spin_lock(&instance->write_lock);
./pft.c:                        spin_unlock(&instance->write_lock);
./pft.c:                        return -1;
./pft.c:                list_add_rcu(&tmp->next, &instance->entries);
./pft.c:                        spin_unlock(&instance->write_lock);
./pft.c:                        return -1;
./pft.c:        spin_unlock(&instance->write_lock);
./pft.c:                return -1;
./pft.c:                return -1;
./pft.c:                LOG_ERR("Bogus qos-id, cannot remove");
./pft.c:                return -1;
./pft.c:                return -1;
./pft.c:        spin_lock(&instance->write_lock);
./pft.c:                spin_unlock(&instance->write_lock);
./pft.c:                return -1;
./pft.c:        /* If the list of port-ids is empty, remove the entry */
./pft.c:        if (list_empty(&tmp->ports)) {
./pft.c:        spin_unlock(&instance->write_lock);
./pft.c:                return -1;
./pft.c:                return -1;
./pft.c:                LOG_ERR("Bogus qos-id, cannot get NHOP");
./pft.c:                return -1;
./pft.c:                return -1;
./pft.c:                return -1;
./pft.c:                return -1;
./pft.c:                return -1;
./pft.c:        list_for_each_entry_rcu(pos, &instance->entries, next) {
./pft.c:                        return -1;
./pft.c:                entry->destination = pos->destination;
./pft.c:                entry->qos_id      = pos->qos_id;
./pft.c:                entry->ports_size  = 0;
./pft.c:                entry->ports       = NULL;
./pft.c:                if (pfte_ports_copy(pos, &entry->ports, &entry->ports_size)) {
./pft.c:                        return -1;
./pft.c:                list_add(&entry->next, entries);
./pft.c:        LOG_DBG("Adding port-id %d", ports[0]);
./pft.c:        LOG_DBG("Adding port-id %d", ports[0]);
./pft.c:                LOG_DBG("Failed to get port-ids");
./pft.c:        LOG_DBG("Checking if we got both port-ids");
./pft.c:                LOG_DBG("Wrong number of port-ids returned");
./pft.c:                LOG_DBG("Retrieved port-id %d", port_ids[i]);
./pft.c:        /* Port-id table is now 2 in size */
./pft.c:                LOG_DBG("Failed to get port-ids");
./pft.c:        LOG_DBG("Checking the number of port-ids returned");
./pft.c:                LOG_DBG("Wrong number of port-ids returned");
./pft.c:        /* Trying with 1 port-id */
./pft.c:        LOG_DBG("Trying with just one port-id now");
./pft.c:                LOG_DBG("Failed to get port-ids");
./pft.c:        LOG_DBG("Checking if it is just one port-id");
./pft.c:                LOG_DBG("Wrong number of port-ids returned");
./pft.c:        /* Trying with 3 port-ids */
./pft.c:        LOG_DBG("Trying with 3 port-ids");
./pft.c:                LOG_DBG("Failed to get port-ids");
./pft.c:                LOG_DBG("Wrong number of port-ids returned");
./pft.c:        LOG_DBG("Passing bogus port-id");
./pft.c:        if (!pft_nhop(tmp, 30, -99, &port_ids, &nr)) {
./pft.c:                LOG_DBG("Bogus port-id passed");
./pft.c:        if (!pft_nhop(tmp, -59, 9, &port_ids, &nr)) {
Binary file ./syscalls.o matches
Binary file ./rnl.o matches
./.efcp-utils.o.cmd:cmd_net/rina/efcp-utils.o := gcc -Wp,-MD,net/rina/.efcp-utils.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(efcp_utils)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_efcp-utils.o net/rina/efcp-utils.c
./.efcp-utils.o.cmd:source_net/rina/efcp-utils.o := net/rina/efcp-utils.c
./.efcp-utils.o.cmd:deps_net/rina/efcp-utils.o := \
./.efcp-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.efcp-utils.o.cmd:  include/asm-generic/int-ll64.h \
./.efcp-utils.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.efcp-utils.o.cmd:  include/asm-generic/bitsperlong.h \
./.efcp-utils.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.efcp-utils.o.cmd:  include/linux/compiler-gcc.h \
./.efcp-utils.o.cmd:  include/linux/compiler-gcc4.h \
./.efcp-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.efcp-utils.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.efcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.efcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.efcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.efcp-utils.o.cmd:  include/asm-generic/ptrace.h \
./.efcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.efcp-utils.o.cmd:  include/asm-generic/bitops/fls64.h \
./.efcp-utils.o.cmd:  include/asm-generic/bitops/find.h \
./.efcp-utils.o.cmd:  include/asm-generic/bitops/sched.h \
./.efcp-utils.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.efcp-utils.o.cmd:  include/asm-generic/bitops/le.h \
./.efcp-utils.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.efcp-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.efcp-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.efcp-utils.o.cmd:  include/asm-generic/percpu.h \
./.efcp-utils.o.cmd:  include/linux/percpu-defs.h \
./.efcp-utils.o.cmd:  include/asm-generic/bug.h \
./.efcp-utils.o.cmd:  include/asm-generic/memory_model.h \
./.efcp-utils.o.cmd:  include/asm-generic/getorder.h \
./.efcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.efcp-utils.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.efcp-utils.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.efcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.efcp-utils.o.cmd:  include/asm-generic/ioctl.h \
./.efcp-utils.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.efcp-utils.o.cmd:  include/asm-generic/atomic-long.h \
./.efcp-utils.o.cmd:  include/asm-generic/param.h \
./.efcp-utils.o.cmd:  include/uapi/asm-generic/param.h \
./.efcp-utils.o.cmd:  include/asm-generic/topology.h \
./.efcp-utils.o.cmd:  include/asm-generic/early_ioremap.h \
./.efcp-utils.o.cmd:  include/asm-generic/iomap.h \
./.efcp-utils.o.cmd:  include/asm-generic/pci_iomap.h \
./.efcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.efcp-utils.o.cmd:  include/asm-generic/kmap_types.h \
./.efcp-utils.o.cmd:  include/asm-generic/fixmap.h \
./.efcp-utils.o.cmd:  include/linux/pageblock-flags.h \
./.efcp-utils.o.cmd:  include/linux/page-flags-layout.h \
./.efcp-utils.o.cmd:  include/asm-generic/sections.h \
./.efcp-utils.o.cmd:  net/rina/ipcp-instances.h \
./.efcp-utils.o.cmd:  net/rina/ipcp-factories.h \
./.efcp-utils.o.cmd:net/rina/efcp-utils.o: $(deps_net/rina/efcp-utils.o)
./.efcp-utils.o.cmd:$(deps_net/rina/efcp-utils.o):
./ipcp-utils.c:#define RINA_PREFIX "ipcp-utils"
./ipcp-utils.c:#include "ipcp-utils.h"
./ipcp-utils.c:        if (!dst->process_name     &&
./ipcp-utils.c:            !dst->process_instance &&
./ipcp-utils.c:            !dst->entity_name      &&
./ipcp-utils.c:            !dst->entity_instance)
./ipcp-utils.c:        dst->process_name     = process_name;
./ipcp-utils.c:        dst->process_instance = process_instance;
./ipcp-utils.c:        dst->entity_name      = entity_name;
./ipcp-utils.c:        dst->entity_instance  = entity_instance;
./ipcp-utils.c:        if (string_dup_gfp(flags, process_name,     &dst->process_name)     ||
./ipcp-utils.c:            string_dup_gfp(flags, process_instance, &dst->process_instance) ||
./ipcp-utils.c:            string_dup_gfp(flags, entity_name,      &dst->entity_name)      ||
./ipcp-utils.c:            string_dup_gfp(flags, entity_instance,  &dst->entity_instance)) {
./ipcp-utils.c:        if (n->process_name) {
./ipcp-utils.c:                rkfree(n->process_name);
./ipcp-utils.c:                n->process_name = NULL;
./ipcp-utils.c:        if (n->process_instance) {
./ipcp-utils.c:                rkfree(n->process_instance);
./ipcp-utils.c:                n->process_instance = NULL;
./ipcp-utils.c:        if (n->entity_name) {
./ipcp-utils.c:                rkfree(n->entity_name);
./ipcp-utils.c:                n->entity_name = NULL;
./ipcp-utils.c:        if (n->entity_instance) {
./ipcp-utils.c:                rkfree(n->entity_instance);
./ipcp-utils.c:                n->entity_instance = NULL;
./ipcp-utils.c:                return -1;
./ipcp-utils.c:        /* We rely on short-boolean evaluation ... :-) */
./ipcp-utils.c:        if (string_dup(src->process_name,     &dst->process_name)     ||
./ipcp-utils.c:            string_dup(src->process_instance, &dst->process_instance) ||
./ipcp-utils.c:            string_dup(src->entity_name,      &dst->entity_name)      ||
./ipcp-utils.c:            string_dup(src->entity_instance,  &dst->entity_instance)) {
./ipcp-utils.c:                return -1;
./ipcp-utils.c:        ((X->FIELD && Y->FIELD) ? string_cmp(X->FIELD, Y->FIELD) :      \
./ipcp-utils.c:         ((!X->FIELD && !Y->FIELD) ? 0 : -1))
./ipcp-utils.c:{ return (n && n->process_name); }
./ipcp-utils.c:        size += (n->process_name                 ?
./ipcp-utils.c:                 string_len(n->process_name)     : none_len);
./ipcp-utils.c:        size += (n->process_instance             ?
./ipcp-utils.c:                 string_len(n->process_instance) : none_len);
./ipcp-utils.c:        size += (n->entity_name                  ?
./ipcp-utils.c:                 string_len(n->entity_name)      : none_len);
./ipcp-utils.c:        size += (n->entity_instance              ?
./ipcp-utils.c:                 string_len(n->entity_instance)  : none_len);
./ipcp-utils.c:                     (n->process_name     ? n->process_name     : none),
./ipcp-utils.c:                     (n->process_instance ? n->process_instance : none),
./ipcp-utils.c:                     (n->entity_name      ? n->entity_name      : none),
./ipcp-utils.c:                     (n->entity_instance  ? n->entity_instance  : none)) !=
./ipcp-utils.c:            size - 1) {
./ipcp-utils.c:        tmp->entry = NULL;
./ipcp-utils.c:        INIT_LIST_HEAD(&tmp->next);
./ipcp-utils.c:                return -1;
./ipcp-utils.c:        if (!cfg->entry)
./ipcp-utils.c:                return -1;
./ipcp-utils.c:        if (cfg->entry->name) rkfree(cfg->entry->name);
./ipcp-utils.c:        if (cfg->entry->value) rkfree(cfg->entry->value);
./ipcp-utils.c:        rkfree(cfg->entry);
./ipcp-utils.c:        tmp->dt_cons = tmp_dt;
./ipcp-utils.c:        tmp->unknown_flow = policy_create();
./ipcp-utils.c:        if (!tmp->unknown_flow) {
./ipcp-utils.c:        if (efcp_config->dt_cons)
./ipcp-utils.c:                rkfree(efcp_config->dt_cons);
./ipcp-utils.c:        if (efcp_config->unknown_flow)
./ipcp-utils.c:                policy_destroy(efcp_config->unknown_flow);
./ipcp-utils.c:        tmp->efcp_config = NULL;
./ipcp-utils.c:        INIT_LIST_HEAD(&(tmp->ipcp_config_entries));
./ipcp-utils.c:                return -1;
./ipcp-utils.c:                                 &dif_config->ipcp_config_entries,
./ipcp-utils.c:                list_del(&pos->next);
./ipcp-utils.c:        tmp->dif_name = name_create();
./ipcp-utils.c:        if (!tmp->dif_name) {
./ipcp-utils.c:        tmp->configuration = dif_config_create();
./ipcp-utils.c:        if (!tmp->configuration) {
./ipcp-utils.c:                name_destroy(tmp->dif_name);
./ipcp-utils.c:        LOG_DBG("Destroying DIF-info");
./ipcp-utils.c:                if (dif_info->dif_name) {
./ipcp-utils.c:                        name_destroy(dif_info->dif_name);
./ipcp-utils.c:                if (dif_info->configuration) {
./ipcp-utils.c:                        if (dif_config_destroy(dif_info->configuration))
./ipcp-utils.c:                                return -1;
./ipcp-utils.c:                rkfree(dif_info->type);
./.pdu.o.cmd:cmd_net/rina/pdu.o := gcc -Wp,-MD,net/rina/.pdu.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(pdu)"  -D"KBUILD_MODNAME=KBUILD_STR(pdu)" -c -o net/rina/.tmp_pdu.o net/rina/pdu.c
./.pdu.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.pdu.o.cmd:  include/asm-generic/int-ll64.h \
./.pdu.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.pdu.o.cmd:  include/asm-generic/bitsperlong.h \
./.pdu.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.pdu.o.cmd:  include/linux/compiler-gcc.h \
./.pdu.o.cmd:  include/linux/compiler-gcc4.h \
./.pdu.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.pdu.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.pdu.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.pdu.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.pdu.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.pdu.o.cmd:  include/asm-generic/ptrace.h \
./.pdu.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.pdu.o.cmd:  include/asm-generic/bitops/fls64.h \
./.pdu.o.cmd:  include/asm-generic/bitops/find.h \
./.pdu.o.cmd:  include/asm-generic/bitops/sched.h \
./.pdu.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.pdu.o.cmd:  include/asm-generic/bitops/le.h \
./.pdu.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.pdu.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.pdu.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.pdu.o.cmd:  include/asm-generic/percpu.h \
./.pdu.o.cmd:  include/linux/percpu-defs.h \
./.pdu.o.cmd:  include/asm-generic/memory_model.h \
./.pdu.o.cmd:  include/asm-generic/getorder.h \
./.pdu.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.pdu.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.pdu.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.pdu.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.pdu.o.cmd:  include/asm-generic/ioctl.h \
./.pdu.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.pdu.o.cmd:  include/asm-generic/bug.h \
./.pdu.o.cmd:  include/asm-generic/atomic-long.h \
./.pdu.o.cmd:  include/asm-generic/param.h \
./.pdu.o.cmd:  include/uapi/asm-generic/param.h \
./.pdu.o.cmd:  include/linux/pageblock-flags.h \
./.pdu.o.cmd:  include/linux/page-flags-layout.h \
./.pdu.o.cmd:  include/asm-generic/topology.h \
./.pdu.o.cmd:  include/asm-generic/early_ioremap.h \
./.pdu.o.cmd:  include/asm-generic/iomap.h \
./.pdu.o.cmd:  include/asm-generic/pci_iomap.h \
./.pdu.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.pdu.o.cmd:  include/asm-generic/kmap_types.h \
./.pdu.o.cmd:  include/asm-generic/fixmap.h \
./.pdu.o.cmd:  include/asm-generic/sections.h \
./.du.o.cmd:cmd_net/rina/du.o := gcc -Wp,-MD,net/rina/.du.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(du)"  -D"KBUILD_MODNAME=KBUILD_STR(du)" -c -o net/rina/.tmp_du.o net/rina/du.c
./.du.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.du.o.cmd:  include/asm-generic/int-ll64.h \
./.du.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.du.o.cmd:  include/asm-generic/bitsperlong.h \
./.du.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.du.o.cmd:  include/linux/compiler-gcc.h \
./.du.o.cmd:  include/linux/compiler-gcc4.h \
./.du.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.du.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.du.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.du.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.du.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.du.o.cmd:  include/asm-generic/ptrace.h \
./.du.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.du.o.cmd:  include/asm-generic/bitops/fls64.h \
./.du.o.cmd:  include/asm-generic/bitops/find.h \
./.du.o.cmd:  include/asm-generic/bitops/sched.h \
./.du.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.du.o.cmd:  include/asm-generic/bitops/le.h \
./.du.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.du.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.du.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.du.o.cmd:  include/asm-generic/percpu.h \
./.du.o.cmd:  include/linux/percpu-defs.h \
./.du.o.cmd:  include/asm-generic/memory_model.h \
./.du.o.cmd:  include/asm-generic/getorder.h \
./.du.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.du.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.du.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.du.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.du.o.cmd:  include/asm-generic/ioctl.h \
./.du.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.du.o.cmd:  include/asm-generic/bug.h \
./.du.o.cmd:  include/asm-generic/atomic-long.h \
./.du.o.cmd:  include/asm-generic/param.h \
./.du.o.cmd:  include/uapi/asm-generic/param.h \
./.du.o.cmd:  include/linux/pageblock-flags.h \
./.du.o.cmd:  include/linux/page-flags-layout.h \
./.du.o.cmd:  include/asm-generic/topology.h \
./.du.o.cmd:  include/asm-generic/early_ioremap.h \
./.du.o.cmd:  include/asm-generic/iomap.h \
./.du.o.cmd:  include/asm-generic/pci_iomap.h \
./.du.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.du.o.cmd:  include/asm-generic/kmap_types.h \
./.du.o.cmd:  include/asm-generic/fixmap.h \
./.du.o.cmd:  include/asm-generic/sections.h \
./pft.h:/* NOTE: ports and entries are in-out parms */
./kfa.c:#include "kfa-utils.h"
./kfa.c:        instance->pidm = pidm_create();
./kfa.c:        if (!instance->pidm) {
./kfa.c:        instance->flows = kfa_pmap_create();
./kfa.c:        if (!instance->flows) {
./kfa.c:        mutex_init(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        ASSERT(kfa_pmap_empty(instance->flows));
./kfa.c:        kfa_pmap_destroy(instance->flows);
./kfa.c:        pidm_destroy(instance->pidm);
./kfa.c:                return -1;
./kfa.c:                return-1;
./kfa.c:                return -1;
./kfa.c:        flow->state = PORT_STATE_PENDING;
./kfa.c:        atomic_set(&flow->readers, 0);
./kfa.c:        atomic_set(&flow->writers, 0);
./kfa.c:        init_waitqueue_head(&flow->wait_queue);
./kfa.c:        mutex_lock(&instance->lock);
./kfa.c:        if (kfa_pmap_add_ni(instance->flows, pid, flow, id)) {
./kfa.c:                LOG_ERR("Could not map flow and port-id %d", pid);
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        mutex_unlock(&instance->lock);
./kfa.c:        mutex_lock(&instance->lock);
./kfa.c:        if (!instance->pidm) {
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:        pid = pidm_allocate(instance->pidm);
./kfa.c:                LOG_ERR("Cannot get a port-id");
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:        mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:                LOG_ERR("Bogus port-id, bailing out");
./kfa.c:                return -1;
./kfa.c:        mutex_lock(&instance->lock);
./kfa.c:        if (!instance->pidm) {
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        if (pidm_release(instance->pidm, port_id)) {
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:                LOG_ERR("Bogus port-id, bailing out");
./kfa.c:                return -1;
./kfa.c:                return -1;
./kfa.c:        /* FIXME: Check the ipc-id */
./kfa.c:        mutex_lock(&instance->lock);
./kfa.c:        flow = kfa_pmap_find(instance->flows, pid);
./kfa.c:                LOG_ERR("The flow with port-id %d is not pending, "
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        if (flow->state != PORT_STATE_PENDING) {
./kfa.c:                LOG_ERR("Flow on port-id %d already committed", pid);
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        flow->state     = PORT_STATE_ALLOCATED;
./kfa.c:        flow->sdu_ready = rfifo_create_ni();
./kfa.c:        if (!flow->sdu_ready) {
./kfa.c:                kfa_pmap_remove(instance->flows, pid);
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        LOG_DBG("Flow bound to port-id %d with waitqueue %pK",
./kfa.c:                pid, &flow->wait_queue);
./kfa.c:        mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:                return -1;
./kfa.c:        mutex_lock(&instance->lock);
./kfa.c:        flow = kfa_pmap_find(instance->flows, pid);
./kfa.c:                LOG_ERR("The flow with port-id %d does not exist, "
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        flow->rmt = rmt;
./kfa.c:        mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:                return -1;
./kfa.c:        mutex_lock(&instance->lock);
./kfa.c:        flow = kfa_pmap_find(instance->flows, pid);
./kfa.c:                LOG_ERR("The flow with port-id %d does not exist, "
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        flow->rmt = NULL;
./kfa.c:        mutex_unlock(&instance->lock);
./kfa.c:/* NOTE: Add instance-locking IFF exporting to API */
./kfa.c:        ipcp = flow->ipc_process;
./kfa.c:        if (!flow->sdu_ready)
./kfa.c:                LOG_WARN("Instance %pK SDU-ready FIFO is NULL", instance);
./kfa.c:                if (rfifo_destroy(flow->sdu_ready,
./kfa.c:                        retval = -1;
./kfa.c:        if (kfa_pmap_remove(instance->flows, id)) {
./kfa.c:                LOG_ERR("Could not remove pending flow with port-id %d", id);
./kfa.c:                retval = -1;
./kfa.c:        if (pidm_release(instance->pidm, id)) {
./kfa.c:                retval = -1;
./kfa.c:        if (flow->rmt) {
./kfa.c:                if (rmt_n1port_unbind(flow->rmt, id)) {
./kfa.c:                        LOG_ERR("Could not unbind port-id %d from "
./kfa.c:                        retval = -1;
./kfa.c:        ASSERT(ipcp->ops);
./kfa.c:        if (ipcp->ops->flow_destroy)
./kfa.c:                if (ipcp->ops->flow_destroy(ipcp->data, id)) {
./kfa.c:                                "on port-id %d", id);
./kfa.c:                        retval = -1;
./kfa.c:                return -1;
./kfa.c:                LOG_ERR("Bogus flow-id, bailing out");
./kfa.c:                return -1;
./kfa.c:        mutex_lock(&instance->lock);
./kfa.c:        flow = kfa_pmap_find(instance->flows, id);
./kfa.c:                LOG_ERR("There is no flow created with port-id %d", id);
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        flow->state = PORT_STATE_DEALLOCATED;
./kfa.c:        if ((atomic_read(&flow->readers) == 0) &&
./kfa.c:            (atomic_read(&flow->writers) == 0)) {
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:        mutex_unlock(&instance->lock);
./kfa.c:        wake_up_all(&flow->wait_queue);
./kfa.c:                return -1;
./kfa.c:        if (kfa_pmap_remove_all_for_id(instance->flows, id))
./kfa.c:                return -1;
./kfa.c:                return -1;
./kfa.c:                LOG_ERR("Bogus port-id, bailing out");
./kfa.c:                return -1;
./kfa.c:                return -1;
./kfa.c:        LOG_DBG("Trying to write SDU to port-id %d", id);
./kfa.c:        mutex_lock(&instance->lock);
./kfa.c:        flow = kfa_pmap_find(instance->flows, id);
./kfa.c:                LOG_ERR("There is no flow bound to port-id %d", id);
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        if (flow->state == PORT_STATE_DEALLOCATED) {
./kfa.c:                LOG_ERR("Flow with port-id %d is already deallocated", id);
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        atomic_inc(&flow->writers);
./kfa.c:        while (flow->state == PORT_STATE_PENDING) {
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                        &flow->wait_queue);
./kfa.c:                retval = wait_event_interruptible(flow->wait_queue,
./kfa.c:                                                  (flow->state !=
./kfa.c:                        LOG_ERR("Wait-event interrupted (%d)", retval);
./kfa.c:                mutex_lock(&instance->lock);
./kfa.c:                flow = kfa_pmap_find(instance->flows, id);
./kfa.c:                        LOG_ERR("There is no flow bound to port-id %d anymore",
./kfa.c:                        mutex_unlock(&instance->lock);
./kfa.c:                        return -1;
./kfa.c:        ipcp = flow->ipc_process;
./kfa.c:                retval = -1;
./kfa.c:        ASSERT(ipcp->ops);
./kfa.c:        ASSERT(ipcp->ops->sdu_write);
./kfa.c:        if (ipcp->ops->sdu_write(ipcp->data, id, sdu)) {
./kfa.c:                LOG_ERR("Couldn't write SDU on port-id %d", id);
./kfa.c:                retval = -1;
./kfa.c:        if (atomic_dec_and_test(&flow->writers) &&
./kfa.c:            (atomic_read(&flow->readers) == 0)  &&
./kfa.c:            (flow->state == PORT_STATE_DEALLOCATED))
./kfa.c:        mutex_unlock(&instance->lock);
./kfa.c:        if (flow->state == PORT_STATE_DEALLOCATED ||
./kfa.c:            (flow->state != PORT_STATE_PENDING &&
./kfa.c:             !rfifo_is_empty(flow->sdu_ready)))
./kfa.c:                return -1;
./kfa.c:                LOG_ERR("Bogus port-id, bailing out");
./kfa.c:                return -1;
./kfa.c:                return -1;
./kfa.c:        LOG_DBG("Trying to read SDU from port-id %d", id);
./kfa.c:        mutex_lock(&instance->lock);
./kfa.c:        flow = kfa_pmap_find(instance->flows, id);
./kfa.c:                LOG_ERR("There is no flow bound to port-id %d", id);
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        if (flow->state == PORT_STATE_DEALLOCATED) {
./kfa.c:                LOG_ERR("Flow with port-id %d is already deallocated", id);
./kfa.c:                return -1;
./kfa.c:        atomic_inc(&flow->readers);
./kfa.c:        while (flow->state == PORT_STATE_PENDING ||
./kfa.c:               rfifo_is_empty(flow->sdu_ready)) {
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                        &flow->wait_queue);
./kfa.c:                retval = wait_event_interruptible(flow->wait_queue,
./kfa.c:                        LOG_ERR("Wait-event interrupted (%d)", retval);
./kfa.c:                mutex_lock(&instance->lock);
./kfa.c:                flow = kfa_pmap_find(instance->flows, id);
./kfa.c:                        LOG_ERR("There is no flow bound to port-id %d anymore",
./kfa.c:                        mutex_unlock(&instance->lock);
./kfa.c:                        return -1;
./kfa.c:                if (flow->state == PORT_STATE_DEALLOCATED)
./kfa.c:        if (rfifo_is_empty(flow->sdu_ready)) {
./kfa.c:                retval = -1;
./kfa.c:        *sdu = rfifo_pop(flow->sdu_ready);
./kfa.c:                LOG_ERR("There is not a valid in port-id %d fifo",
./kfa.c:                retval = -1;
./kfa.c:        if (atomic_dec_and_test(&flow->readers) &&
./kfa.c:            (atomic_read(&flow->writers) == 0)  &&
./kfa.c:            (flow->state == PORT_STATE_DEALLOCATED))
./kfa.c:        mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:                LOG_ERR("Bogus port-id, bailing out");
./kfa.c:                return -1;
./kfa.c:                return -1;
./kfa.c:        LOG_DBG("Posting SDU to port-id %d ", id);
./kfa.c:        mutex_lock(&instance->lock);
./kfa.c:        flow = kfa_pmap_find(instance->flows, id);
./kfa.c:                LOG_ERR("There is no flow bound to port-id %d", id);
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        if (!flow->rmt) {
./kfa.c:                if (rfifo_push_ni(flow->sdu_ready, sdu)) {
./kfa.c:                                "port-id %d fifo",
./kfa.c:                        mutex_unlock(&instance->lock);
./kfa.c:                        return -1;
./kfa.c:                wq = &flow->wait_queue;
./kfa.c:                        wq, wq->task_list.next, wq->task_list.prev);
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                if (rmt_receive(flow->rmt, sdu, id)) {
./kfa.c:                        mutex_unlock(&instance->lock);
./kfa.c:                        return -1;
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:        mutex_lock(&instance->lock);
./kfa.c:        tmp = kfa_pmap_find(instance->flows, pid);
./kfa.c:        mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:                LOG_ERR("Bogus port-id, bailing out");
./kfa.c:                return -1;
./kfa.c:                return -1;
./kfa.c:        LOG_DBG("Posting SDU to queue for user space in port-id %d ", to);
./kfa.c:                return -1;
./kfa.c:                return -1;
./kfa.c:                return -1;
./kfa.c:        mutex_lock(&instance->lock);
./kfa.c:        flow = kfa_pmap_find(instance->flows, pid);
./kfa.c:                LOG_ERR("There is no flow with port-id %d, "
./kfa.c:                mutex_unlock(&instance->lock);
./kfa.c:                return -1;
./kfa.c:        flow->ipc_process = ipcp;
./kfa.c:        mutex_unlock(&instance->lock);
./rmt.c:#include "efcp-utils.h"
./rmt.c:        tmp->queue = rfifo_create();
./rmt.c:        if (!tmp->queue) {
./rmt.c:        INIT_HLIST_NODE(&tmp->hlist);
./rmt.c:        tmp->port_id = id;
./rmt.c:        LOG_DBG("Queue %pK created successfully (port-id = %d)", tmp, id);
./rmt.c:        ASSERT(q->queue);
./rmt.c:        LOG_DBG("Destroying queue %pK (port-id = %d)", q, q->port_id);
./rmt.c:        hash_del(&q->hlist);
./rmt.c:        if (q->queue) rfifo_destroy(q->queue, (void (*)(void *)) pdu_destroy);
./rmt.c:        hash_init(tmp->queues);
./rmt.c:        spin_lock_init(&tmp->lock);
./rmt.c:        hash_for_each_safe(m->queues, bucket, tmp, entry, hlist) {
./rmt.c:                kfa_flow_rmt_unbind(kfa, entry->port_id);
./rmt.c:                        return -1;
./rmt.c:        head = &m->queues[rmap_hash(m->queues, id)];
./rmt.c:                if (entry->port_id == id)
./rmt.c:        c->pids  = NULL;
./rmt.c:        c->count = 0;
./rmt.c:        if (c->count) {
./rmt.c:                ASSERT(c->pids);
./rmt.c:                rkfree(c->pids);
./rmt.c:                ASSERT(!c->pids);
./rmt.c:                     RINA_PREFIX "-%s-%pK", prefix, instance) >=
./rmt.c:        tmp->address = address_bad();
./rmt.c:        tmp->parent  = parent;
./rmt.c:        tmp->kfa     = kfa;
./rmt.c:        tmp->efcpc   = efcpc;
./rmt.c:        tmp->pft     = pft_create();
./rmt.c:        if (!tmp->pft) {
./rmt.c:        name = create_name("egress-wq", tmp);
./rmt.c:        tmp->egress.wq = rwq_create(name);
./rmt.c:        if (!tmp->egress.wq) {
./rmt.c:        tmp->egress.queues = qmap_create();
./rmt.c:        if (!tmp->egress.queues) {
./rmt.c:        if (pft_cache_init(&tmp->egress.cache)) {
./rmt.c:        name = create_name("ingress-wq", tmp);
./rmt.c:        tmp->ingress.wq = rwq_create(name);
./rmt.c:        if (!tmp->ingress.wq) {
./rmt.c:        tmp->ingress.queues = qmap_create();
./rmt.c:        if (!tmp->ingress.queues) {
./rmt.c:        if (pft_cache_init(&tmp->ingress.cache)) {
./rmt.c:                return -1;
./rmt.c:        if (instance->ingress.wq)     rwq_destroy(instance->ingress.wq);
./rmt.c:        if (instance->ingress.queues) qmap_destroy(instance->ingress.queues,
./rmt.c:                                                   instance->kfa);
./rmt.c:        pft_cache_fini(&instance->ingress.cache);
./rmt.c:        if (instance->egress.wq)      rwq_destroy(instance->egress.wq);
./rmt.c:        if (instance->egress.queues)  qmap_destroy(instance->egress.queues,
./rmt.c:                                                   instance->kfa);
./rmt.c:        pft_cache_fini(&instance->egress.cache);
./rmt.c:        if (instance->pft)            pft_destroy(instance->pft);
./rmt.c:                return -1;
./rmt.c:        if (is_address_ok(instance->address)) {
./rmt.c:                return -1;
./rmt.c:        instance->address = address;
./rmt.c:                return -1;
./rmt.c:        spin_lock(&tmp->egress.queues->lock);
./rmt.c:        hash_for_each_safe(tmp->egress.queues->queues,
./rmt.c:                pdu = (struct pdu *) rfifo_pop(entry->queue);
./rmt.c:                port_id = entry->port_id;
./rmt.c:                spin_unlock(&tmp->egress.queues->lock);
./rmt.c:                        spin_lock(&tmp->egress.queues->lock);
./rmt.c:                LOG_DBG("Gonna send SDU to port-id %d", port_id);
./rmt.c:                if (kfa_flow_sdu_write(tmp->kfa, port_id, sdu)) {
./rmt.c:                        spin_lock(&tmp->egress.queues->lock);
./rmt.c:                spin_lock(&tmp->egress.queues->lock);
./rmt.c:        spin_unlock(&tmp->egress.queues->lock);
./rmt.c:                return -1;
./rmt.c:                return -1;
./rmt.c:        if (!instance->egress.queues) {
./rmt.c:                return -1;
./rmt.c:                LOG_ERR("Cannot send PDU to port-id %d", id);
./rmt.c:                return -1;
./rmt.c:        spin_lock(&instance->egress.queues->lock);
./rmt.c:        s_queue = qmap_find(instance->egress.queues, id);
./rmt.c:                spin_unlock(&instance->egress.queues->lock);
./rmt.c:                return -1;
./rmt.c:        if (rfifo_push_ni(s_queue->queue, pdu)) {
./rmt.c:                spin_unlock(&instance->egress.queues->lock);
./rmt.c:                return -1;
./rmt.c:        spin_unlock(&instance->egress.queues->lock);
./rmt.c:        ASSERT(instance->egress.wq);
./rmt.c:        if (rwq_work_post(instance->egress.wq, item)) {
./rmt.c:                LOG_ERR("Cannot post work (PDU) to egress work-queue");
./rmt.c:                spin_lock(&instance->egress.queues->lock);
./rmt.c:                s_queue = qmap_find(instance->egress.queues, id);
./rmt.c:                        tmp = rfifo_pop(s_queue->queue);
./rmt.c:                spin_unlock(&instance->egress.queues->lock);
./rmt.c:                return -1;
./rmt.c:                return -1;
./rmt.c:                return -1;
./rmt.c:        if (pft_nhop(instance->pft,
./rmt.c:                     &(instance->egress.cache.pids),
./rmt.c:                     &(instance->egress.cache.count))) {
./rmt.c:                return -1;
./rmt.c:        if (instance->egress.cache.count == 0) {
./rmt.c:         *   pdu -> pci-> qos-id | cep_id_t -> connection -> qos-id (former)
./rmt.c:         *   address + qos-id (pdu-fwd-t) -> port-id
./rmt.c:        for (i = 0; i < instance->egress.cache.count; i++) {
./rmt.c:                pid = instance->egress.cache.pids[i];
./rmt.c:                if (instance->egress.cache.count > 1)
./rmt.c:                LOG_DBG("Gonna send PDU to port-id: %d", pid);
./rmt.c:                        LOG_ERR("Failed to send a PDU to port-id %d", pid);
./rmt.c:                return -1;
./rmt.c:        hash_add(instance->egress.queues->queues, &tmp->hlist, id);
./rmt.c:        LOG_DBG("Added send queue to rmt instance %pK for port-id %d",
./rmt.c:                return -1;
./rmt.c:                LOG_ERR("Wrong port-id %d", id);
./rmt.c:                return -1;
./rmt.c:        if (!instance->egress.queues) {
./rmt.c:                return -1;
./rmt.c:        if (qmap_find(instance->egress.queues, id)) {
./rmt.c:                return -1;
./rmt.c:                return -1;
./rmt.c:        if (!instance->egress.queues) {
./rmt.c:                return -1;
./rmt.c:                LOG_ERR("Wrong port-id %d", id);
./rmt.c:                return -1;
./rmt.c:        q = qmap_find(instance->egress.queues, id);
./rmt.c:                return -1;
./rmt.c:                return -1;
./rmt.c:        hash_add(instance->ingress.queues->queues, &tmp->hlist, id);
./rmt.c:        LOG_DBG("Added receive queue to rmt instance %pK for port-id %d",
./rmt.c:                return -1;
./rmt.c:                LOG_ERR("Wrong port-id %d", id);
./rmt.c:                return -1;
./rmt.c:        if (!instance->ingress.queues) {
./rmt.c:                return -1;
./rmt.c:        if (qmap_find(instance->ingress.queues, id)) {
./rmt.c:                return -1;
./rmt.c:                return -1;
./rmt.c:        if (!instance->egress.queues) {
./rmt.c:                return -1;
./rmt.c:                LOG_ERR("Wrong port-id %d", id);
./rmt.c:                return -1;
./rmt.c:        q = qmap_find(instance->ingress.queues, id);
./rmt.c:                return -1;
./rmt.c:                return -1;
./rmt.c:                return -1;
./rmt.c:                retval = -1;
./rmt.c:                retval = -1;
./rmt.c:                return -1;
./rmt.c:                return -1;
./rmt.c:        ASSERT(rmt->parent);
./rmt.c:        ASSERT(rmt->parent->ops);
./rmt.c:        ASSERT(rmt->parent->ops->mgmt_sdu_post);
./rmt.c:        return (rmt->parent->ops->mgmt_sdu_post(rmt->parent->data,
./rmt.c:                                                sdu) ? -1 : 0);
./rmt.c:                return -1;
./rmt.c:                return -1;
./rmt.c:                LOG_ERR("Wrong CEP-id in PDU");
./rmt.c:                return -1;
./rmt.c:        if (efcp_container_receive(rmt->efcpc, c, pdu)) {
./rmt.c:                return -1;
./rmt.c:                return -1;
./rmt.c:                return -1;
./rmt.c:        ASSERT(rmt->address != dst_addr);
./rmt.c:        if (pft_nhop(rmt->pft,
./rmt.c:                     &(rmt->ingress.cache.pids),
./rmt.c:                     &(rmt->ingress.cache.count))) {
./rmt.c:                return -1;
./rmt.c:        if (rmt->ingress.cache.count > 0) {
./rmt.c:                for (i = 1; i < rmt->ingress.cache.count; i++) {
./rmt.c:                        if (kfa_flow_sdu_write(rmt->kfa,
./rmt.c:                                               rmt->ingress.cache.pids[i],
./rmt.c:                                LOG_ERR("Cannot write SDU to KFA port-id %d",
./rmt.c:                                        rmt->ingress.cache.pids[i]);
./rmt.c:                if (kfa_flow_sdu_write(rmt->kfa,
./rmt.c:                                    rmt->ingress.cache.pids[0],
./rmt.c:                        LOG_ERR("Cannot write SDU to KFA port-id %d",
./rmt.c:                                rmt->ingress.cache.pids[0]);
./rmt.c:                return -1;
./rmt.c:        spin_lock(&tmp->ingress.queues->lock);
./rmt.c:        hash_for_each_safe(tmp->ingress.queues->queues,
./rmt.c:                sdu = (struct sdu *) rfifo_pop(entry->queue);
./rmt.c:                port_id = entry->port_id;
./rmt.c:                spin_unlock(&tmp->ingress.queues->lock);
./rmt.c:                        spin_lock(&tmp->ingress.queues->lock);
./rmt.c:                        spin_lock(&tmp->ingress.queues->lock);
./rmt.c:                        spin_lock(&tmp->ingress.queues->lock);
./rmt.c:                if (tmp->address != dst_addr) {
./rmt.c:                                 * enqueue PDU in pdus_dt[dest-addr, qos-id]
./rmt.c:                spin_lock(&tmp->ingress.queues->lock);
./rmt.c:        spin_unlock(&tmp->ingress.queues->lock);
./rmt.c:                return -1;
./rmt.c:                return -1;
./rmt.c:                LOG_ERR("Wrong port-id %d", from);
./rmt.c:                return -1;
./rmt.c:        if (!instance->ingress.queues) {
./rmt.c:                return -1;
./rmt.c:                LOG_ERR("Cannot receive SDU from port-id %d", from);
./rmt.c:                return -1;
./rmt.c:        spin_lock(&instance->ingress.queues->lock);
./rmt.c:        r_queue = qmap_find(instance->ingress.queues, from);
./rmt.c:                spin_unlock(&instance->ingress.queues->lock);
./rmt.c:                return -1;
./rmt.c:        if (rfifo_push_ni(r_queue->queue, sdu)) {
./rmt.c:                spin_unlock(&instance->ingress.queues->lock);
./rmt.c:                return -1;
./rmt.c:        spin_unlock(&instance->ingress.queues->lock);
./rmt.c:        ASSERT(instance->ingress.wq);
./rmt.c:        if (rwq_work_post(instance->ingress.wq, item)) {
./rmt.c:                LOG_ERR("Cannot post work (SDU) to ingress work-queue");
./rmt.c:                spin_lock(&instance->ingress.queues->lock);
./rmt.c:                r_queue = qmap_find(instance->ingress.queues, from);
./rmt.c:                        tmp = rfifo_pop(r_queue->queue);
./rmt.c:                spin_unlock(&instance->ingress.queues->lock);
./rmt.c:                return -1;
./rmt.c:{ return (instance && instance->pft) ? true : false; }
./rmt.c:        return is_rmt_pft_ok(instance) ? pft_add(instance->pft,
./rmt.c:                                                 count) : -1;
./rmt.c:        return is_rmt_pft_ok(instance) ? pft_remove(instance->pft,
./rmt.c:                                                    count) : -1;
./rmt.c:        return is_rmt_pft_ok(instance) ? pft_dump(instance->pft,
./rmt.c:                                                  entries) : -1;
./rmt.c:        return is_rmt_pft_ok(instance) ? pft_flush(instance->pft) : -1;
./rmt.c:        rmt->egress.queues = qmap_create();
./rmt.c:        if (!rmt->egress.queues) {
./rmt.c:        LOG_DBG("Creating rmt-egress-wq");
./rmt.c:        name = create_name("egress-wq", rmt);
./rmt.c:        rmt->egress.wq = rwq_create(name);
./rmt.c:        if (!rmt->egress.wq) {
./rmt.c:        tmp = qmap_find(rmt->egress.queues, id);
./rmt.c:        spin_lock(&rmt->egress.queues->lock);
./rmt.c:        tmp = qmap_find(rmt->egress.queues, id);
./rmt.c:                spin_unlock(&rmt->egress.queues->lock);
./rmt.c:        if (rfifo_push_ni(tmp->queue, pdu)) {
./rmt.c:                spin_unlock(&rmt->egress.queues->lock);
./rmt.c:        spin_unlock(&rmt->egress.queues->lock);
./rmt.c:                hash_for_each_safe(rmt->egress.queues->queues,
./rmt.c:                        spin_lock(&rmt->egress.queues->lock);
./rmt.c:                        pdu     = (struct pdu *) rfifo_pop(entry->queue);
./rmt.c:                        port_id = entry->port_id;
./rmt.c:                        spin_unlock(&rmt->egress.queues->lock);
./rmt.c:        rmt->ingress.queues = qmap_create();
./rmt.c:        if (!rmt->ingress.queues) {
./rmt.c:        LOG_DBG("Creating rmt-ingress-wq");
./rmt.c:        name = create_name("ingress-wq", rmt);
./rmt.c:        rmt->ingress.wq = rwq_create(name);
./rmt.c:        if (!rmt->ingress.wq) {
./rmt.c:        tmp = qmap_find(rmt->ingress.queues, id);
./rmt.c:        spin_lock(&rmt->ingress.queues->lock);
./rmt.c:        tmp = qmap_find(rmt->ingress.queues, id);
./rmt.c:                spin_unlock(&rmt->ingress.queues->lock);
./rmt.c:        if (rfifo_push_ni(tmp->queue, sdu)) {
./rmt.c:                spin_unlock(&rmt->ingress.queues->lock);
./rmt.c:        spin_unlock(&rmt->ingress.queues->lock);
./rmt.c:                hash_for_each_safe(rmt->ingress.queues->queues,
./rmt.c:                        spin_lock(&rmt->ingress.queues->lock);
./rmt.c:                        sdu     = (struct sdu *) rfifo_pop(entry->queue);
./rmt.c:                        pid = entry->port_id;
./rmt.c:                        spin_unlock(&rmt->ingress.queues->lock);
./rmt.c:                                 * enqueue PDU in pdus_dt[dest-addr, qos-id]
Binary file ./debug.o matches
./personality.h:#include "ipcp-instances.h"
./personality.h:/* Pre-declared, the personality should define it properly */
./personality.h:        /* Takes the ownership of the sdu with port-id */
./personality.h:        /* Passes the ownership of the sdu with port-id */
./.ipcp.o.cmd:cmd_net/rina/ipcp.o := gcc -Wp,-MD,net/rina/.ipcp.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -fstack-protector -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -DCC_HAVE_ASM_GOTO  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(ipcp)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_ipcp.o net/rina/ipcp.c
./.ipcp.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.ipcp.o.cmd:  include/linux/compiler-gcc.h \
./.ipcp.o.cmd:  include/linux/compiler-gcc4.h \
./.ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.ipcp.o.cmd:  include/asm-generic/int-ll64.h \
./.ipcp.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.ipcp.o.cmd:  include/asm-generic/bitsperlong.h \
./.ipcp.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.ipcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.ipcp.o.cmd:  include/asm-generic/bitops/fls64.h \
./.ipcp.o.cmd:  include/asm-generic/bitops/find.h \
./.ipcp.o.cmd:  include/asm-generic/bitops/sched.h \
./.ipcp.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.ipcp.o.cmd:  include/asm-generic/bitops/le.h \
./.ipcp.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.ipcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./buffer.h:/* NOTE: The following function may return -1 */
./buffer.h:/* NOTE: Returns the raw buffer memory, watch-out ... */
./.ipcp-factories.o.cmd:cmd_net/rina/ipcp-factories.o := gcc -Wp,-MD,net/rina/.ipcp-factories.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(ipcp_factories)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_ipcp-factories.o net/rina/ipcp-factories.c
./.ipcp-factories.o.cmd:source_net/rina/ipcp-factories.o := net/rina/ipcp-factories.c
./.ipcp-factories.o.cmd:deps_net/rina/ipcp-factories.o := \
./.ipcp-factories.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.ipcp-factories.o.cmd:  include/asm-generic/int-ll64.h \
./.ipcp-factories.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.ipcp-factories.o.cmd:  include/asm-generic/bitsperlong.h \
./.ipcp-factories.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.ipcp-factories.o.cmd:  include/linux/compiler-gcc.h \
./.ipcp-factories.o.cmd:  include/linux/compiler-gcc4.h \
./.ipcp-factories.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.ipcp-factories.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.ipcp-factories.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.ipcp-factories.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.ipcp-factories.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.ipcp-factories.o.cmd:  include/asm-generic/ptrace.h \
./.ipcp-factories.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.ipcp-factories.o.cmd:  include/asm-generic/bitops/fls64.h \
./.ipcp-factories.o.cmd:  include/asm-generic/bitops/find.h \
./.ipcp-factories.o.cmd:  include/asm-generic/bitops/sched.h \
./.ipcp-factories.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.ipcp-factories.o.cmd:  include/asm-generic/bitops/le.h \
./.ipcp-factories.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.ipcp-factories.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.ipcp-factories.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.ipcp-factories.o.cmd:  include/asm-generic/percpu.h \
./.ipcp-factories.o.cmd:  include/linux/percpu-defs.h \
./.ipcp-factories.o.cmd:  include/asm-generic/memory_model.h \
./.ipcp-factories.o.cmd:  include/asm-generic/getorder.h \
./.ipcp-factories.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.ipcp-factories.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.ipcp-factories.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.ipcp-factories.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.ipcp-factories.o.cmd:  include/asm-generic/ioctl.h \
./.ipcp-factories.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.ipcp-factories.o.cmd:  include/asm-generic/bug.h \
./.ipcp-factories.o.cmd:  include/asm-generic/atomic-long.h \
./.ipcp-factories.o.cmd:  include/asm-generic/param.h \
./.ipcp-factories.o.cmd:  include/uapi/asm-generic/param.h \
./.ipcp-factories.o.cmd:  include/linux/pageblock-flags.h \
./.ipcp-factories.o.cmd:  include/linux/page-flags-layout.h \
./.ipcp-factories.o.cmd:  include/asm-generic/topology.h \
./.ipcp-factories.o.cmd:  include/asm-generic/early_ioremap.h \
./.ipcp-factories.o.cmd:  include/asm-generic/iomap.h \
./.ipcp-factories.o.cmd:  include/asm-generic/pci_iomap.h \
./.ipcp-factories.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.ipcp-factories.o.cmd:  include/asm-generic/kmap_types.h \
./.ipcp-factories.o.cmd:  include/asm-generic/fixmap.h \
./.ipcp-factories.o.cmd:  include/asm-generic/sections.h \
./.ipcp-factories.o.cmd:  net/rina/ipcp-factories.h \
./.ipcp-factories.o.cmd:  net/rina/ipcp-instances.h \
./.ipcp-factories.o.cmd:net/rina/ipcp-factories.o: $(deps_net/rina/ipcp-factories.o)
./.ipcp-factories.o.cmd:$(deps_net/rina/ipcp-factories.o):
Binary file ./qos.o matches
Binary file ./rnl-utils.o matches
./.cidm.o.cmd:cmd_net/rina/cidm.o := gcc -Wp,-MD,net/rina/.cidm.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(cidm)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_cidm.o net/rina/cidm.c
./.cidm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.cidm.o.cmd:  include/asm-generic/int-ll64.h \
./.cidm.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.cidm.o.cmd:  include/asm-generic/bitsperlong.h \
./.cidm.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.cidm.o.cmd:  include/linux/compiler-gcc.h \
./.cidm.o.cmd:  include/linux/compiler-gcc4.h \
./.cidm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.cidm.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.cidm.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.cidm.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.cidm.o.cmd:  include/asm-generic/ptrace.h \
./.cidm.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.cidm.o.cmd:  include/asm-generic/bitops/fls64.h \
./.cidm.o.cmd:  include/asm-generic/bitops/find.h \
./.cidm.o.cmd:  include/asm-generic/bitops/sched.h \
./.cidm.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.cidm.o.cmd:  include/asm-generic/bitops/le.h \
./.cidm.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.cidm.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.cidm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.cidm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.cidm.o.cmd:  include/asm-generic/bug.h \
./.cidm.o.cmd:  include/asm-generic/percpu.h \
./.cidm.o.cmd:  include/linux/percpu-defs.h \
./.cidm.o.cmd:  include/asm-generic/memory_model.h \
./.cidm.o.cmd:  include/asm-generic/getorder.h \
./.cidm.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.cidm.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.cidm.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.cidm.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.cidm.o.cmd:  include/asm-generic/ioctl.h \
./.cidm.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.cidm.o.cmd:  include/asm-generic/atomic-long.h \
./.cidm.o.cmd:  include/asm-generic/param.h \
./.cidm.o.cmd:  include/uapi/asm-generic/param.h \
./.cidm.o.cmd:  include/asm-generic/topology.h \
./.cidm.o.cmd:  include/asm-generic/early_ioremap.h \
./.cidm.o.cmd:  include/asm-generic/iomap.h \
./.cidm.o.cmd:  include/asm-generic/pci_iomap.h \
./.cidm.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.cidm.o.cmd:  include/asm-generic/kmap_types.h \
./.cidm.o.cmd:  include/asm-generic/fixmap.h \
./.cidm.o.cmd:  include/linux/pageblock-flags.h \
./.cidm.o.cmd:  include/linux/page-flags-layout.h \
./.cidm.o.cmd:  include/asm-generic/sections.h \
./kipcm-utils.h: * K-IPCM related utilities
./dt.c:#include "dt-utils.h"
./dt.c:        instance->sv->max_flow_pdu_size = mfps;
./dt.c:        instance->sv->max_flow_sdu_size = mfss;
./dt.c:        instance->sv->MPL               = mpl;
./dt.c:        instance->sv->A                 = a;
./dt.c:        instance->sv->R                 = r;
./dt.c:        instance->sv->tr                = tr;
./dt.c:        tmp->sv = rkzalloc(sizeof(*tmp->sv), GFP_KERNEL);
./dt.c:        if (!tmp->sv) {
./dt.c:        *tmp->sv = default_sv;
./dt.c:        spin_lock_init(&tmp->lock);
./dt.c:                return -1;
./dt.c:        if (dt->dtp) {
./dt.c:                        "unbind it first", dt->dtp, dt);
./dt.c:                return -1;
./dt.c:        if (dt->dtcp) {
./dt.c:                        "unbind it first", dt->dtcp, dt);
./dt.c:                return -1;
./dt.c:        if (dt->cwq) {
./dt.c:                if (cwq_destroy(dt->cwq)) {
./dt.c:                        return -1;
./dt.c:                dt->cwq = NULL; /* Useful */
./dt.c:        if (dt->rtxq) {
./dt.c:                if (rtxq_destroy(dt->rtxq)) {
./dt.c:                        return -1;
./dt.c:                dt->rtxq = NULL; /* Useless */
./dt.c:        rkfree(dt->sv);
./dt.c:                return -1;
./dt.c:                return -1;
./dt.c:        spin_lock(&dt->lock);
./dt.c:        if (dt->dtp) {
./dt.c:                spin_unlock(&dt->lock);
./dt.c:                return -1;
./dt.c:        dt->dtp = dtp;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        spin_lock(&dt->lock);
./dt.c:        if (!dt->dtp) {
./dt.c:                spin_unlock(&dt->lock);
./dt.c:        tmp     = dt->dtp;
./dt.c:        dt->dtp = NULL;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:                return -1;
./dt.c:                return -1;
./dt.c:        spin_lock(&dt->lock);
./dt.c:        if (dt->dtcp) {
./dt.c:                spin_unlock(&dt->lock);
./dt.c:                return -1;
./dt.c:        dt->dtcp = dtcp;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        spin_lock(&dt->lock);
./dt.c:        if (!dt->dtcp) {
./dt.c:                spin_unlock(&dt->lock);
./dt.c:        tmp      = dt->dtcp;
./dt.c:        dt->dtcp = NULL;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:                return -1;
./dt.c:                return -1;
./dt.c:        spin_lock(&dt->lock);
./dt.c:        if (dt->cwq) {
./dt.c:                spin_unlock(&dt->lock);
./dt.c:                return -1;
./dt.c:        dt->cwq = cwq;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        spin_lock(&dt->lock);
./dt.c:        if (!dt->cwq) {
./dt.c:                spin_unlock(&dt->lock);
./dt.c:        tmp     = dt->cwq;
./dt.c:        dt->cwq = NULL;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        spin_lock(&dt->lock);
./dt.c:        if (!dt->rtxq) {
./dt.c:                spin_unlock(&dt->lock);
./dt.c:        tmp      = dt->rtxq;
./dt.c:        dt->rtxq = NULL;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:                return -1;
./dt.c:                return -1;
./dt.c:        spin_lock(&dt->lock);
./dt.c:        if (dt->rtxq) {
./dt.c:                spin_unlock(&dt->lock);
./dt.c:                return -1;
./dt.c:        dt->rtxq = rtxq;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        spin_lock(&dt->lock);
./dt.c:        tmp = dt->dtp;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        spin_lock(&dt->lock);
./dt.c:        tmp = dt->dtcp;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        spin_lock(&dt->lock);
./dt.c:        tmp = dt->cwq;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        spin_lock(&dt->lock);
./dt.c:        tmp = dt->rtxq;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        if (!dt || !dt->sv)
./dt.c:        spin_lock(&dt->lock);
./dt.c:        tmp = dt->sv->max_flow_pdu_size;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        if (!dt || !dt->sv)
./dt.c:        spin_lock(&dt->lock);
./dt.c:        tmp = dt->sv->max_flow_sdu_size;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        if (!dt || !dt->sv)
./dt.c:        spin_lock(&dt->lock);
./dt.c:        tmp = dt->sv->MPL;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        if (!dt || !dt->sv)
./dt.c:        spin_lock(&dt->lock);
./dt.c:        tmp = dt->sv->R;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        if (!dt || !dt->sv)
./dt.c:        spin_lock(&dt->lock);
./dt.c:        tmp = dt->sv->A;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        if (!dt || !dt->sv)
./dt.c:        spin_lock(&dt->lock);
./dt.c:        tmp = dt->sv->rcv_left_window_edge;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        if (!dt || !dt->sv)
./dt.c:                return -1;
./dt.c:        spin_lock(&dt->lock);
./dt.c:        dt->sv->rcv_left_window_edge = rcv_lft_win;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        if (!dt || !dt->sv)
./dt.c:        spin_lock(&dt->lock);
./dt.c:        tmp = dt->sv->window_closed;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        if (!dt || !dt->sv)
./dt.c:                return -1;
./dt.c:        spin_lock(&dt->lock);
./dt.c:        dt->sv->window_closed = closed;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        if (!dt || !dt->sv)
./dt.c:                return -1;
./dt.c:        spin_lock(&dt->lock);
./dt.c:        tmp = dt->sv->last_seq_num_sent;
./dt.c:        spin_unlock(&dt->lock);
./dt.c:        ASSERT(dt->sv);
./dt.c:        spin_lock(&dt->lock);
./dt.c:        tmp = dt->sv->tr;
./dt.c:        spin_unlock(&dt->lock);
Binary file ./buffer.o matches
Binary file ./rinarp/arp826-rxtx.o matches
./rinarp/rinarp.c:#include "arp826-utils.h"
./rinarp/rinarp.c:        if (handle->pa) gpa_destroy(handle->pa);
./rinarp/rinarp.c:        if (handle->ha) gha_destroy(handle->ha);
./rinarp/rinarp.c:        handle->pa = gpa_dup(pa);
./rinarp/rinarp.c:        handle->ha = gha_dup(ha);
./rinarp/rinarp.c:        handle->dev = dev;
./rinarp/rinarp.c:        if (!handle->pa || !handle->ha || !handle->dev) {
./rinarp/rinarp.c:                gpa_is_ok(handle->pa) &&
./rinarp/rinarp.c:                gha_is_ok(handle->ha) &&
./rinarp/rinarp.c:                handle->dev);
./rinarp/rinarp.c:        if (arp826_add(dev, ETH_P_RINA, handle->pa, handle->ha)) {
./rinarp/rinarp.c:                return -1;
./rinarp/rinarp.c:        arp826_remove(handle->dev, ETH_P_RINA, handle->pa, handle->ha);
./rinarp/rinarp.c:                return -1;
./rinarp/rinarp.c:        return arp826_resolve_gpa(handle->dev, ETH_P_RINA,
./rinarp/rinarp.c:                                  handle->pa, handle->ha, tpa,
./rinarp/rinarp.c:        return arp826_find_gpa(handle->dev, ETH_P_RINA, ha);
./rinarp/.built-in.o.cmd:cmd_net/rina/rinarp/built-in.o :=  rm -f net/rina/rinarp/built-in.o; ar rcsD net/rina/rinarp/built-in.o
./rinarp/.rinarp.o.cmd:cmd_net/rina/rinarp/rinarp.o := gcc -Wp,-MD,net/rina/rinarp/.rinarp.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rinarp)"  -D"KBUILD_MODNAME=KBUILD_STR(rinarp)" -c -o net/rina/rinarp/.tmp_rinarp.o net/rina/rinarp/rinarp.c
./rinarp/.rinarp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/int-ll64.h \
./rinarp/.rinarp.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/bitsperlong.h \
./rinarp/.rinarp.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rinarp/.rinarp.o.cmd:  include/linux/compiler-gcc.h \
./rinarp/.rinarp.o.cmd:  include/linux/compiler-gcc4.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rinarp/.rinarp.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/ptrace.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/bitops/fls64.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/bitops/find.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/bitops/sched.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/bitops/le.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/percpu.h \
./rinarp/.rinarp.o.cmd:  include/linux/percpu-defs.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/bug.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/memory_model.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/getorder.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/ioctl.h \
./rinarp/.rinarp.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/atomic-long.h \
./rinarp/.rinarp.o.cmd:  include/linux/pageblock-flags.h \
./rinarp/.rinarp.o.cmd:  include/linux/page-flags-layout.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/param.h \
./rinarp/.rinarp.o.cmd:  include/uapi/asm-generic/param.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/topology.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/early_ioremap.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/iomap.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/pci_iomap.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/kmap_types.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/fixmap.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/module.h \
./rinarp/.rinarp.o.cmd:  include/linux/page-debug-flags.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/pgtable.h \
./rinarp/.rinarp.o.cmd:  include/linux/page-flags.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/scatterlist.h \
./rinarp/.rinarp.o.cmd:  include/linux/dma-mapping.h \
./rinarp/.rinarp.o.cmd:  include/linux/dma-attrs.h \
./rinarp/.rinarp.o.cmd:  include/linux/dma-direction.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./rinarp/.rinarp.o.cmd:  include/linux/dma-debug.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/dma-coherent.h \
./rinarp/.rinarp.o.cmd:  include/linux/dma-contiguous.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/dma-mapping-common.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/cputime.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/cputime_jiffies.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/siginfo.h \
./rinarp/.rinarp.o.cmd:  include/uapi/asm-generic/siginfo.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/resource.h \
./rinarp/.rinarp.o.cmd:  include/uapi/asm-generic/resource.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/delay.h \
./rinarp/.rinarp.o.cmd:  include/linux/radix-tree.h \
./rinarp/.rinarp.o.cmd:  include/linux/percpu-rwsem.h \
./rinarp/.rinarp.o.cmd:  include/asm-generic/sections.h \
./rinarp/.rinarp.o.cmd:  include/linux/percpu-refcount.h \
./rinarp/.rinarp.o.cmd:  net/rina/rinarp/arp826-utils.h \
./rinarp/.rinarp.o.cmd:  /home/irati/linux/net/rina/rinarp/arp826-utils.h \
./rinarp/.arp826-maps.o.cmd:cmd_net/rina/rinarp/arp826-maps.o := gcc -Wp,-MD,net/rina/rinarp/.arp826-maps.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(arp826_maps)"  -D"KBUILD_MODNAME=KBUILD_STR(arp826)" -c -o net/rina/rinarp/.tmp_arp826-maps.o net/rina/rinarp/arp826-maps.c
./rinarp/.arp826-maps.o.cmd:source_net/rina/rinarp/arp826-maps.o := net/rina/rinarp/arp826-maps.c
./rinarp/.arp826-maps.o.cmd:deps_net/rina/rinarp/arp826-maps.o := \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/int-ll64.h \
./rinarp/.arp826-maps.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/bitsperlong.h \
./rinarp/.arp826-maps.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/compiler-gcc.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/compiler-gcc4.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rinarp/.arp826-maps.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/ptrace.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/bitops/fls64.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/bitops/find.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/bitops/sched.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/bitops/le.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/percpu.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/percpu-defs.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/bug.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/memory_model.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/getorder.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/ioctl.h \
./rinarp/.arp826-maps.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/atomic-long.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/param.h \
./rinarp/.arp826-maps.o.cmd:  include/uapi/asm-generic/param.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/topology.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/early_ioremap.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/iomap.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/pci_iomap.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/kmap_types.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/fixmap.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/pageblock-flags.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/page-flags-layout.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/sections.h \
./rinarp/.arp826-maps.o.cmd:  net/rina/rinarp/arp826-maps.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/delay.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/page-debug-flags.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/pgtable.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/page-flags.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/scatterlist.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/dma-mapping.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/dma-attrs.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/dma-direction.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/dma-debug.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/dma-coherent.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/dma-contiguous.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/dma-mapping-common.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/cputime.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/cputime_jiffies.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./rinarp/.arp826-maps.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/siginfo.h \
./rinarp/.arp826-maps.o.cmd:  include/uapi/asm-generic/siginfo.h \
./rinarp/.arp826-maps.o.cmd:  include/asm-generic/resource.h \
./rinarp/.arp826-maps.o.cmd:  include/uapi/asm-generic/resource.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/radix-tree.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/percpu-rwsem.h \
./rinarp/.arp826-maps.o.cmd:  include/linux/percpu-refcount.h \
./rinarp/.arp826-maps.o.cmd:net/rina/rinarp/arp826-maps.o: $(deps_net/rina/rinarp/arp826-maps.o)
./rinarp/.arp826-maps.o.cmd:$(deps_net/rina/rinarp/arp826-maps.o):
./rinarp/arp826-rxtx.h:#include "arp826-utils.h"
./rinarp/arp826-arm.c:#define RINA_PREFIX "arp826-arm"
./rinarp/arp826-arm.c:#include "arp826-utils.h"
./rinarp/arp826-arm.c:#include "arp826-tables.h"
./rinarp/arp826-arm.c:#include "arp826-rxtx.h"
./rinarp/arp826-arm.c:#include "arp826-arm.h"
./rinarp/arp826-arm.c:        LOG_DBG("Dumping a->sha");
./rinarp/arp826-arm.c:        gha_dump(a->sha);
./rinarp/arp826-arm.c:        gha_dump(b->tha);
./rinarp/arp826-arm.c:        LOG_DBG("Dumping a->tpa");
./rinarp/arp826-arm.c:        gpa_dump(a->tpa);
./rinarp/arp826-arm.c:        gpa_dump(b->spa);
./rinarp/arp826-arm.c:        LOG_DBG("Dumping a->spa");
./rinarp/arp826-arm.c:        gpa_dump(a->spa);
./rinarp/arp826-arm.c:        gpa_dump(b->tpa);
./rinarp/arp826-arm.c:        if (a->dev != b->dev)
./rinarp/arp826-arm.c:        if (!(a->ptype == b->ptype)       ||
./rinarp/arp826-arm.c:            !gha_is_equal(a->sha, b->tha) ||
./rinarp/arp826-arm.c:            !gpa_is_equal(a->tpa, b->spa) ||
./rinarp/arp826-arm.c:            !gpa_is_equal(a->spa, b->tpa))
./rinarp/arp826-arm.c:                !data->spa || !data->sha ||
./rinarp/arp826-arm.c:                !data->tpa || !data->tha) ? false : true;
./rinarp/arp826-arm.c:        if (data->spa) gpa_destroy(data->spa);
./rinarp/arp826-arm.c:        if (data->sha) gha_destroy(data->sha);
./rinarp/arp826-arm.c:        if (data->tpa) gpa_destroy(data->tpa);
./rinarp/arp826-arm.c:        if (data->tha) gha_destroy(data->tha);
./rinarp/arp826-arm.c:        tmp->dev   = dev;
./rinarp/arp826-arm.c:        tmp->ptype = ptype;
./rinarp/arp826-arm.c:        tmp->spa   = spa;
./rinarp/arp826-arm.c:        tmp->sha   = sha;
./rinarp/arp826-arm.c:        tmp->tpa   = tpa;
./rinarp/arp826-arm.c:        tmp->tha   = tha;
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:                if (is_resolve_data_matching(pos->data, tmp)) {
./rinarp/arp826-arm.c:                        ASSERT(pos->notify);
./rinarp/arp826-arm.c:                        pos->notify(pos->opaque,
./rinarp/arp826-arm.c:                                    tmp->spa,
./rinarp/arp826-arm.c:                                    tmp->sha);
./rinarp/arp826-arm.c:                        list_del(&pos->next);
./rinarp/arp826-arm.c:                        resolve_data_destroy(pos->data);
./rinarp/arp826-arm.c:/* FIXME: We should have a wq-alike job posting approach ... */
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:        resolution->data = resolve_data_create(dev, ptype,
./rinarp/arp826-arm.c:        if (!resolution->data) {
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:        resolution->notify = notify;
./rinarp/arp826-arm.c:        resolution->opaque = opaque;
./rinarp/arp826-arm.c:        INIT_LIST_HEAD(&resolution->next);
./rinarp/arp826-arm.c:        list_add(&resolution->next, &resolutions_ongoing);
./rinarp/arp826-arm.c:                resolve_data_destroy(resolution->data);
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:        arm_wq = rwq_create("arp826-wq");
./rinarp/arp826-arm.c:                return -1;
./rinarp/arp826-arm.c:                resolve_data_destroy(pos->data);
Binary file ./rinarp/arp826-arm.o matches
Binary file ./rinarp/rinarp.ko matches
./rinarp/arp826-utils.c:#define RINA_PREFIX "arp826-utils"
./rinarp/arp826-utils.c:#include "arp826-utils.h"
./rinarp/arp826-utils.c: *       in non-static ones there should be plenty
./rinarp/arp826-utils.c:        tmp->length  = length;
./rinarp/arp826-utils.c:        tmp->address = rkmalloc(tmp->length, flags);
./rinarp/arp826-utils.c:        if (!tmp->address) {
./rinarp/arp826-utils.c:        memcpy(tmp->address, address, tmp->length);
./rinarp/arp826-utils.c:{ return (!gpa || gpa->address == NULL || gpa->length == 0) ? false : true; }
./rinarp/arp826-utils.c:        rkfree(gpa->address);
./rinarp/arp826-utils.c:        return gpa_create_gfp(flags, gpa->address, gpa->length);
./rinarp/arp826-utils.c:        return gpa->address;
./rinarp/arp826-utils.c:        return gpa->length;
./rinarp/arp826-utils.c:        if (gpa->length == 0) {
./rinarp/arp826-utils.c:        tmp = rkmalloc(gpa->length * 2 + 1, GFP_ATOMIC);
./rinarp/arp826-utils.c:        for (i = 0; i < gpa->length; i++) {
./rinarp/arp826-utils.c:                p += sprintf(p, "%02X", gpa->address[i]);
./rinarp/arp826-utils.c:        LOG_DBG("GPA %pK (%zd): 0x%s", gpa, gpa->length, tmp);
./rinarp/arp826-utils.c:                return -1;
./rinarp/arp826-utils.c:                filler, gpa->length);
./rinarp/arp826-utils.c:        position = memscan(gpa->address, filler, gpa->length);
./rinarp/arp826-utils.c:        if (position >= gpa->address + gpa->length) {
./rinarp/arp826-utils.c:        length = position - gpa->address;
./rinarp/arp826-utils.c:                return -1;
./rinarp/arp826-utils.c:        memcpy(new_address, gpa->address, length);
./rinarp/arp826-utils.c:        rkfree(gpa->address);
./rinarp/arp826-utils.c:        gpa->address = new_address;
./rinarp/arp826-utils.c:        gpa->length  = length;
./rinarp/arp826-utils.c:                return -1;
./rinarp/arp826-utils.c:        if (length == 0 || length < gpa->length) {
./rinarp/arp826-utils.c:                return -1;
./rinarp/arp826-utils.c:        if (gpa->length == length) {
./rinarp/arp826-utils.c:        ASSERT(length > gpa->length);
./rinarp/arp826-utils.c:                return -1;
./rinarp/arp826-utils.c:        memcpy(new_address, gpa->address, gpa->length);
./rinarp/arp826-utils.c:        memset(new_address + gpa->length, filler, length - gpa->length);
./rinarp/arp826-utils.c:        rkfree(gpa->address);
./rinarp/arp826-utils.c:        gpa->address = new_address;
./rinarp/arp826-utils.c:        gpa->length  = length;
./rinarp/arp826-utils.c:        LOG_DBG("GPA is now %zd characters long", gpa->length);
./rinarp/arp826-utils.c:        ASSERT(a && a->length != 0 && a->address != NULL);
./rinarp/arp826-utils.c:        ASSERT(b && b->length != 0 && b->address != NULL);
./rinarp/arp826-utils.c:        if (a->length != b->length)
./rinarp/arp826-utils.c:        ASSERT(a->length == b->length);
./rinarp/arp826-utils.c:        if (memcmp(a->address, b->address, a->length))
./rinarp/arp826-utils.c:        if (gha->type == MAC_ADDR_802_3) {
./rinarp/arp826-utils.c:                        gha->data.mac_802_3[5],
./rinarp/arp826-utils.c:                        gha->data.mac_802_3[4],
./rinarp/arp826-utils.c:                        gha->data.mac_802_3[3],
./rinarp/arp826-utils.c:                        gha->data.mac_802_3[2],
./rinarp/arp826-utils.c:                        gha->data.mac_802_3[1],
./rinarp/arp826-utils.c:                        gha->data.mac_802_3[0]);
./rinarp/arp826-utils.c:{ return (!gha || gha->type != MAC_ADDR_802_3) ? false : true; }
./rinarp/arp826-utils.c:        gha->type = type;
./rinarp/arp826-utils.c:                memcpy(gha->data.mac_802_3,
./rinarp/arp826-utils.c:                       sizeof(gha->data.mac_802_3));
./rinarp/arp826-utils.c:                return -1;
./rinarp/arp826-utils.c:        switch (gha->type) {
./rinarp/arp826-utils.c:        case MAC_ADDR_802_3: tmp = sizeof(gha->data.mac_802_3); break;
./rinarp/arp826-utils.c:        switch (gha->type) {
./rinarp/arp826-utils.c:        case MAC_ADDR_802_3: tmp = gha->data.mac_802_3; break;
./rinarp/arp826-utils.c:        return gha->type;
./rinarp/arp826-utils.c:        if (a->type != b->type)
./rinarp/arp826-utils.c:        ASSERT(a->type == b->type);
./rinarp/arp826-utils.c:        switch (a->type) {
./rinarp/arp826-utils.c:                v = (memcmp(a->data.mac_802_3,
./rinarp/arp826-utils.c:                            b->data.mac_802_3,
./rinarp/arp826-utils.c:                            sizeof(a->data.mac_802_3)) == 0) ? true : false;
./rinarp/arp826-utils.c:                LOG_DBG("addr_len: %d", dev->addr_len);
./rinarp/arp826-utils.c:                if (dev->addr_len == gha_address_length(ha)) {
./rinarp/arp826-utils.c:                                if (dev->addr_len == 6) {
./rinarp/arp826-utils.c:                                                hwa->addr[5],
./rinarp/arp826-utils.c:                                                hwa->addr[4],
./rinarp/arp826-utils.c:                                                hwa->addr[3],
./rinarp/arp826-utils.c:                                                hwa->addr[2],
./rinarp/arp826-utils.c:                                                hwa->addr[1],
./rinarp/arp826-utils.c:                                                hwa->addr[0]);
./rinarp/arp826-utils.c:                                if (!memcmp(hwa->addr,
./rinarp/.arp826-tables.o.cmd:cmd_net/rina/rinarp/arp826-tables.o := gcc -Wp,-MD,net/rina/rinarp/.arp826-tables.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(arp826_tables)"  -D"KBUILD_MODNAME=KBUILD_STR(arp826)" -c -o net/rina/rinarp/.tmp_arp826-tables.o net/rina/rinarp/arp826-tables.c
./rinarp/.arp826-tables.o.cmd:source_net/rina/rinarp/arp826-tables.o := net/rina/rinarp/arp826-tables.c
./rinarp/.arp826-tables.o.cmd:deps_net/rina/rinarp/arp826-tables.o := \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/int-ll64.h \
./rinarp/.arp826-tables.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/bitsperlong.h \
./rinarp/.arp826-tables.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/compiler-gcc.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/compiler-gcc4.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rinarp/.arp826-tables.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/ptrace.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/bitops/fls64.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/bitops/find.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/bitops/sched.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/bitops/le.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/percpu.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/percpu-defs.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/memory_model.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/getorder.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/ioctl.h \
./rinarp/.arp826-tables.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/bug.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/atomic-long.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/param.h \
./rinarp/.arp826-tables.o.cmd:  include/uapi/asm-generic/param.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/pageblock-flags.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/page-flags-layout.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/topology.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/early_ioremap.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/iomap.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/pci_iomap.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/kmap_types.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/fixmap.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/delay.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/page-debug-flags.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/pgtable.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/page-flags.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/scatterlist.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/dma-mapping.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/dma-attrs.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/dma-direction.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/dma-debug.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/dma-coherent.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/dma-contiguous.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/dma-mapping-common.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/cputime.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/cputime_jiffies.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/siginfo.h \
./rinarp/.arp826-tables.o.cmd:  include/uapi/asm-generic/siginfo.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/resource.h \
./rinarp/.arp826-tables.o.cmd:  include/uapi/asm-generic/resource.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/radix-tree.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/percpu-rwsem.h \
./rinarp/.arp826-tables.o.cmd:  include/asm-generic/sections.h \
./rinarp/.arp826-tables.o.cmd:  include/linux/percpu-refcount.h \
./rinarp/.arp826-tables.o.cmd:  /home/irati/linux/net/rina/rinarp/arp826-utils.h \
./rinarp/.arp826-tables.o.cmd:  net/rina/rinarp/arp826-utils.h \
./rinarp/.arp826-tables.o.cmd:  net/rina/rinarp/arp826-maps.h \
./rinarp/.arp826-tables.o.cmd:  net/rina/rinarp/arp826-tables.h \
./rinarp/.arp826-tables.o.cmd:net/rina/rinarp/arp826-tables.o: $(deps_net/rina/rinarp/arp826-tables.o)
./rinarp/.arp826-tables.o.cmd:$(deps_net/rina/rinarp/arp826-tables.o):
./rinarp/.rinarp.mod.o.cmd:cmd_net/rina/rinarp/rinarp.mod.o := gcc -Wp,-MD,net/rina/rinarp/.rinarp.mod.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rinarp.mod)"  -D"KBUILD_MODNAME=KBUILD_STR(rinarp)" -DMODULE  -c -o net/rina/rinarp/rinarp.mod.o net/rina/rinarp/rinarp.mod.c
./rinarp/.rinarp.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/int-ll64.h \
./rinarp/.rinarp.mod.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/bitsperlong.h \
./rinarp/.rinarp.mod.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rinarp/.rinarp.mod.o.cmd:  include/linux/compiler-gcc.h \
./rinarp/.rinarp.mod.o.cmd:  include/linux/compiler-gcc4.h \
./rinarp/.rinarp.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rinarp/.rinarp.mod.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rinarp/.rinarp.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rinarp/.rinarp.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rinarp/.rinarp.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/ptrace.h \
./rinarp/.rinarp.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/bitops/fls64.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/bitops/find.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/bitops/sched.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/bitops/le.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rinarp/.rinarp.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rinarp/.rinarp.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/percpu.h \
./rinarp/.rinarp.mod.o.cmd:  include/linux/percpu-defs.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/bug.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/memory_model.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/getorder.h \
./rinarp/.rinarp.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rinarp/.rinarp.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/ioctl.h \
./rinarp/.rinarp.mod.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/atomic-long.h \
./rinarp/.rinarp.mod.o.cmd:  include/linux/pageblock-flags.h \
./rinarp/.rinarp.mod.o.cmd:  include/linux/page-flags-layout.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/param.h \
./rinarp/.rinarp.mod.o.cmd:  include/uapi/asm-generic/param.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/topology.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/early_ioremap.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/iomap.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/pci_iomap.h \
./rinarp/.rinarp.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/kmap_types.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/fixmap.h \
./rinarp/.rinarp.mod.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./rinarp/.rinarp.mod.o.cmd:  include/asm-generic/module.h \
./rinarp/Kconfig:	tristate "RFC-826 ARP compliant implementation"
Binary file ./rinarp/arp826-maps.o matches
./rinarp/.arp826-core.o.cmd:cmd_net/rina/rinarp/arp826-core.o := gcc -Wp,-MD,net/rina/rinarp/.arp826-core.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(arp826_core)"  -D"KBUILD_MODNAME=KBUILD_STR(arp826)" -c -o net/rina/rinarp/.tmp_arp826-core.o net/rina/rinarp/arp826-core.c
./rinarp/.arp826-core.o.cmd:source_net/rina/rinarp/arp826-core.o := net/rina/rinarp/arp826-core.c
./rinarp/.arp826-core.o.cmd:deps_net/rina/rinarp/arp826-core.o := \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/int-ll64.h \
./rinarp/.arp826-core.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/bitsperlong.h \
./rinarp/.arp826-core.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rinarp/.arp826-core.o.cmd:  include/linux/compiler-gcc.h \
./rinarp/.arp826-core.o.cmd:  include/linux/compiler-gcc4.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rinarp/.arp826-core.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/ptrace.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/bitops/fls64.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/bitops/find.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/bitops/sched.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/bitops/le.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/percpu.h \
./rinarp/.arp826-core.o.cmd:  include/linux/percpu-defs.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/bug.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/memory_model.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/getorder.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/ioctl.h \
./rinarp/.arp826-core.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/atomic-long.h \
./rinarp/.arp826-core.o.cmd:  include/linux/pageblock-flags.h \
./rinarp/.arp826-core.o.cmd:  include/linux/page-flags-layout.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/param.h \
./rinarp/.arp826-core.o.cmd:  include/uapi/asm-generic/param.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/topology.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/early_ioremap.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/iomap.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/pci_iomap.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/kmap_types.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/fixmap.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/module.h \
./rinarp/.arp826-core.o.cmd:  include/linux/page-debug-flags.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/pgtable.h \
./rinarp/.arp826-core.o.cmd:  include/linux/page-flags.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/scatterlist.h \
./rinarp/.arp826-core.o.cmd:  include/linux/dma-mapping.h \
./rinarp/.arp826-core.o.cmd:  include/linux/dma-attrs.h \
./rinarp/.arp826-core.o.cmd:  include/linux/dma-direction.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./rinarp/.arp826-core.o.cmd:  include/linux/dma-debug.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/dma-coherent.h \
./rinarp/.arp826-core.o.cmd:  include/linux/dma-contiguous.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/dma-mapping-common.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/cputime.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/cputime_jiffies.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/siginfo.h \
./rinarp/.arp826-core.o.cmd:  include/uapi/asm-generic/siginfo.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/resource.h \
./rinarp/.arp826-core.o.cmd:  include/uapi/asm-generic/resource.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/delay.h \
./rinarp/.arp826-core.o.cmd:  include/linux/radix-tree.h \
./rinarp/.arp826-core.o.cmd:  include/linux/percpu-rwsem.h \
./rinarp/.arp826-core.o.cmd:  include/asm-generic/sections.h \
./rinarp/.arp826-core.o.cmd:  include/linux/percpu-refcount.h \
./rinarp/.arp826-core.o.cmd:  /home/irati/linux/net/rina/rinarp/arp826-utils.h \
./rinarp/.arp826-core.o.cmd:  net/rina/rinarp/arp826-utils.h \
./rinarp/.arp826-core.o.cmd:  net/rina/rinarp/arp826-rxtx.h \
./rinarp/.arp826-core.o.cmd:  net/rina/rinarp/arp826-arm.h \
./rinarp/.arp826-core.o.cmd:  net/rina/rinarp/arp826-tables.h \
./rinarp/.arp826-core.o.cmd:net/rina/rinarp/arp826-core.o: $(deps_net/rina/rinarp/arp826-core.o)
./rinarp/.arp826-core.o.cmd:$(deps_net/rina/rinarp/arp826-core.o):
./rinarp/.arp826-rxtx.o.cmd:cmd_net/rina/rinarp/arp826-rxtx.o := gcc -Wp,-MD,net/rina/rinarp/.arp826-rxtx.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(arp826_rxtx)"  -D"KBUILD_MODNAME=KBUILD_STR(arp826)" -c -o net/rina/rinarp/.tmp_arp826-rxtx.o net/rina/rinarp/arp826-rxtx.c
./rinarp/.arp826-rxtx.o.cmd:source_net/rina/rinarp/arp826-rxtx.o := net/rina/rinarp/arp826-rxtx.c
./rinarp/.arp826-rxtx.o.cmd:deps_net/rina/rinarp/arp826-rxtx.o := \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/int-ll64.h \
./rinarp/.arp826-rxtx.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/bitsperlong.h \
./rinarp/.arp826-rxtx.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/compiler-gcc.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/compiler-gcc4.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rinarp/.arp826-rxtx.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/ptrace.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/bitops/fls64.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/bitops/find.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/bitops/sched.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/bitops/le.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/percpu.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/percpu-defs.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/bug.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/memory_model.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/getorder.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/ioctl.h \
./rinarp/.arp826-rxtx.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/atomic-long.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/page-debug-flags.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/param.h \
./rinarp/.arp826-rxtx.o.cmd:  include/uapi/asm-generic/param.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/page-flags-layout.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/pageblock-flags.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/topology.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/early_ioremap.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/iomap.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/pci_iomap.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/kmap_types.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/fixmap.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/pgtable.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/page-flags.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/scatterlist.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/dma-mapping.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/dma-attrs.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/dma-direction.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/dma-debug.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/dma-coherent.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/dma-contiguous.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/dma-mapping-common.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/cputime.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/cputime_jiffies.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/siginfo.h \
./rinarp/.arp826-rxtx.o.cmd:  include/uapi/asm-generic/siginfo.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/resource.h \
./rinarp/.arp826-rxtx.o.cmd:  include/uapi/asm-generic/resource.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/delay.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/radix-tree.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/percpu-rwsem.h \
./rinarp/.arp826-rxtx.o.cmd:  include/asm-generic/sections.h \
./rinarp/.arp826-rxtx.o.cmd:  include/linux/percpu-refcount.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/net/rina/rinarp/arp826-utils.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/net/rina/rinarp/arp826-tables.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/net/rina/rinarp/arp826-utils.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/net/rina/rinarp/arp826-arm.h \
./rinarp/.arp826-rxtx.o.cmd:  /home/irati/linux/net/rina/rinarp/arp826-rxtx.h \
./rinarp/.arp826-rxtx.o.cmd:net/rina/rinarp/arp826-rxtx.o: $(deps_net/rina/rinarp/arp826-rxtx.o)
./rinarp/.arp826-rxtx.o.cmd:$(deps_net/rina/rinarp/arp826-rxtx.o):
Binary file ./rinarp/arp826-utils.o matches
./rinarp/arp826-arm.h: * An ARP RFC-826 (wonnabe) compliant implementation
./rinarp/arp826-arm.h:#include "arp826-utils.h"
Binary file ./rinarp/arp826.ko matches
./rinarp/arp826-utils.h: * Generic Protocol Address - GPA
./rinarp/arp826-utils.h: * Generic Hardware Address - GHA
Binary file ./rinarp/rinarp.mod.o matches
./rinarp/.arp826-utils.o.cmd:cmd_net/rina/rinarp/arp826-utils.o := gcc -Wp,-MD,net/rina/rinarp/.arp826-utils.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(arp826_utils)"  -D"KBUILD_MODNAME=KBUILD_STR(arp826)" -c -o net/rina/rinarp/.tmp_arp826-utils.o net/rina/rinarp/arp826-utils.c
./rinarp/.arp826-utils.o.cmd:source_net/rina/rinarp/arp826-utils.o := net/rina/rinarp/arp826-utils.c
./rinarp/.arp826-utils.o.cmd:deps_net/rina/rinarp/arp826-utils.o := \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/int-ll64.h \
./rinarp/.arp826-utils.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/bitsperlong.h \
./rinarp/.arp826-utils.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/compiler-gcc.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/compiler-gcc4.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rinarp/.arp826-utils.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/ptrace.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/bitops/fls64.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/bitops/find.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/bitops/sched.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/bitops/le.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/percpu.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/percpu-defs.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/bug.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/memory_model.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/getorder.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/ioctl.h \
./rinarp/.arp826-utils.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/atomic-long.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/page-debug-flags.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/param.h \
./rinarp/.arp826-utils.o.cmd:  include/uapi/asm-generic/param.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/page-flags-layout.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/pageblock-flags.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/topology.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/early_ioremap.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/iomap.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/pci_iomap.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/kmap_types.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/fixmap.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/pgtable.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/page-flags.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/scatterlist.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/dma-mapping.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/dma-attrs.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/dma-direction.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/dma-debug.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/dma-coherent.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/dma-contiguous.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/dma-mapping-common.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/cputime.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/cputime_jiffies.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./rinarp/.arp826-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/siginfo.h \
./rinarp/.arp826-utils.o.cmd:  include/uapi/asm-generic/siginfo.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/resource.h \
./rinarp/.arp826-utils.o.cmd:  include/uapi/asm-generic/resource.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/delay.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/radix-tree.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/percpu-rwsem.h \
./rinarp/.arp826-utils.o.cmd:  include/asm-generic/sections.h \
./rinarp/.arp826-utils.o.cmd:  include/linux/percpu-refcount.h \
./rinarp/.arp826-utils.o.cmd:  net/rina/rinarp/arp826-utils.h \
./rinarp/.arp826-utils.o.cmd:net/rina/rinarp/arp826-utils.o: $(deps_net/rina/rinarp/arp826-utils.o)
./rinarp/.arp826-utils.o.cmd:$(deps_net/rina/rinarp/arp826-utils.o):
./rinarp/arp826-core.c:#define RINA_PREFIX "arp826-core"
./rinarp/arp826-core.c:#include "arp826-utils.h"
./rinarp/arp826-core.c:#include "arp826-rxtx.h"
./rinarp/arp826-core.c:#include "arp826-arm.h"
./rinarp/arp826-core.c:#include "arp826-tables.h"
./rinarp/arp826-core.c:                return -1;
./rinarp/arp826-core.c:                return -1;
./rinarp/arp826-core.c:                return -1;
./rinarp/arp826-core.c:                return -1;
./rinarp/arp826-core.c:        /* FIXME: Replace with net-devices even-based behavior */
./rinarp/arp826-core.c:                        return -1;
./rinarp/arp826-core.c:        /* FIXME: Replace with net-devices even-based behavior */
./rinarp/.rinarp.ko.cmd:cmd_net/rina/rinarp/rinarp.ko := ld -r -m elf_i386 -T /home/irati/linux/scripts/module-common.lds --build-id  -o net/rina/rinarp/rinarp.ko net/rina/rinarp/rinarp.o net/rina/rinarp/rinarp.mod.o
./rinarp/arp826-tables.h:#include "arp826-utils.h"
./rinarp/.arp826.mod.o.cmd:cmd_net/rina/rinarp/arp826.mod.o := gcc -Wp,-MD,net/rina/rinarp/.arp826.mod.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(arp826.mod)"  -D"KBUILD_MODNAME=KBUILD_STR(arp826)" -DMODULE  -c -o net/rina/rinarp/arp826.mod.o net/rina/rinarp/arp826.mod.c
./rinarp/.arp826.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/int-ll64.h \
./rinarp/.arp826.mod.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/bitsperlong.h \
./rinarp/.arp826.mod.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rinarp/.arp826.mod.o.cmd:  include/linux/compiler-gcc.h \
./rinarp/.arp826.mod.o.cmd:  include/linux/compiler-gcc4.h \
./rinarp/.arp826.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rinarp/.arp826.mod.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rinarp/.arp826.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rinarp/.arp826.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rinarp/.arp826.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/ptrace.h \
./rinarp/.arp826.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/bitops/fls64.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/bitops/find.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/bitops/sched.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/bitops/le.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rinarp/.arp826.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rinarp/.arp826.mod.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/percpu.h \
./rinarp/.arp826.mod.o.cmd:  include/linux/percpu-defs.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/bug.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/memory_model.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/getorder.h \
./rinarp/.arp826.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rinarp/.arp826.mod.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/ioctl.h \
./rinarp/.arp826.mod.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/atomic-long.h \
./rinarp/.arp826.mod.o.cmd:  include/linux/pageblock-flags.h \
./rinarp/.arp826.mod.o.cmd:  include/linux/page-flags-layout.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/param.h \
./rinarp/.arp826.mod.o.cmd:  include/uapi/asm-generic/param.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/topology.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/early_ioremap.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/iomap.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/pci_iomap.h \
./rinarp/.arp826.mod.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/kmap_types.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/fixmap.h \
./rinarp/.arp826.mod.o.cmd:  /home/irati/linux/include/uapi/linux/elf-em.h \
./rinarp/.arp826.mod.o.cmd:  include/asm-generic/module.h \
Binary file ./rinarp/rinarp.o matches
./rinarp/rinarp.h:#include "arp826-utils.h"
Binary file ./rinarp/arp826.mod.o matches
./rinarp/.arp826-arm.o.cmd:cmd_net/rina/rinarp/arp826-arm.o := gcc -Wp,-MD,net/rina/rinarp/.arp826-arm.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -I/home/irati/linux/net/rina -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(arp826_arm)"  -D"KBUILD_MODNAME=KBUILD_STR(arp826)" -c -o net/rina/rinarp/.tmp_arp826-arm.o net/rina/rinarp/arp826-arm.c
./rinarp/.arp826-arm.o.cmd:source_net/rina/rinarp/arp826-arm.o := net/rina/rinarp/arp826-arm.c
./rinarp/.arp826-arm.o.cmd:deps_net/rina/rinarp/arp826-arm.o := \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/int-ll64.h \
./rinarp/.arp826-arm.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/bitsperlong.h \
./rinarp/.arp826-arm.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/compiler-gcc.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/compiler-gcc4.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./rinarp/.arp826-arm.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/ptrace.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/bitops/fls64.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/bitops/find.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/bitops/sched.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/bitops/le.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/percpu.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/percpu-defs.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/memory_model.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/getorder.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/pgtable-nopud.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/ioctl.h \
./rinarp/.arp826-arm.o.cmd:  include/uapi/asm-generic/ioctl.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/bug.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/atomic-long.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/param.h \
./rinarp/.arp826-arm.o.cmd:  include/uapi/asm-generic/param.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/pageblock-flags.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/page-flags-layout.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/topology.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/early_ioremap.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/iomap.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/pci_iomap.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/kmap_types.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/fixmap.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/delay.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/page-debug-flags.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/pgtable.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/page-flags.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/scatterlist.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/dma-mapping.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/dma-attrs.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/dma-direction.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/dma-debug.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/dma-coherent.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/dma-contiguous.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/dma-mapping-common.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/cputime.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/cputime_jiffies.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/siginfo.h \
./rinarp/.arp826-arm.o.cmd:  include/uapi/asm-generic/siginfo.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/resource.h \
./rinarp/.arp826-arm.o.cmd:  include/uapi/asm-generic/resource.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/radix-tree.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/percpu-rwsem.h \
./rinarp/.arp826-arm.o.cmd:  include/asm-generic/sections.h \
./rinarp/.arp826-arm.o.cmd:  include/linux/percpu-refcount.h \
./rinarp/.arp826-arm.o.cmd:  /home/irati/linux/net/rina/rinarp/arp826-utils.h \
./rinarp/.arp826-arm.o.cmd:  net/rina/rinarp/arp826-utils.h \
./rinarp/.arp826-arm.o.cmd:  net/rina/rinarp/arp826-tables.h \
./rinarp/.arp826-arm.o.cmd:  net/rina/rinarp/arp826-rxtx.h \
./rinarp/.arp826-arm.o.cmd:  net/rina/rinarp/arp826-arm.h \
./rinarp/.arp826-arm.o.cmd:net/rina/rinarp/arp826-arm.o: $(deps_net/rina/rinarp/arp826-arm.o)
./rinarp/.arp826-arm.o.cmd:$(deps_net/rina/rinarp/arp826-arm.o):
./rinarp/arp826-rxtx.c:#define RINA_PREFIX "arp826-rxtx"
./rinarp/arp826-rxtx.c:#include "rinarp/arp826-utils.h"
./rinarp/arp826-rxtx.c:#include "rinarp/arp826-tables.h"
./rinarp/arp826-rxtx.c:#include "rinarp/arp826-arm.h"
./rinarp/arp826-rxtx.c:#include "rinarp/arp826-rxtx.h"
./rinarp/arp826-rxtx.c:        if (dev->type != ARPHRD_ETHER) {
./rinarp/arp826-rxtx.c:        tlen   = dev->needed_tailroom;
./rinarp/arp826-rxtx.c:        skb->dev      = dev;
./rinarp/arp826-rxtx.c:        skb->protocol = htons(RINARP_ETH_PROTO);
./rinarp/arp826-rxtx.c:                            skb->len) < 0) {
./rinarp/arp826-rxtx.c:                LOG_ERR("Cannot create hard-header");
./rinarp/arp826-rxtx.c:        arp->htype = htons(dev->type);
./rinarp/arp826-rxtx.c:        arp->ptype = htons(ptype);
./rinarp/arp826-rxtx.c:        arp->hlen  = gha_address_length(sha);
./rinarp/arp826-rxtx.c:        arp->plen  = gpa_address_length(spa);
./rinarp/arp826-rxtx.c:        arp->oper  = htons(oper);
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:        htype = ntohs(header->htype);
./rinarp/arp826-rxtx.c:        ptype = ntohs(header->ptype);
./rinarp/arp826-rxtx.c:        hlen  = header->hlen;
./rinarp/arp826-rxtx.c:        plen  = header->plen;
./rinarp/arp826-rxtx.c:        oper  = ntohs(header->oper);
./rinarp/arp826-rxtx.c:        if (header->htype != htons(HW_TYPE_ETHER)) {
./rinarp/arp826-rxtx.c:                LOG_ERR("Unhandled ARP hardware type 0x%04X", header->htype);
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:        operation = ntohs(header->oper);
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:        sha = ptr; ptr += header->hlen;
./rinarp/arp826-rxtx.c:        spa = ptr; ptr += header->plen;
./rinarp/arp826-rxtx.c:        tha = ptr; ptr += header->hlen;
./rinarp/arp826-rxtx.c:        tpa = ptr; ptr += header->plen;
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:                return -1;
./rinarp/arp826-rxtx.c:                        return -1;
./rinarp/arp826-rxtx.c:                                return -1;
./rinarp/arp826-rxtx.c:                                return -1;
./rinarp/arp826-rxtx.c:                                return -1;
./rinarp/arp826-rxtx.c:                        return -1;
./rinarp/arp826-rxtx.c:                        return -1;
./rinarp/arp826-rxtx.c:                        return -1;
./rinarp/arp826-rxtx.c:                        return -1;
./rinarp/arp826-rxtx.c:        if (dev->flags & IFF_NOARP            ||
./rinarp/arp826-rxtx.c:            skb->pkt_type == PACKET_OTHERHOST ||
./rinarp/arp826-rxtx.c:            skb->pkt_type == PACKET_LOOPBACK) {
./rinarp/arp826-rxtx.c:                        "(no arp, other-host or loopback)");
./rinarp/arp826-rxtx.c:        /* We only receive type-1 headers (this handler could be reused) */
./rinarp/arp826-rxtx.c:        if (skb->dev->type != HW_TYPE_ETHER) {
./rinarp/arp826-rxtx.c:                LOG_DBG("Unhandled device type %d", skb->dev->type);
./rinarp/arp826-rxtx.c:        /* FIXME: We should move pre-checks from arp826_process() here ... */
./rinarp/arp826-rxtx.c:        if (header->hlen != dev->addr_len) {
./rinarp/arp826-rxtx.c:        cl = tbls_find(dev, ntohs(header->ptype));
./rinarp/arp826-rxtx.c:                        "(ptype = 0x%04X)", ntohs(header->ptype));
./rinarp/arp826-rxtx.c:                (dev->addr_len + header->plen) * 2;
Binary file ./rinarp/arp826-core.o matches
./rinarp/.arp826.o.cmd:cmd_net/rina/rinarp/arp826.o := ld -m elf_i386   -r -o net/rina/rinarp/arp826.o net/rina/rinarp/arp826-tables.o net/rina/rinarp/arp826-rxtx.o net/rina/rinarp/arp826-arm.o net/rina/rinarp/arp826-maps.o net/rina/rinarp/arp826-utils.o net/rina/rinarp/arp826-core.o 
Binary file ./rinarp/arp826.o matches
Binary file ./rinarp/arp826-tables.o matches
./rinarp/arp826-maps.c:#define RINA_PREFIX "arp826-maps"
./rinarp/arp826-maps.c:#include "arp826-maps.h"
./rinarp/arp826-maps.c:        INIT_LIST_HEAD(&tmp->head);
./rinarp/arp826-maps.c:        return list_empty(&map->head);
./rinarp/arp826-maps.c:                return -1;
./rinarp/arp826-maps.c:        list_for_each_entry_safe(pos, nxt, &map->head, next) {
./rinarp/arp826-maps.c:                list_del(&pos->next);
./rinarp/arp826-maps.c:                return -1;
./rinarp/arp826-maps.c:                return -1;
./rinarp/arp826-maps.c:        tmp->key.device = key_device;
./rinarp/arp826-maps.c:        tmp->key.ptype  = key_ptype;
./rinarp/arp826-maps.c:        tmp->value      = value;
./rinarp/arp826-maps.c:        INIT_LIST_HEAD(&tmp->next);
./rinarp/arp826-maps.c:        list_add(&tmp->next, &map->head);
./rinarp/arp826-maps.c:        list_for_each_entry(tmp, &map->head, next) {
./rinarp/arp826-maps.c:                if ((tmp->key.device == key_device) &&
./rinarp/arp826-maps.c:                    (tmp->key.ptype  == key_ptype))
./rinarp/arp826-maps.c:                return -1;
./rinarp/arp826-maps.c:        list_del(&entry->next);
./rinarp/arp826-maps.c:        return entry->value;
./rinarp/arp826-maps.c:                return -1;
./rinarp/arp826-tables.c: * NOTE: This cache implementation is far far far away to be a performance-wise
./rinarp/arp826-tables.c: *       one. Its scope is to server the upper-layers, nothing else. If we will
./rinarp/arp826-tables.c: *       have the time, a performance-wise implementation will obsolete this
./rinarp/arp826-tables.c:#define RINA_PREFIX "arp826-tables"
./rinarp/arp826-tables.c:#include "arp826-utils.h"
./rinarp/arp826-tables.c:#include "arp826-maps.h"
./rinarp/arp826-tables.c:#include "arp826-tables.h"
./rinarp/arp826-tables.c:        if (entry->pa) {
./rinarp/arp826-tables.c:                gpa_destroy(entry->pa);
./rinarp/arp826-tables.c:                entry->pa = NULL;
./rinarp/arp826-tables.c:        if (entry->ha) {
./rinarp/arp826-tables.c:                gha_destroy(entry->ha);
./rinarp/arp826-tables.c:                entry->ha = NULL;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:        entry->pa = pa;
./rinarp/arp826-tables.c:        entry->ha = ha;
./rinarp/arp826-tables.c:        INIT_LIST_HEAD(&entry->next);
./rinarp/arp826-tables.c:                !gpa_is_ok(entry->pa) ||
./rinarp/arp826-tables.c:                !gha_is_ok(entry->ha)) ? false : true;
./rinarp/arp826-tables.c:        if (!gpa_is_equal(entry1->pa, entry2->pa))
./rinarp/arp826-tables.c:        if (!gha_is_equal(entry1->ha, entry2->ha))
./rinarp/arp826-tables.c:        return entry->pa;
./rinarp/arp826-tables.c:        return entry->ha;
./rinarp/arp826-tables.c:        LOG_DBG("Creating tbl instance for ha-len %zd", ha_length);
./rinarp/arp826-tables.c:        instance->hal = ha_length;
./rinarp/arp826-tables.c:        INIT_LIST_HEAD(&instance->entries);
./rinarp/arp826-tables.c:        spin_lock_init(&instance->lock);
./rinarp/arp826-tables.c:        spin_lock(&instance->lock);
./rinarp/arp826-tables.c:        list_for_each_entry_safe(pos, q, &instance->entries, next) {
./rinarp/arp826-tables.c:        spin_unlock(&instance->lock);
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:        spin_lock(&instance->lock);
./rinarp/arp826-tables.c:        list_for_each_entry(pos, &instance->entries, next) {
./rinarp/arp826-tables.c:                if (gpa_is_equal(pos->pa, pa)) {
./rinarp/arp826-tables.c:                        gha_destroy(pos->ha);
./rinarp/arp826-tables.c:                        pos->ha = gha_dup_gfp(flags, ha);
./rinarp/arp826-tables.c:                        spin_unlock(&instance->lock);
./rinarp/arp826-tables.c:        spin_unlock(&instance->lock);
./rinarp/arp826-tables.c:        return -1;
./rinarp/arp826-tables.c:        spin_lock(&instance->lock);
./rinarp/arp826-tables.c:        list_for_each_entry(pos, &instance->entries, next) {
./rinarp/arp826-tables.c:                if (gpa_is_equal(pos->pa, pa) &&
./rinarp/arp826-tables.c:                    gha_is_equal(pos->ha, ha)) {
./rinarp/arp826-tables.c:                        spin_unlock(&instance->lock);
./rinarp/arp826-tables.c:        spin_unlock(&instance->lock);
./rinarp/arp826-tables.c:        spin_lock(&instance->lock);
./rinarp/arp826-tables.c:        list_for_each_entry(pos, &instance->entries, next) {
./rinarp/arp826-tables.c:                if (gha_is_equal(pos->ha, address)) {
./rinarp/arp826-tables.c:                        spin_unlock(&instance->lock);
./rinarp/arp826-tables.c:        spin_unlock(&instance->lock);
./rinarp/arp826-tables.c:        spin_lock(&instance->lock);
./rinarp/arp826-tables.c:        list_for_each_entry(pos, &instance->entries, next) {
./rinarp/arp826-tables.c:                gpa_dump(pos->pa);
./rinarp/arp826-tables.c:                if (gpa_is_equal(pos->pa, address)) {
./rinarp/arp826-tables.c:                        spin_unlock(&instance->lock);
./rinarp/arp826-tables.c:        spin_unlock(&instance->lock);
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:        spin_lock(&instance->lock);
./rinarp/arp826-tables.c:        list_for_each_entry(pos, &instance->entries, next) {
./rinarp/arp826-tables.c:                        spin_unlock(&instance->lock);
./rinarp/arp826-tables.c:                        /* Remember to: spin_unlock(&instance->lock); */
./rinarp/arp826-tables.c:                        /* Remember to: spin_unlock(&instance->lock); */
./rinarp/arp826-tables.c:        list_add(&entry->next, &instance->entries);
./rinarp/arp826-tables.c:        spin_unlock(&instance->lock);
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:        spin_lock(&instance->lock);
./rinarp/arp826-tables.c:        list_for_each_entry_safe(pos, q, &instance->entries, next) {
./rinarp/arp826-tables.c:                        list_del(&pos->next);
./rinarp/arp826-tables.c:                        spin_unlock(&instance->lock);
./rinarp/arp826-tables.c:        spin_unlock(&instance->lock);
./rinarp/arp826-tables.c:        return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:        LOG_DBG("Creating a new table entry for this ARP-add request");
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/arp826-tables.c:                return -1;
./rinarp/Makefile:ccflags-y += -I$(srctree)/net/rina
./rinarp/Makefile:ccflags-y += -Wtype-limits
./rinarp/Makefile:obj-$(CONFIG_ARP826) += arp826.o
./rinarp/Makefile:arp826-y             :=				\
./rinarp/Makefile:	arp826-tables.o				\
./rinarp/Makefile:	arp826-rxtx.o				\
./rinarp/Makefile:	arp826-arm.o				\
./rinarp/Makefile:	arp826-maps.o				\
./rinarp/Makefile:	arp826-utils.o				\
./rinarp/Makefile:	arp826-core.o
./rinarp/Makefile:obj-$(CONFIG_RINARP) += 			\
./rinarp/arp826.h: * An ARP RFC-826 (wonnabe) compliant implementation
./rinarp/arp826.h:#include "rinarp/arp826-utils.h"
./rinarp/.arp826.ko.cmd:cmd_net/rina/rinarp/arp826.ko := ld -r -m elf_i386 -T /home/irati/linux/scripts/module-common.lds --build-id  -o net/rina/rinarp/arp826.ko net/rina/rinarp/arp826.o net/rina/rinarp/arp826.mod.o
./.efcp.o.cmd:cmd_net/rina/efcp.o := gcc -Wp,-MD,net/rina/.efcp.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(efcp)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_efcp.o net/rina/efcp.c
./.efcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.efcp.o.cmd:  include/asm-generic/int-ll64.h \
./.efcp.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.efcp.o.cmd:  include/asm-generic/bitsperlong.h \
./.efcp.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.efcp.o.cmd:  include/linux/compiler-gcc.h \
./.efcp.o.cmd:  include/linux/compiler-gcc4.h \
./.efcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.efcp.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.efcp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.efcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.efcp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.efcp.o.cmd:  include/asm-generic/ptrace.h \
./.efcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.efcp.o.cmd:  include/asm-generic/bitops/fls64.h \
./.efcp.o.cmd:  include/asm-generic/bitops/find.h \
./.efcp.o.cmd:  include/asm-generic/bitops/sched.h \
./.efcp.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.efcp.o.cmd:  include/asm-generic/bitops/le.h \
./.efcp.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.efcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.efcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.efcp.o.cmd:  include/asm-generic/percpu.h \
./.efcp.o.cmd:  include/linux/percpu-defs.h \
./.efcp.o.cmd:  include/asm-generic/memory_model.h \
./.efcp.o.cmd:  include/asm-generic/getorder.h \
./.efcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.efcp.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.efcp.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.efcp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.efcp.o.cmd:  include/asm-generic/ioctl.h \
./.efcp.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.efcp.o.cmd:  include/asm-generic/bug.h \
./.efcp.o.cmd:  include/asm-generic/atomic-long.h \
./.efcp.o.cmd:  include/asm-generic/param.h \
./.efcp.o.cmd:  include/uapi/asm-generic/param.h \
./.efcp.o.cmd:  include/linux/pageblock-flags.h \
./.efcp.o.cmd:  include/linux/page-flags-layout.h \
./.efcp.o.cmd:  include/asm-generic/topology.h \
./.efcp.o.cmd:  include/asm-generic/early_ioremap.h \
./.efcp.o.cmd:  include/asm-generic/iomap.h \
./.efcp.o.cmd:  include/asm-generic/pci_iomap.h \
./.efcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.efcp.o.cmd:  include/asm-generic/kmap_types.h \
./.efcp.o.cmd:  include/asm-generic/fixmap.h \
./.efcp.o.cmd:  include/asm-generic/sections.h \
./.efcp.o.cmd:  net/rina/ipcp-instances.h \
./.efcp.o.cmd:  net/rina/ipcp-factories.h \
./.efcp.o.cmd:  net/rina/efcp-utils.h \
./.efcp.o.cmd:  net/rina/ipcp-utils.h \
./.efcp.o.cmd:  net/rina/dtcp-utils.h \
./.efcp.o.cmd:  net/rina/dt-utils.h \
./.dtcp.o.cmd:cmd_net/rina/dtcp.o := gcc -Wp,-MD,net/rina/.dtcp.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(dtcp)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_dtcp.o net/rina/dtcp.c
./.dtcp.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.dtcp.o.cmd:  include/linux/compiler-gcc.h \
./.dtcp.o.cmd:  include/linux/compiler-gcc4.h \
./.dtcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.dtcp.o.cmd:  include/asm-generic/int-ll64.h \
./.dtcp.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.dtcp.o.cmd:  include/asm-generic/bitsperlong.h \
./.dtcp.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.dtcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.dtcp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.dtcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.dtcp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.dtcp.o.cmd:  include/asm-generic/ptrace.h \
./.dtcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.dtcp.o.cmd:  include/asm-generic/bitops/fls64.h \
./.dtcp.o.cmd:  include/asm-generic/bitops/find.h \
./.dtcp.o.cmd:  include/asm-generic/bitops/sched.h \
./.dtcp.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.dtcp.o.cmd:  include/asm-generic/bitops/le.h \
./.dtcp.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.dtcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.dtcp.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.dtcp.o.cmd:  include/asm-generic/percpu.h \
./.dtcp.o.cmd:  include/linux/percpu-defs.h \
./.dtcp.o.cmd:  include/asm-generic/memory_model.h \
./.dtcp.o.cmd:  include/asm-generic/getorder.h \
./.dtcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.dtcp.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.dtcp.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.dtcp.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.dtcp.o.cmd:  include/asm-generic/ioctl.h \
./.dtcp.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.dtcp.o.cmd:  include/asm-generic/bug.h \
./.dtcp.o.cmd:  include/asm-generic/atomic-long.h \
./.dtcp.o.cmd:  include/asm-generic/param.h \
./.dtcp.o.cmd:  include/uapi/asm-generic/param.h \
./.dtcp.o.cmd:  include/linux/pageblock-flags.h \
./.dtcp.o.cmd:  include/linux/page-flags-layout.h \
./.dtcp.o.cmd:  include/asm-generic/topology.h \
./.dtcp.o.cmd:  include/asm-generic/early_ioremap.h \
./.dtcp.o.cmd:  include/asm-generic/iomap.h \
./.dtcp.o.cmd:  include/asm-generic/pci_iomap.h \
./.dtcp.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.dtcp.o.cmd:  include/asm-generic/kmap_types.h \
./.dtcp.o.cmd:  include/asm-generic/fixmap.h \
./.dtcp.o.cmd:  include/asm-generic/sections.h \
./.dtcp.o.cmd:  net/rina/ipcp-instances.h \
./.dtcp.o.cmd:  net/rina/ipcp-factories.h \
./.dtcp.o.cmd:  net/rina/dt-utils.h \
./.dtcp.o.cmd:  net/rina/dtcp-utils.h \
./cidm.h: * CIDM (CEP-IDs Manager)
./.ipcp-utils.o.cmd:cmd_net/rina/ipcp-utils.o := gcc -Wp,-MD,net/rina/.ipcp-utils.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(ipcp_utils)"  -D"KBUILD_MODNAME=KBUILD_STR(ipcp_utils)" -c -o net/rina/.tmp_ipcp-utils.o net/rina/ipcp-utils.c
./.ipcp-utils.o.cmd:source_net/rina/ipcp-utils.o := net/rina/ipcp-utils.c
./.ipcp-utils.o.cmd:deps_net/rina/ipcp-utils.o := \
./.ipcp-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.ipcp-utils.o.cmd:  include/asm-generic/int-ll64.h \
./.ipcp-utils.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.ipcp-utils.o.cmd:  include/asm-generic/bitsperlong.h \
./.ipcp-utils.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.ipcp-utils.o.cmd:  include/linux/compiler-gcc.h \
./.ipcp-utils.o.cmd:  include/linux/compiler-gcc4.h \
./.ipcp-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.ipcp-utils.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.ipcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.ipcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.ipcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.ipcp-utils.o.cmd:  include/asm-generic/ptrace.h \
./.ipcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.ipcp-utils.o.cmd:  include/asm-generic/bitops/fls64.h \
./.ipcp-utils.o.cmd:  include/asm-generic/bitops/find.h \
./.ipcp-utils.o.cmd:  include/asm-generic/bitops/sched.h \
./.ipcp-utils.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.ipcp-utils.o.cmd:  include/asm-generic/bitops/le.h \
./.ipcp-utils.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.ipcp-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.ipcp-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.ipcp-utils.o.cmd:  include/asm-generic/percpu.h \
./.ipcp-utils.o.cmd:  include/linux/percpu-defs.h \
./.ipcp-utils.o.cmd:  include/asm-generic/memory_model.h \
./.ipcp-utils.o.cmd:  include/asm-generic/getorder.h \
./.ipcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.ipcp-utils.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.ipcp-utils.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.ipcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.ipcp-utils.o.cmd:  include/asm-generic/ioctl.h \
./.ipcp-utils.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.ipcp-utils.o.cmd:  include/asm-generic/bug.h \
./.ipcp-utils.o.cmd:  include/asm-generic/atomic-long.h \
./.ipcp-utils.o.cmd:  include/asm-generic/param.h \
./.ipcp-utils.o.cmd:  include/uapi/asm-generic/param.h \
./.ipcp-utils.o.cmd:  include/linux/pageblock-flags.h \
./.ipcp-utils.o.cmd:  include/linux/page-flags-layout.h \
./.ipcp-utils.o.cmd:  include/asm-generic/topology.h \
./.ipcp-utils.o.cmd:  include/asm-generic/early_ioremap.h \
./.ipcp-utils.o.cmd:  include/asm-generic/iomap.h \
./.ipcp-utils.o.cmd:  include/asm-generic/pci_iomap.h \
./.ipcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.ipcp-utils.o.cmd:  include/asm-generic/kmap_types.h \
./.ipcp-utils.o.cmd:  include/asm-generic/fixmap.h \
./.ipcp-utils.o.cmd:  include/asm-generic/sections.h \
./.ipcp-utils.o.cmd:  net/rina/ipcp-utils.h \
./.ipcp-utils.o.cmd:  net/rina/ipcp-instances.h \
./.ipcp-utils.o.cmd:  net/rina/ipcp-factories.h \
./.ipcp-utils.o.cmd:net/rina/ipcp-utils.o: $(deps_net/rina/ipcp-utils.o)
./.ipcp-utils.o.cmd:$(deps_net/rina/ipcp-utils.o):
./ipcp-instances.c:#define RINA_PREFIX "ipcp-instances"
./ipcp-instances.c:#include "ipcp-instances.h"
./ipcp-instances.c:        if (ops->assign_to_dif     &&
./ipcp-instances.c:            ops->update_dif_config &&
./ipcp-instances.c:            ops->sdu_write         &&
./ipcp-instances.c:            ops->ipcp_name)
./ipcp-instances.c:        if (ops->flow_deallocate        &&
./ipcp-instances.c:            ops->flow_allocate_request  &&
./ipcp-instances.c:            ops->flow_allocate_response &&
./ipcp-instances.c:            ops->application_register   &&
./ipcp-instances.c:            ops->application_unregister)
./ipcp-instances.c:        if (ops->connection_create         ||
./ipcp-instances.c:            ops->connection_update         ||
./ipcp-instances.c:            ops->connection_destroy        ||
./ipcp-instances.c:            ops->connection_create_arrived ||
./ipcp-instances.c:            ops->mgmt_sdu_write            ||
./ipcp-instances.c:            ops->mgmt_sdu_read             ||
./ipcp-instances.c:            ops->mgmt_sdu_post             ||
./ipcp-instances.c:            ops->pft_add                   ||
./ipcp-instances.c:            ops->pft_remove                ||
./ipcp-instances.c:            ops->pft_dump                  ||
./ipcp-instances.c:            ops->flow_binding_ipcp         ||
./ipcp-instances.c:            ops->flow_destroy              ||
./ipcp-instances.c:            ops->sdu_enqueue)
./.rmt.o.cmd:cmd_net/rina/rmt.o := gcc -Wp,-MD,net/rina/.rmt.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(rmt)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_rmt.o net/rina/rmt.c
./.rmt.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.rmt.o.cmd:  include/asm-generic/int-ll64.h \
./.rmt.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.rmt.o.cmd:  include/asm-generic/bitsperlong.h \
./.rmt.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.rmt.o.cmd:  include/linux/compiler-gcc.h \
./.rmt.o.cmd:  include/linux/compiler-gcc4.h \
./.rmt.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.rmt.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.rmt.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.rmt.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.rmt.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.rmt.o.cmd:  include/asm-generic/ptrace.h \
./.rmt.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.rmt.o.cmd:  include/asm-generic/bitops/fls64.h \
./.rmt.o.cmd:  include/asm-generic/bitops/find.h \
./.rmt.o.cmd:  include/asm-generic/bitops/sched.h \
./.rmt.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.rmt.o.cmd:  include/asm-generic/bitops/le.h \
./.rmt.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.rmt.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.rmt.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.rmt.o.cmd:  include/asm-generic/percpu.h \
./.rmt.o.cmd:  include/linux/percpu-defs.h \
./.rmt.o.cmd:  include/asm-generic/bug.h \
./.rmt.o.cmd:  include/asm-generic/memory_model.h \
./.rmt.o.cmd:  include/asm-generic/getorder.h \
./.rmt.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.rmt.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.rmt.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.rmt.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.rmt.o.cmd:  include/asm-generic/ioctl.h \
./.rmt.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.rmt.o.cmd:  include/asm-generic/atomic-long.h \
./.rmt.o.cmd:  include/asm-generic/param.h \
./.rmt.o.cmd:  include/uapi/asm-generic/param.h \
./.rmt.o.cmd:  include/linux/page-debug-flags.h \
./.rmt.o.cmd:  include/linux/page-flags-layout.h \
./.rmt.o.cmd:  include/asm-generic/cputime.h \
./.rmt.o.cmd:  include/asm-generic/cputime_jiffies.h \
./.rmt.o.cmd:  include/asm-generic/topology.h \
./.rmt.o.cmd:  include/asm-generic/early_ioremap.h \
./.rmt.o.cmd:  include/asm-generic/iomap.h \
./.rmt.o.cmd:  include/asm-generic/pci_iomap.h \
./.rmt.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.rmt.o.cmd:  include/asm-generic/kmap_types.h \
./.rmt.o.cmd:  include/asm-generic/fixmap.h \
./.rmt.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./.rmt.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./.rmt.o.cmd:  include/asm-generic/siginfo.h \
./.rmt.o.cmd:  include/uapi/asm-generic/siginfo.h \
./.rmt.o.cmd:  include/linux/pageblock-flags.h \
./.rmt.o.cmd:  include/asm-generic/resource.h \
./.rmt.o.cmd:  include/uapi/asm-generic/resource.h \
./.rmt.o.cmd:  include/asm-generic/sections.h \
./.rmt.o.cmd:  net/rina/ipcp-instances.h \
./.rmt.o.cmd:  net/rina/ipcp-factories.h \
./.rmt.o.cmd:  net/rina/efcp-utils.h \
./rnl-utils.h: *   These definitions must be moved in the user-space exported headers or
./rnl-utils.h:#define APNI_ATTR_MAX (__APNI_ATTR_MAX - 1)
./rnl-utils.h:#define PFTELE_ATTR_MAX (__PFTELE_ATTR_MAX - 1)
./rnl-utils.h:#define FSPEC_ATTR_MAX (__FSPEC_ATTR_MAX - 1)
./rnl-utils.h:#define IPCP_CONFIG_ENTRY_ATTR_MAX (__IPCP_CONFIG_ENTRY_ATTR_MAX - 1)
./rnl-utils.h:#define PPA_ATTR_MAX (__PPA_ATTR_MAX - 1)
./rnl-utils.h:#define PA_ATTR_MAX (__PA_ATTR_MAX - 1)
./rnl-utils.h:#define DWFCC_ATTR_MAX (__DWFCC_ATTR_MAX -1)
./rnl-utils.h:#define DRFCC_ATTR_MAX (__DRFCC_ATTR_MAX -1)
./rnl-utils.h:#define DFCC_ATTR_MAX (__DFCC_ATTR_MAX -1)
./rnl-utils.h:#define DRCC_ATTR_MAX (__DRCC_ATTR_MAX -1)
./rnl-utils.h:#define DCA_ATTR_MAX (__DCA_ATTR_MAX - 1)
./rnl-utils.h:#define CPP_ATTR_MAX (__CPP_ATTR_MAX - 1)
./rnl-utils.h:#define IAFRM_ATTR_MAX (__IAFRM_ATTR_MAX -1)
./rnl-utils.h:#define IAFRA_ATTR_MAX (__IAFRA_ATTR_MAX -1)
./rnl-utils.h:#define IAFRE_ATTR_MAX (__IAFRE_ATTR_MAX -1)
./rnl-utils.h:#define IAFRRM_ATTR_MAX (__IAFRRM_ATTR_MAX -1)
./rnl-utils.h:#define IDFRT_ATTR_MAX (__IDFRT_ATTR_MAX -1)
./rnl-utils.h:#define IDFRE_ATTR_MAX (__IDFRE_ATTR_MAX -1)
./rnl-utils.h:#define IFDN_ATTR_MAX (__IFDN_ATTR_MAX -1)
./rnl-utils.h:#define ICCRQ_ATTR_MAX (__ICCRQ_ATTR_MAX - 1)
./rnl-utils.h:#define ICCRE_ATTR_MAX (__ICCRE_ATTR_MAX - 1)
./rnl-utils.h:#define ICCA_ATTR_MAX (__ICCA_ATTR_MAX - 1)
./rnl-utils.h:#define ICCRS_ATTR_MAX (__ICCRS_ATTR_MAX - 1)
./rnl-utils.h:#define ICURQ_ATTR_MAX (__ICURQ_ATTR_MAX - 1)
./rnl-utils.h:#define ICURS_ATTR_MAX (__ICURS_ATTR_MAX - 1)
./rnl-utils.h:#define ICDR_ATTR_MAX (__ICDR_ATTR_MAX - 1)
./rnl-utils.h:#define ICDRS_ATTR_MAX (__ICDRS_ATTR_MAX - 1)
./rnl-utils.h:#define IRAR_ATTR_MAX (__IRAR_ATTR_MAX -1)
./rnl-utils.h:#define IRARE_ATTR_MAX (__IRARE_ATTR_MAX -1)
./rnl-utils.h:#define IUAR_ATTR_MAX (__IUAR_ATTR_MAX -1)
./rnl-utils.h:#define IUARE_ATTR_MAX (__IUARE_ATTR_MAX -1)
./rnl-utils.h:#define IDQR_ATTR_MAX (__IDQR_ATTR_MAX -1)
./rnl-utils.h:#define RIBO_ATTR_MAX (__RIBO_ATTR_MAX -1)
./rnl-utils.h:#define IDQRE_ATTR_MAX (__IDQRE_ATTR_MAX -1)
./rnl-utils.h:#define IATDR_ATTR_MAX (__IATDR_ATTR_MAX -1)
./rnl-utils.h:#define IUDCR_ATTR_MAX (__IUDCR_ATTR_MAX -1)
./rnl-utils.h:#define DINFO_ATTR_MAX (__DINFO_ATTR_MAX -1)
./rnl-utils.h:#define DTC_ATTR_MAX (__DTC_ATTR_MAX -1)
./rnl-utils.h:#define EFCPC_ATTR_MAX (__EFCPC_ATTR_MAX -1)
./rnl-utils.h:#define DCONF_ATTR_MAX (__DCONF_ATTR_MAX -1)
./rnl-utils.h:#define IATDRE_ATTR_MAX (__IATDRE_ATTR_MAX -1)
./rnl-utils.h:#define IDRN_ATTR_MAX (__IDRN_ATTR_MAX -1)
./rnl-utils.h:#define IDUN_ATTR_MAX (__IDUN_ATTR_MAX -1)
./rnl-utils.h:#define IEDR_ATTR_MAX (__IEDR_ATTR_MAX -1)
./rnl-utils.h:#define IEDRE_ATTR_MAX (__IEDRE_ATTR_MAX -1)
./rnl-utils.h:#define IDNR_ATTR_MAX (__IDNR_ATTR_MAX -1)
./rnl-utils.h:#define IDNRE_ATTR_MAX (__IDNRE_ATTR_MAX -1)
./rnl-utils.h:#define ISCN_ATTR_MAX (__ISCN_ATTR_MAX -1)
./rnl-utils.h:#define RMPFE_ATTR_MAX (__RMPFE_ATTR_MAX -1)
./rnl-utils.h:#define RPFD_ATTR_MAX (__RPFD_ATTR_MAX -1)
Binary file ./policies.o matches
./sdu.h: * Represents and SDU with the port-id the SDU is to be written to
./sdu.c:        tmp->buffer = buffer;
./sdu.c:        if (!s) return -1;
./sdu.c:        if (s->buffer)
./sdu.c:                buffer_destroy(s->buffer);
./sdu.c:        return s->buffer;
./sdu.c:        return s->buffer;
./sdu.c:        tmp->buffer = buffer_dup_gfp(flags, sdu->buffer);
./sdu.c:{ return (s && buffer_is_ok(s->buffer)) ? true : false; }
./sdu.c:                return -1;
./sdu.c:        sdu->buffer = NULL;
./sdu.c:        tmp->sdu = sdu_create_buffer_with_gfp(flags, buffer);
./sdu.c:        if (!tmp->sdu) {
./sdu.c:        if (!s) return -1;
./sdu.c:        sdu_destroy(s->sdu);
./sdu.c:{ return (s && sdu_is_ok(s->sdu)) ? true : false; }
Binary file ./efcp.o matches
./ipcp-factories.h:#include "ipcp-instances.h"
Binary file ./pft.o matches
Binary file ./ipcp-instances.o matches
./debug.c:                LOG_ERR("Debug-fs support already initialized, "
./debug.c:                return -1;
./debug.c:                LOG_DBG("Cannot setup debug-fs support");
./debug.c:                return -1;
./debug.c:        LOG_DBG("Debug-fs support initialized successfully");
./debug.c:                LOG_DBG("Debug-fs support not correctly initialized or "
./debug.c:        LOG_DBG("Debug-fs support finalized successfully");
./.pft.o.cmd:cmd_net/rina/pft.o := gcc -Wp,-MD,net/rina/.pft.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(pft)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_pft.o net/rina/pft.c
./.pft.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.pft.o.cmd:  include/asm-generic/int-ll64.h \
./.pft.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.pft.o.cmd:  include/asm-generic/bitsperlong.h \
./.pft.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.pft.o.cmd:  include/linux/compiler-gcc.h \
./.pft.o.cmd:  include/linux/compiler-gcc4.h \
./.pft.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.pft.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.pft.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.pft.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.pft.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.pft.o.cmd:  include/asm-generic/ptrace.h \
./.pft.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.pft.o.cmd:  include/asm-generic/bitops/fls64.h \
./.pft.o.cmd:  include/asm-generic/bitops/find.h \
./.pft.o.cmd:  include/asm-generic/bitops/sched.h \
./.pft.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.pft.o.cmd:  include/asm-generic/bitops/le.h \
./.pft.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.pft.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.pft.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.pft.o.cmd:  include/asm-generic/percpu.h \
./.pft.o.cmd:  include/linux/percpu-defs.h \
./.pft.o.cmd:  include/asm-generic/bug.h \
./.pft.o.cmd:  include/asm-generic/memory_model.h \
./.pft.o.cmd:  include/asm-generic/getorder.h \
./.pft.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.pft.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.pft.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.pft.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.pft.o.cmd:  include/asm-generic/ioctl.h \
./.pft.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.pft.o.cmd:  include/asm-generic/atomic-long.h \
./.pft.o.cmd:  include/linux/pageblock-flags.h \
./.pft.o.cmd:  include/linux/page-flags-layout.h \
./.pft.o.cmd:  include/asm-generic/param.h \
./.pft.o.cmd:  include/uapi/asm-generic/param.h \
./.pft.o.cmd:  include/asm-generic/topology.h \
./.pft.o.cmd:  include/asm-generic/early_ioremap.h \
./.pft.o.cmd:  include/asm-generic/iomap.h \
./.pft.o.cmd:  include/asm-generic/pci_iomap.h \
./.pft.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.pft.o.cmd:  include/asm-generic/kmap_types.h \
./.pft.o.cmd:  include/asm-generic/fixmap.h \
./.pft.o.cmd:  include/asm-generic/sections.h \
Binary file ./ipcp.o matches
Binary file ./pci.o matches
./.utils-workarounds.o.cmd:cmd_net/rina/utils-workarounds.o := gcc -Wp,-MD,net/rina/.utils-workarounds.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(utils_workarounds)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_utils-workarounds.o net/rina/utils-workarounds.c
./.utils-workarounds.o.cmd:source_net/rina/utils-workarounds.o := net/rina/utils-workarounds.c
./.utils-workarounds.o.cmd:deps_net/rina/utils-workarounds.o := \
./.utils-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.utils-workarounds.o.cmd:  include/asm-generic/int-ll64.h \
./.utils-workarounds.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.utils-workarounds.o.cmd:  include/asm-generic/bitsperlong.h \
./.utils-workarounds.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.utils-workarounds.o.cmd:  include/linux/compiler-gcc.h \
./.utils-workarounds.o.cmd:  include/linux/compiler-gcc4.h \
./.utils-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.utils-workarounds.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.utils-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.utils-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.utils-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.utils-workarounds.o.cmd:  include/asm-generic/ptrace.h \
./.utils-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.utils-workarounds.o.cmd:  include/asm-generic/bitops/fls64.h \
./.utils-workarounds.o.cmd:  include/asm-generic/bitops/find.h \
./.utils-workarounds.o.cmd:  include/asm-generic/bitops/sched.h \
./.utils-workarounds.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.utils-workarounds.o.cmd:  include/asm-generic/bitops/le.h \
./.utils-workarounds.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.utils-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.utils-workarounds.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.utils-workarounds.o.cmd:  include/asm-generic/percpu.h \
./.utils-workarounds.o.cmd:  include/linux/percpu-defs.h \
./.utils-workarounds.o.cmd:  include/asm-generic/memory_model.h \
./.utils-workarounds.o.cmd:  include/asm-generic/getorder.h \
./.utils-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.utils-workarounds.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.utils-workarounds.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.utils-workarounds.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.utils-workarounds.o.cmd:  include/asm-generic/ioctl.h \
./.utils-workarounds.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.utils-workarounds.o.cmd:  include/asm-generic/bug.h \
./.utils-workarounds.o.cmd:  include/asm-generic/atomic-long.h \
./.utils-workarounds.o.cmd:  include/asm-generic/param.h \
./.utils-workarounds.o.cmd:  include/uapi/asm-generic/param.h \
./.utils-workarounds.o.cmd:net/rina/utils-workarounds.o: $(deps_net/rina/utils-workarounds.o)
./.utils-workarounds.o.cmd:$(deps_net/rina/utils-workarounds.o):
Binary file ./rina_personality_default.ko matches
Binary file ./common.o matches
Binary file ./.efcp.c.swp matches
./debug.h:/* Embed assertions in the code upon user-choice */
./pim.h: * Port-2-IPCP instance mapping
./pim.h:#include "ipcp-instances.h"
./pim.h:/* Port/IPCP-Instance Mapping */
Binary file ./.efcp_policies.h.swp matches
./utils-workarounds.c:        if (!kref_get_unless_zero(&kobj->kref))
./utils-workarounds.c:        spin_lock(&kset->list_lock);
./utils-workarounds.c:        list_for_each_entry(k, &kset->list, entry) {
./utils-workarounds.c:        spin_unlock(&kset->list_lock);
Binary file ./rmt.o matches
./Makefile:ccflags-y += -Wtype-limits
./Makefile:obj-$(CONFIG_RINA) +=				\
./Makefile:	rnl-utils.o rnl-workarounds.o rnl.o	\
./Makefile:	ipcp-utils.o connection.o		\
./Makefile:	common.o policies.o dtcp-utils.o 
./Makefile:obj-y +=					\
./Makefile:obj-$(CONFIG_RINA_PERSONALITY_DEFAULT) +=	\
./Makefile:rina_personality_default-y :=					\
./Makefile:	ipcp-factories.o ipcp-instances.o			\
./Makefile:	cidm.o dt.o dt-utils.o dtcp.o dtp.o efcp-utils.o efcp.o	\
./Makefile:	pim.o pidm.o kfa-utils.o kfa.o				\
./Makefile:	kipcm-utils.o kipcm.o					\
./Makefile:rina_personality_default-y +=			\
./Makefile:	 utils-workarounds.o
./Makefile:obj-$(CONFIG_VMPI) += vmpi/
./Makefile:obj-$(CONFIG_RINA) += ipcps/
./Makefile:obj-$(CONFIG_RINA) += rinarp/
./.buffer.o.cmd:cmd_net/rina/buffer.o := gcc -Wp,-MD,net/rina/.buffer.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(buffer)"  -D"KBUILD_MODNAME=KBUILD_STR(buffer)" -c -o net/rina/.tmp_buffer.o net/rina/buffer.c
./.buffer.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.buffer.o.cmd:  include/asm-generic/int-ll64.h \
./.buffer.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.buffer.o.cmd:  include/asm-generic/bitsperlong.h \
./.buffer.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.buffer.o.cmd:  include/linux/compiler-gcc.h \
./.buffer.o.cmd:  include/linux/compiler-gcc4.h \
./.buffer.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.buffer.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.buffer.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.buffer.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.buffer.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.buffer.o.cmd:  include/asm-generic/ptrace.h \
./.buffer.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.buffer.o.cmd:  include/asm-generic/bitops/fls64.h \
./.buffer.o.cmd:  include/asm-generic/bitops/find.h \
./.buffer.o.cmd:  include/asm-generic/bitops/sched.h \
./.buffer.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.buffer.o.cmd:  include/asm-generic/bitops/le.h \
./.buffer.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.buffer.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.buffer.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.buffer.o.cmd:  include/asm-generic/percpu.h \
./.buffer.o.cmd:  include/linux/percpu-defs.h \
./.buffer.o.cmd:  include/asm-generic/memory_model.h \
./.buffer.o.cmd:  include/asm-generic/getorder.h \
./.buffer.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.buffer.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.buffer.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.buffer.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.buffer.o.cmd:  include/asm-generic/ioctl.h \
./.buffer.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.buffer.o.cmd:  include/asm-generic/bug.h \
./.buffer.o.cmd:  include/asm-generic/atomic-long.h \
./.buffer.o.cmd:  include/asm-generic/param.h \
./.buffer.o.cmd:  include/uapi/asm-generic/param.h \
./.buffer.o.cmd:  include/linux/pageblock-flags.h \
./.buffer.o.cmd:  include/linux/page-flags-layout.h \
./.buffer.o.cmd:  include/asm-generic/topology.h \
./.buffer.o.cmd:  include/asm-generic/early_ioremap.h \
./.buffer.o.cmd:  include/asm-generic/iomap.h \
./.buffer.o.cmd:  include/asm-generic/pci_iomap.h \
./.buffer.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.buffer.o.cmd:  include/asm-generic/kmap_types.h \
./.buffer.o.cmd:  include/asm-generic/fixmap.h \
./.buffer.o.cmd:  include/asm-generic/sections.h \
./rnl-utils.c:#define RINA_PREFIX "rnl-utils"
./rnl-utils.c:#include "ipcp-utils.h"
./rnl-utils.c:#include "rnl-utils.h"
./rnl-utils.c:#include "dtcp-utils.h"
./rnl-utils.c: *        warning messages (which would be unpossible if declared not-static)
./rnl-utils.c:        tmp->source = name_create();
./rnl-utils.c:        if (!tmp->source) {
./rnl-utils.c:        tmp->dest = name_create();
./rnl-utils.c:        if (!tmp->dest) {
./rnl-utils.c:                name_destroy(tmp->source);
./rnl-utils.c:        tmp->dif_name = name_create();
./rnl-utils.c:        if (!tmp->dif_name) {
./rnl-utils.c:                name_destroy(tmp->dest);
./rnl-utils.c:                name_destroy(tmp->source);
./rnl-utils.c:        tmp->fspec = rkzalloc(sizeof(struct flow_spec), GFP_KERNEL);
./rnl-utils.c:        if (!tmp->fspec) {
./rnl-utils.c:                name_destroy(tmp->dif_name);
./rnl-utils.c:                name_destroy(tmp->dest);
./rnl-utils.c:                name_destroy(tmp->source);
./rnl-utils.c:        tmp->dif_info = dif_info_create();
./rnl-utils.c:        if (!tmp->dif_info) {
./rnl-utils.c:        tmp->dif_config = dif_config_create();
./rnl-utils.c:        if (!tmp->dif_config) {
./rnl-utils.c:        tmp->app_name = name_create();
./rnl-utils.c:        if (!tmp->app_name) {
./rnl-utils.c:        tmp->dif_name = name_create();
./rnl-utils.c:        if (!tmp->dif_name) {
./rnl-utils.c:                name_destroy(tmp->app_name);
./rnl-utils.c:        tmp->cp_params = conn_policies_create();
./rnl-utils.c:        if (!tmp->cp_params){
./rnl-utils.c:        tmp->cp_params = conn_policies_create();
./rnl-utils.c:        if (!tmp->cp_params) {
./rnl-utils.c:        INIT_LIST_HEAD(&tmp->pft_entries);
./rnl-utils.c:        tmp->attr_type = type;
./rnl-utils.c:        switch (tmp->attr_type) {
./rnl-utils.c:                tmp->attrs =
./rnl-utils.c:                if (!tmp->attrs) {
./rnl-utils.c:                tmp->attrs =
./rnl-utils.c:                if (!tmp->attrs) {
./rnl-utils.c:                tmp->attrs =
./rnl-utils.c:                if (!tmp->attrs) {
./rnl-utils.c:                tmp->attrs =
./rnl-utils.c:                if (!tmp->attrs) {
./rnl-utils.c:                tmp->attrs =
./rnl-utils.c:                if (!tmp->attrs) {
./rnl-utils.c:                tmp->attrs =
./rnl-utils.c:                if (!tmp->attrs) {
./rnl-utils.c:                tmp->attrs =
./rnl-utils.c:                if (!tmp->attrs) {
./rnl-utils.c:                tmp->attrs =
./rnl-utils.c:                if (!tmp->attrs) {
./rnl-utils.c:                tmp->attrs =
./rnl-utils.c:                if (!tmp->attrs) {
./rnl-utils.c:                tmp->attrs =
./rnl-utils.c:                if (!tmp->attrs) {
./rnl-utils.c:                tmp->attrs =
./rnl-utils.c:                if (!tmp->attrs) {
./rnl-utils.c:                tmp->attrs = NULL;
./rnl-utils.c:                LOG_ERR("Unknown attributes type %d", tmp->attr_type);
./rnl-utils.c:                return -1;
./rnl-utils.c:        if (attrs->source)   name_destroy(attrs->source);
./rnl-utils.c:        if (attrs->dest)     name_destroy(attrs->dest);
./rnl-utils.c:        if (attrs->dif_name) name_destroy(attrs->dif_name);
./rnl-utils.c:        if (attrs->fspec)    rkfree(attrs->fspec);
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        if (attrs->dif_info) {
./rnl-utils.c:                dif_info_destroy(attrs->dif_info);
./rnl-utils.c:                return -1;
./rnl-utils.c:        if (attrs->dif_config) dif_config_destroy(attrs->dif_config);
./rnl-utils.c:                return -1;
./rnl-utils.c:        if (attrs->app_name) name_destroy(attrs->app_name);
./rnl-utils.c:        if (attrs->dif_name) name_destroy(attrs->dif_name);
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                                 &attrs->pft_entries,
./rnl-utils.c:                if (pos->ports) rkfree(pos->ports);
./rnl-utils.c:                list_del(&pos->next);
./rnl-utils.c:                return -1;
./rnl-utils.c:        switch(msg->attr_type) {
./rnl-utils.c:                rnl_ipcm_alloc_flow_req_msg_attrs_destroy(msg->attrs);
./rnl-utils.c:                rnl_alloc_flow_resp_msg_attrs_destroy(msg->attrs);
./rnl-utils.c:                rnl_ipcm_dealloc_flow_req_msg_attrs_destroy(msg->attrs);
./rnl-utils.c:                rnl_ipcm_assign_to_dif_req_msg_attrs_destroy(msg->attrs);
./rnl-utils.c:                rnl_ipcm_update_dif_config_req_msg_attrs_destroy(msg->attrs);
./rnl-utils.c:                rnl_ipcm_reg_app_req_msg_attrs_destroy(msg->attrs);
./rnl-utils.c:                rnl_ipcp_conn_create_req_msg_attrs_destroy(msg->attrs);
./rnl-utils.c:                rnl_ipcp_conn_create_arrived_msg_attrs_destroy(msg->attrs);
./rnl-utils.c:                rnl_ipcp_conn_update_req_msg_attrs_destroy(msg->attrs);
./rnl-utils.c:                rnl_ipcp_conn_destroy_req_msg_attrs_destroy(msg->attrs);
./rnl-utils.c:                rnl_rmt_mod_pfte_msg_attrs_destroy(msg->attrs);
./rnl-utils.c:                return -1;
./rnl-utils.c:                fspec_struct->average_bandwidth =
./rnl-utils.c:                fspec_struct->average_sdu_bandwidth =
./rnl-utils.c:                fspec_struct->peak_bandwidth_duration =
./rnl-utils.c:                fspec_struct->peak_sdu_bandwidth_duration =
./rnl-utils.c:                fspec_struct->undetected_bit_error_rate =
./rnl-utils.c:                fspec_struct->undetected_bit_error_rate =
./rnl-utils.c:        fspec_struct->partial_delivery =
./rnl-utils.c:        fspec_struct->ordered_delivery =
./rnl-utils.c:                fspec_struct->max_allowable_gap =
./rnl-utils.c:                fspec_struct->delay =
./rnl-utils.c:                fspec_struct->max_sdu_size =
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        entry->ports_size = nla_len(nested_attr);
./rnl-utils.c:        entry->ports      = rkzalloc(entry->ports_size, GFP_KERNEL);
./rnl-utils.c:        LOG_DBG("Allocated %zd bytes in %pk", entry->ports_size, entry->ports);
./rnl-utils.c:        if (!entry->ports) {
./rnl-utils.c:                return -1;
./rnl-utils.c:                entry->ports[i] = nla_get_u32(nla);
./rnl-utils.c:        entry->ports_size = (size_t) i;
./rnl-utils.c:                return -1;
./rnl-utils.c:                pfte_struct->destination =
./rnl-utils.c:                pfte_struct->qos_id =
./rnl-utils.c:                        return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                entry->name = nla_dup_string(attrs[IPCP_CONFIG_ENTRY_ATTR_NAME], GFP_KERNEL);
./rnl-utils.c:                entry->value = nla_dup_string(attrs[IPCP_CONFIG_ENTRY_ATTR_VALUE], GFP_KERNEL);
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                config->entry = entry;
./rnl-utils.c:                list_add(&config->next, &dif_config->ipcp_config_entries);
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                dt_cons->qos_id_length =
./rnl-utils.c:                dt_cons->port_id_length =
./rnl-utils.c:                dt_cons->cep_id_length =
./rnl-utils.c:                dt_cons->seq_num_length =
./rnl-utils.c:                dt_cons->address_length =
./rnl-utils.c:                dt_cons->length_length =
./rnl-utils.c:                dt_cons->max_pdu_size =
./rnl-utils.c:                dt_cons->max_pdu_life =
./rnl-utils.c:        dt_cons->dif_integrity = nla_get_flag(attrs[DTC_ATTR_DIF_INTEGRITY]);
./rnl-utils.c:                if (!efcp_config->dt_cons)
./rnl-utils.c:                                  efcp_config->dt_cons))
./rnl-utils.c:                                 efcp_config->unknown_flow))
./rnl-utils.c:        return -1;
./rnl-utils.c:                dif_config->address = nla_get_u32(attrs[DCONF_ATTR_ADDRESS]);
./rnl-utils.c:                dif_config->efcp_config = efcp_config_create();
./rnl-utils.c:                if (!dif_config->efcp_config)
./rnl-utils.c:                                      dif_config->efcp_config))
./rnl-utils.c:        if (dif_config->efcp_config)
./rnl-utils.c:                efcp_config_destroy(dif_config->efcp_config);
./rnl-utils.c:        return -1;
./rnl-utils.c:                dif_info->type = nla_dup_string(attrs[DINFO_ATTR_DIF_TYPE],
./rnl-utils.c:                dif_info->type = NULL;
./rnl-utils.c:                                dif_info->dif_name) < 0)
./rnl-utils.c:                                     dif_info->configuration) < 0)
./rnl-utils.c:        return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                rib_obj_struct->rib_obj_class =
./rnl-utils.c:                nla_strlcpy(rib_obj_struct->rib_obj_name,
./rnl-utils.c:                rib_obj_struct->rib_obj_instance =
./rnl-utils.c:                return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        cpp_struct->dtcp_present = nla_get_flag(attrs[CPP_ATTR_DTCP_PRESENT]);
./rnl-utils.c:                                      cpp_struct->dtcp_cfg)) {
./rnl-utils.c:                        return -1;
./rnl-utils.c:                                 cpp_struct->initial_sequence_number)) {
./rnl-utils.c:                        return -1;
./rnl-utils.c:                cpp_struct->seq_num_ro_th =
./rnl-utils.c:                cpp_struct->initial_a_timer =
./rnl-utils.c:        cpp_struct->partial_delivery    =
./rnl-utils.c:        cpp_struct->incomplete_delivery =
./rnl-utils.c:        cpp_struct->in_order_delivery   =
./rnl-utils.c:                cpp_struct->max_sdu_gap =
./rnl-utils.c:        if (parse_dif_info(info->attrs[IATDR_ATTR_DIF_INFORMATION],
./rnl-utils.c:                           msg_attrs->dif_info)) {
./rnl-utils.c:                return -1;
./rnl-utils.c:        if (parse_dif_config(info->attrs[IUDCR_ATTR_DIF_CONFIGURATION],
./rnl-utils.c:                             msg_attrs->dif_config)) {
./rnl-utils.c:                return -1;
./rnl-utils.c:        if (info->attrs[IDRN_ATTR_IPC_PROCESS_NAME])
./rnl-utils.c:                if (parse_app_name_info(info->attrs[IDRN_ATTR_IPC_PROCESS_NAME],
./rnl-utils.c:                                        msg_attrs->ipcp_name))
./rnl-utils.c:        if (info->attrs[IDRN_ATTR_DIF_NAME])
./rnl-utils.c:                if (parse_app_name_info(info->attrs[IDRN_ATTR_DIF_NAME],
./rnl-utils.c:                                        msg_attrs->dif_name))
./rnl-utils.c:        msg_attrs->is_registered =
./rnl-utils.c:                        nla_get_flag(info->attrs[IDRN_ATTR_REGISTRATION]);
./rnl-utils.c:        return -1;
./rnl-utils.c:        if (info->attrs[IDUN_ATTR_RESULT])
./rnl-utils.c:                msg_attrs->result = nla_get_u32(info->attrs[IDUN_ATTR_RESULT]);
./rnl-utils.c:        if (parse_app_name_info(info->attrs[IAFRM_ATTR_SOURCE_APP_NAME],
./rnl-utils.c:                                msg_attrs->source)                       ||
./rnl-utils.c:            parse_app_name_info(info->attrs[IAFRM_ATTR_DEST_APP_NAME],
./rnl-utils.c:                                msg_attrs->dest)                         ||
./rnl-utils.c:            parse_flow_spec(info->attrs[IAFRM_ATTR_FLOW_SPEC],
./rnl-utils.c:                            msg_attrs->fspec)                            ||
./rnl-utils.c:            parse_app_name_info(info->attrs[IAFRM_ATTR_DIF_NAME],
./rnl-utils.c:                                msg_attrs->dif_name)) {
./rnl-utils.c:                return -1;
./rnl-utils.c:        if (parse_app_name_info(info->attrs[IAFRA_ATTR_SOURCE_APP_NAME],
./rnl-utils.c:                                msg_attrs->source)                      ||
./rnl-utils.c:            parse_app_name_info(info->attrs[IAFRA_ATTR_DEST_APP_NAME],
./rnl-utils.c:                                msg_attrs->dest)                        ||
./rnl-utils.c:            parse_app_name_info(info->attrs[IAFRA_ATTR_DIF_NAME],
./rnl-utils.c:                                msg_attrs->dif_name)                    ||
./rnl-utils.c:            parse_flow_spec(info->attrs[IAFRA_ATTR_FLOW_SPEC],
./rnl-utils.c:                            msg_attrs->fspec)) {
./rnl-utils.c:                return -1;
./rnl-utils.c:        if (info->attrs[IAFRA_ATTR_PORT_ID])
./rnl-utils.c:                msg_attrs->id = nla_get_u32(info->attrs[IAFRA_ATTR_PORT_ID]);
./rnl-utils.c:        if (info->attrs[IAFRE_ATTR_RESULT])
./rnl-utils.c:                msg_attrs->result =
./rnl-utils.c:                        nla_get_u32(info->attrs[IAFRE_ATTR_RESULT]);
./rnl-utils.c:        msg_attrs->notify_src =
./rnl-utils.c:                        nla_get_flag(info->attrs[IAFRE_ATTR_NOTIFY_SOURCE]);
./rnl-utils.c:        if (info->attrs[IDFRT_ATTR_PORT_ID])
./rnl-utils.c:                msg_attrs->id =
./rnl-utils.c:                        nla_get_u32(info->attrs[IDFRT_ATTR_PORT_ID]);
./rnl-utils.c:        if (info->attrs[IFDN_ATTR_PORT_ID])
./rnl-utils.c:                msg_attrs->id = nla_get_u32(info->attrs[IFDN_ATTR_PORT_ID]);
./rnl-utils.c:        if (info->attrs[IFDN_ATTR_CODE])
./rnl-utils.c:                msg_attrs->code = nla_get_u32(info->attrs[IFDN_ATTR_CODE]);
./rnl-utils.c:        if (info->attrs[ICCRQ_ATTR_PORT_ID])
./rnl-utils.c:                msg_attrs->port_id  =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICCRQ_ATTR_PORT_ID]);
./rnl-utils.c:        if (info->attrs[ICCRQ_ATTR_SOURCE_ADDR])
./rnl-utils.c:                msg_attrs->src_addr =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICCRQ_ATTR_SOURCE_ADDR]);
./rnl-utils.c:        if (info->attrs[ICCRQ_ATTR_DEST_ADDR])
./rnl-utils.c:                msg_attrs->dst_addr =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICCRQ_ATTR_DEST_ADDR]);
./rnl-utils.c:        if (info->attrs[ICCRQ_ATTR_QOS_ID])
./rnl-utils.c:                msg_attrs->qos_id   =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICCRQ_ATTR_QOS_ID]);
./rnl-utils.c:        if (info->attrs[ICCRQ_ATTR_POLICIES_PARAMS]) {
./rnl-utils.c:                if (parse_conn_policies_params(info->attrs
./rnl-utils.c:                                               msg_attrs->cp_params)) {
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (info->attrs[ICCA_ATTR_PORT_ID])
./rnl-utils.c:                msg_attrs->port_id =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICCA_ATTR_PORT_ID]);
./rnl-utils.c:        if (info->attrs[ICCA_ATTR_SOURCE_ADDR])
./rnl-utils.c:                msg_attrs->src_addr =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICCA_ATTR_SOURCE_ADDR]);
./rnl-utils.c:        if (info->attrs[ICCA_ATTR_DEST_ADDR])
./rnl-utils.c:                msg_attrs->dst_addr =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICCA_ATTR_DEST_ADDR]);
./rnl-utils.c:        if (info->attrs[ICCA_ATTR_DEST_CEP_ID])
./rnl-utils.c:                msg_attrs->dst_cep =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICCA_ATTR_DEST_CEP_ID]);
./rnl-utils.c:        if (info->attrs[ICCA_ATTR_QOS_ID])
./rnl-utils.c:                msg_attrs->qos_id =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICCA_ATTR_QOS_ID]);
./rnl-utils.c:        if (info->attrs[ICCA_ATTR_FLOW_USER_IPCP_ID])
./rnl-utils.c:                msg_attrs->flow_user_ipc_process_id =
./rnl-utils.c:                        nla_get_u16(info->attrs[ICCA_ATTR_FLOW_USER_IPCP_ID]);
./rnl-utils.c:        if (info->attrs[ICCA_ATTR_POLICIES_PARAMS]) {
./rnl-utils.c:                if (parse_conn_policies_params(info->attrs
./rnl-utils.c:                                               msg_attrs->cp_params)) {
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (info->attrs[ICURQ_ATTR_PORT_ID])
./rnl-utils.c:                msg_attrs->port_id =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICURQ_ATTR_PORT_ID]);
./rnl-utils.c:        if (info->attrs[ICURQ_ATTR_SOURCE_CEP_ID])
./rnl-utils.c:                msg_attrs->src_cep =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICURQ_ATTR_SOURCE_CEP_ID]);
./rnl-utils.c:        if (info->attrs[ICURQ_ATTR_DEST_CEP_ID])
./rnl-utils.c:                msg_attrs->dst_cep =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICURQ_ATTR_DEST_CEP_ID]);
./rnl-utils.c:        if (info->attrs[ICURQ_ATTR_FLOW_USER_IPCP_ID])
./rnl-utils.c:                msg_attrs->flow_user_ipc_process_id =
./rnl-utils.c:                        nla_get_u16(info->attrs[ICURQ_ATTR_FLOW_USER_IPCP_ID]);
./rnl-utils.c:        if (info->attrs[ICDR_ATTR_PORT_ID])
./rnl-utils.c:                msg_attrs->port_id =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICDR_ATTR_PORT_ID]);
./rnl-utils.c:        if (info->attrs[ICDR_ATTR_SOURCE_CEP_ID])
./rnl-utils.c:                msg_attrs->src_cep =
./rnl-utils.c:                        nla_get_u32(info->attrs[ICDR_ATTR_SOURCE_CEP_ID]);
./rnl-utils.c:        if (parse_app_name_info(info->attrs[IRAR_ATTR_APP_NAME],
./rnl-utils.c:                                msg_attrs->app_name)             ||
./rnl-utils.c:            parse_app_name_info(info->attrs[IRAR_ATTR_DIF_NAME],
./rnl-utils.c:                                msg_attrs->dif_name)) {
./rnl-utils.c:                return -1;
./rnl-utils.c:        if (parse_app_name_info(info->attrs[IUAR_ATTR_APP_NAME],
./rnl-utils.c:                                msg_attrs->app_name)             ||
./rnl-utils.c:            parse_app_name_info(info->attrs[IUAR_ATTR_DIF_NAME],
./rnl-utils.c:                                msg_attrs->dif_name)) {
./rnl-utils.c:                return -1;
./rnl-utils.c:        if (parse_rib_object(info->attrs[IDQR_ATTR_OBJECT],
./rnl-utils.c:                             msg_attrs->rib_obj))
./rnl-utils.c:        if (info->attrs[IDQR_ATTR_SCOPE])
./rnl-utils.c:                msg_attrs->scope =
./rnl-utils.c:                        nla_get_u32(info->attrs[IDQR_ATTR_SCOPE]);
./rnl-utils.c:        if (info->attrs[IDQR_ATTR_FILTER])
./rnl-utils.c:                nla_strlcpy(msg_attrs->filter,
./rnl-utils.c:                            info->attrs[IDQR_ATTR_FILTER],
./rnl-utils.c:                            sizeof(info->attrs[IDQR_ATTR_FILTER]));
./rnl-utils.c:        return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                INIT_LIST_HEAD(&entry->next);
./rnl-utils.c:                list_add(&entry->next, &msg->pft_entries);
./rnl-utils.c:        if (info->attrs[RMPFE_ATTR_ENTRIES]) {
./rnl-utils.c:                if (parse_list_pfte_conf_e(info->attrs[RMPFE_ATTR_ENTRIES],
./rnl-utils.c:        if (info->attrs[RMPFE_ATTR_MODE])
./rnl-utils.c:                msg_attrs->mode =
./rnl-utils.c:                        nla_get_u32(info->attrs[RMPFE_ATTR_MODE]);
./rnl-utils.c:        return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        msg->src_port              = info->snd_portid;
./rnl-utils.c:        msg->dst_port              = 0;
./rnl-utils.c:        msg->seq_num               = info->snd_seq;
./rnl-utils.c:        msg->op_code               = (msg_type_t) info->genlhdr->cmd;
./rnl-utils.c:        msg->req_msg_flag          = 0;
./rnl-utils.c:        msg->resp_msg_flag         = 0;
./rnl-utils.c:        msg->notification_msg_flag = 0;
./rnl-utils.c:        msg->header = *((struct rina_msg_hdr *) info->userhdr);
./rnl-utils.c:        LOG_DBG("msg at %pK / msg->attrs at %pK",  msg, msg->attrs);
./rnl-utils.c:        LOG_DBG("  src-ipc-id: %d", msg->header.src_ipc_id);
./rnl-utils.c:        LOG_DBG("  dst-ipc-id: %d", msg->header.dst_ipc_id);
./rnl-utils.c:        switch(info->genlhdr->cmd) {
./rnl-utils.c:                                                         msg->attrs) < 0)
./rnl-utils.c:                                                             msg->attrs) < 0)
./rnl-utils.c:                                                         msg->attrs) < 0)
./rnl-utils.c:                                                           msg->attrs) < 0)
./rnl-utils.c:                                                      msg->attrs) < 0)
./rnl-utils.c:                                                              msg->attrs) < 0)
./rnl-utils.c:                                                       msg->attrs) < 0)
./rnl-utils.c:                                                        msg->attrs) < 0)
./rnl-utils.c:                                                         msg->attrs) < 0)
./rnl-utils.c:                                                       msg->attrs) < 0)
./rnl-utils.c:                                                           msg->attrs) < 0)
./rnl-utils.c:                                                       msg->attrs) < 0)
./rnl-utils.c:                                                        msg->attrs) < 0)
./rnl-utils.c:                                                   msg->attrs) < 0)
./rnl-utils.c:                                                     msg->attrs) < 0)
./rnl-utils.c:                                                     msg->attrs) < 0)
./rnl-utils.c:                                                     msg->attrs) < 0)
./rnl-utils.c:        LOG_ERR("Could not parse NL message type: %d", info->genlhdr->cmd);
./rnl-utils.c:        return -1;
./rnl-utils.c:        return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        if (name->process_name)
./rnl-utils.c:                                   name->process_name))
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (name->process_instance)
./rnl-utils.c:                                   name->process_instance))
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (name->entity_name)
./rnl-utils.c:                                   name->entity_name))
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (name->entity_instance)
./rnl-utils.c:                                   name->entity_instance))
./rnl-utils.c:                        return -1;
./rnl-utils.c:                LOG_ERR("Cannot format flow-spec, "
./rnl-utils.c:                return -1;
./rnl-utils.c:                LOG_ERR("Cannot format flow-spec, "
./rnl-utils.c:                return -1;
./rnl-utils.c:         * FIXME: only->max or min attributes are taken from
./rnl-utils.c:        if (fspec->average_bandwidth > 0)
./rnl-utils.c:                                fspec->average_bandwidth))
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (fspec->average_sdu_bandwidth > 0)
./rnl-utils.c:                                fspec->average_sdu_bandwidth))
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (fspec->delay > 0)
./rnl-utils.c:                                fspec->delay))
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (fspec->jitter > 0)
./rnl-utils.c:                                fspec->jitter))
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (fspec->max_allowable_gap >= 0)
./rnl-utils.c:                                fspec->max_allowable_gap))
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (fspec->max_sdu_size > 0)
./rnl-utils.c:                                fspec->max_sdu_size))
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (fspec->ordered_delivery)
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (fspec->partial_delivery)
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (fspec->peak_bandwidth_duration > 0)
./rnl-utils.c:                                fspec->peak_bandwidth_duration))
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (fspec->peak_sdu_bandwidth_duration > 0)
./rnl-utils.c:                                fspec->peak_sdu_bandwidth_duration))
./rnl-utils.c:                        return -1;
./rnl-utils.c:        if (fspec->undetected_bit_error_rate > 0)
./rnl-utils.c:                                fspec->undetected_bit_error_rate))
./rnl-utils.c:                        return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        /* name-formating might be moved into its own function (and reused) */
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                "(type = %d, seq-num %u, port = %u)",
./rnl-utils.c:                        "(type = %d, seq-num %u, port = %u, result = %d)",
./rnl-utils.c:                return -1;
./rnl-utils.c:                "(type = %d, seq-num %u, port = %u)",
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                        return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                                 pos->destination)                         ||
./rnl-utils.c:                     nla_put_u32(skb_out, PFTELE_ATTR_QOSID, pos->qos_id)) ||
./rnl-utils.c:                    format_pft_entry_port_list(pos->ports,
./rnl-utils.c:                                               pos->ports_size,
./rnl-utils.c:                list_del(&pos->next);
./rnl-utils.c:                rkfree(pos->ports);
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        out_hdr->src_ipc_id = id;
./rnl-utils.c:        out_hdr->dst_ipc_id = 0;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        out_hdr->src_ipc_id = id;
./rnl-utils.c:        out_hdr->dst_ipc_id = 0;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        out_hdr->src_ipc_id = ipc_id;
./rnl-utils.c:        out_hdr->dst_ipc_id = 0;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        hdr->dst_ipc_id = 0;
./rnl-utils.c:        hdr->src_ipc_id = ipc_id;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        out_hdr->src_ipc_id = ipc_id; /* This IPC process */
./rnl-utils.c:        out_hdr->dst_ipc_id = 0;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        out_hdr->src_ipc_id = ipc_id; /* This IPC process */
./rnl-utils.c:        out_hdr->dst_ipc_id = 0;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        out_hdr->src_ipc_id = ipc_id; /* This IPC process */
./rnl-utils.c:        out_hdr->dst_ipc_id = 0;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        out_hdr->src_ipc_id = ipc_id; /* This IPC process */
./rnl-utils.c:        out_hdr->dst_ipc_id = 0;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        out_hdr->src_ipc_id = ipc_id; /* This IPC process */
./rnl-utils.c:        out_hdr->dst_ipc_id = 0;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        out_hdr->src_ipc_id = ipc_id; /* This IPC process */
./rnl-utils.c:        out_hdr->dst_ipc_id = 0;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        out_hdr->src_ipc_id = ipc_id; /* This IPC process */
./rnl-utils.c:        out_hdr->dst_ipc_id = 0;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        out_hdr->src_ipc_id = 0;
./rnl-utils.c:        out_hdr->dst_ipc_id = 0;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
./rnl-utils.c:        out_hdr->src_ipc_id = ipc_id; /* This IPC process */
./rnl-utils.c:        out_hdr->dst_ipc_id = 0;
./rnl-utils.c:                return -1;
./rnl-utils.c:                return -1;
Binary file ./du.o matches
./pidm.c: * PIDM (Port-IDs Manager)
./pidm.c:        bitmap_zero(instance->bitmap, BITS_IN_BITMAP);
./pidm.c:                return -1;
./pidm.c:        id = (port_id_t) bitmap_find_next_zero_area(instance->bitmap,
./pidm.c:                LOG_WARN("Got an out-of-range flow-id (%d) from "
./pidm.c:        bitmap_set(instance->bitmap, id, 1);
./pidm.c:                LOG_ERR("Bad flow-id passed, bailing out");
./pidm.c:                return -1;
./pidm.c:                return -1;
./pidm.c:        bitmap_clear(instance->bitmap, (id - 1), 1);
Binary file ./ipcp-factories.o matches
./cidm.c: * CIDM (CEP-IDs Manager)
./cidm.c:        bitmap_zero(instance->bitmap, BITS_IN_BITMAP);
./cidm.c:                return -1;
./cidm.c:        id = (cep_id_t) bitmap_find_next_zero_area(instance->bitmap,
./cidm.c:                LOG_WARN("Got an out-of-range cep-id (%d) from "
./cidm.c:        bitmap_set(instance->bitmap, id, 1);
./cidm.c:                LOG_ERR("Bad cep-id passed, bailing out");
./cidm.c:                return -1;
./cidm.c:                return -1;
./cidm.c:        bitmap_clear(instance->bitmap, id, 1);
Binary file ./utils.o matches
./.dtcp-utils.o.cmd:cmd_net/rina/dtcp-utils.o := gcc -Wp,-MD,net/rina/.dtcp-utils.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits    -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(dtcp_utils)"  -D"KBUILD_MODNAME=KBUILD_STR(dtcp_utils)" -c -o net/rina/.tmp_dtcp-utils.o net/rina/dtcp-utils.c
./.dtcp-utils.o.cmd:source_net/rina/dtcp-utils.o := net/rina/dtcp-utils.c
./.dtcp-utils.o.cmd:deps_net/rina/dtcp-utils.o := \
./.dtcp-utils.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.dtcp-utils.o.cmd:  include/linux/compiler-gcc.h \
./.dtcp-utils.o.cmd:  include/linux/compiler-gcc4.h \
./.dtcp-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.dtcp-utils.o.cmd:  include/asm-generic/int-ll64.h \
./.dtcp-utils.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.dtcp-utils.o.cmd:  include/asm-generic/bitsperlong.h \
./.dtcp-utils.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.dtcp-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.dtcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.dtcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.dtcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.dtcp-utils.o.cmd:  include/asm-generic/ptrace.h \
./.dtcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.dtcp-utils.o.cmd:  include/asm-generic/bitops/fls64.h \
./.dtcp-utils.o.cmd:  include/asm-generic/bitops/find.h \
./.dtcp-utils.o.cmd:  include/asm-generic/bitops/sched.h \
./.dtcp-utils.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.dtcp-utils.o.cmd:  include/asm-generic/bitops/le.h \
./.dtcp-utils.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.dtcp-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.dtcp-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.dtcp-utils.o.cmd:  include/asm-generic/percpu.h \
./.dtcp-utils.o.cmd:  include/linux/percpu-defs.h \
./.dtcp-utils.o.cmd:  include/asm-generic/memory_model.h \
./.dtcp-utils.o.cmd:  include/asm-generic/getorder.h \
./.dtcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.dtcp-utils.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.dtcp-utils.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.dtcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.dtcp-utils.o.cmd:  include/asm-generic/ioctl.h \
./.dtcp-utils.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.dtcp-utils.o.cmd:  include/asm-generic/bug.h \
./.dtcp-utils.o.cmd:  include/asm-generic/atomic-long.h \
./.dtcp-utils.o.cmd:  include/asm-generic/param.h \
./.dtcp-utils.o.cmd:  include/uapi/asm-generic/param.h \
./.dtcp-utils.o.cmd:  include/linux/pageblock-flags.h \
./.dtcp-utils.o.cmd:  include/linux/page-flags-layout.h \
./.dtcp-utils.o.cmd:  include/asm-generic/topology.h \
./.dtcp-utils.o.cmd:  include/asm-generic/early_ioremap.h \
./.dtcp-utils.o.cmd:  include/asm-generic/iomap.h \
./.dtcp-utils.o.cmd:  include/asm-generic/pci_iomap.h \
./.dtcp-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.dtcp-utils.o.cmd:  include/asm-generic/kmap_types.h \
./.dtcp-utils.o.cmd:  include/asm-generic/fixmap.h \
./.dtcp-utils.o.cmd:  include/asm-generic/sections.h \
./.dtcp-utils.o.cmd:  net/rina/dtcp-utils.h \
./.dtcp-utils.o.cmd:net/rina/dtcp-utils.o: $(deps_net/rina/dtcp-utils.o)
./.dtcp-utils.o.cmd:$(deps_net/rina/dtcp-utils.o):
Binary file ./rnl-workarounds.o matches
Binary file ./kipcm-utils.o matches
Binary file ./pidm.o matches
./kipcm.c:#include "ipcp-factories.h"
./kipcm.c:#include "ipcp-utils.h"
./kipcm.c:#include "kipcm-utils.h"
./kipcm.c:#include "rnl-utils.h"
./kipcm.c:#include "kfa-utils.h"
./kipcm.c:#include "efcp-utils.h"
./kipcm.c:#define DEFAULT_FACTORY "normal-ipc"
./kipcm.c:#define KIPCM_LOCK_INIT(X) mutex_init(&(X -> lock));
./kipcm.c:#define KIPCM_LOCK_FINI(X) mutex_destroy(&(X -> lock));
./kipcm.c:#define __KIPCM_LOCK(X)    mutex_lock(&(X -> lock))
./kipcm.c:#define __KIPCM_UNLOCK(X)  mutex_unlock(&(X -> lock))
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        attrs  = msg->attrs;
./kipcm.c:        user_ipc_id  = msg->header.src_ipc_id;
./kipcm.c:        ipc_id       = msg->header.dst_ipc_id;
./kipcm.c:        ipc_process  = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:        pid = kfa_port_id_reserve(kipcm->kfa, ipc_id);
./kipcm.c:        if (kfa_flow_create(kipcm->kfa, ipc_id, pid)) {
./kipcm.c:                kfa_port_id_release(kipcm->kfa, pid);
./kipcm.c:        if (kfa_flow_ipcp_bind(kipcm->kfa, pid, ipc_process)) {
./kipcm.c:                kfa_port_id_release(kipcm->kfa, pid);
./kipcm.c:        if (kipcm_pmap_add(kipcm->messages->ingress, pid, info->snd_seq)) {
./kipcm.c:                        pid, info->snd_seq);
./kipcm.c:                kfa_flow_deallocate(kipcm->kfa, pid);
./kipcm.c:                usr_ipcp = ipcp_imap_find(kipcm->instances, user_ipc_id);
./kipcm.c:                        kfa_flow_deallocate(kipcm->kfa, pid);
./kipcm.c:                ASSERT(usr_ipcp->ops);
./kipcm.c:                ASSERT(usr_ipcp->ops->flow_binding_ipcp);
./kipcm.c:                if (usr_ipcp->ops->flow_binding_ipcp(usr_ipcp->data, pid)) {
./kipcm.c:                        kfa_flow_deallocate(kipcm->kfa, pid);
./kipcm.c:        ASSERT(ipc_process->ops);
./kipcm.c:        ASSERT(ipc_process->ops->flow_allocate_request);
./kipcm.c:        if (ipc_process->ops->flow_allocate_request(ipc_process->data,
./kipcm.c:                                                    attrs->source,
./kipcm.c:                                                    attrs->dest,
./kipcm.c:                                                    attrs->fspec,
./kipcm.c:                kfa_flow_deallocate(kipcm->kfa, pid);
./kipcm.c:                                             -1,
./kipcm.c:                                             info->snd_seq,
./kipcm.c:                                             info->snd_portid,
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        attrs = msg->attrs;
./kipcm.c:                return -1;
./kipcm.c:        user_ipc_id  = msg->header.src_ipc_id;
./kipcm.c:        ipc_id       = msg->header.dst_ipc_id;
./kipcm.c:        ipc_process  = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:                return -1;
./kipcm.c:        pid = kipcm_smap_find(kipcm->messages->egress, info->snd_seq);
./kipcm.c:                        pid, info->snd_seq);
./kipcm.c:                return -1;
./kipcm.c:        if (kipcm_smap_remove(kipcm->messages->egress, info->snd_seq)) {
./kipcm.c:                return -1;
./kipcm.c:                usr_ipcp = ipcp_imap_find(kipcm->instances, user_ipc_id);
./kipcm.c:                        kfa_flow_deallocate(kipcm->kfa, pid);
./kipcm.c:                        return -1;
./kipcm.c:                ASSERT(usr_ipcp->ops);
./kipcm.c:                ASSERT(usr_ipcp->ops->flow_binding_ipcp);
./kipcm.c:                if (usr_ipcp->ops->flow_binding_ipcp(usr_ipcp->data, pid)) {
./kipcm.c:                        kfa_flow_deallocate(kipcm->kfa, pid);
./kipcm.c:                        return -1;
./kipcm.c:        ASSERT(ipc_process->ops);
./kipcm.c:        ASSERT(ipc_process->ops->flow_allocate_response);
./kipcm.c:        if (ipc_process->ops->flow_allocate_response(ipc_process->data,
./kipcm.c:                                                     attrs->result)) {
./kipcm.c:                        attrs->id);
./kipcm.c:                kfa_flow_deallocate(kipcm->kfa, pid);
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        attrs = msg->attrs;
./kipcm.c:        ipc_id      = msg->header.dst_ipc_id;
./kipcm.c:        ipc_process = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:        ASSERT(ipc_process->ops);
./kipcm.c:        ASSERT(ipc_process->ops->flow_deallocate);
./kipcm.c:        if (ipc_process->ops->flow_deallocate(ipc_process->data, attrs->id)) {
./kipcm.c:                        "for port id: %d", attrs->id);
./kipcm.c:                                               info->snd_seq,
./kipcm.c:                                               info->snd_portid);
./kipcm.c:                                               -1,
./kipcm.c:                                               info->snd_seq,
./kipcm.c:                                               info->snd_portid);
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                retval = -1;
./kipcm.c:        attrs = msg->attrs;
./kipcm.c:                retval = -1;
./kipcm.c:        ipc_id      = msg->header.dst_ipc_id;
./kipcm.c:        ipc_process = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:                retval = -1;
./kipcm.c:        ASSERT(ipc_process->ops);
./kipcm.c:        ASSERT(ipc_process->ops->assign_to_dif);
./kipcm.c:        if (ipc_process->ops->assign_to_dif(ipc_process->data,
./kipcm.c:                                            attrs->dif_info)) {
./kipcm.c:                char * tmp = name_tostring(attrs->dif_info->dif_name);
./kipcm.c:                retval = -1;
./kipcm.c:                                            info->snd_seq,
./kipcm.c:                                            info->snd_portid);
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        attrs = msg->attrs;
./kipcm.c:        ipc_id = msg->header.dst_ipc_id;
./kipcm.c:        ipc_process = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:        ASSERT(ipc_process->ops);
./kipcm.c:        ASSERT(ipc_process->ops->update_dif_config);
./kipcm.c:        if (ipc_process->ops->update_dif_config(ipc_process->data,
./kipcm.c:                                                attrs->dif_config)) {
./kipcm.c:                                                info->snd_seq,
./kipcm.c:                                                info->snd_portid);
./kipcm.c:                                                -1,
./kipcm.c:                                                info->snd_seq,
./kipcm.c:                                                info->snd_portid);
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        attrs = msg->attrs;
./kipcm.c:        ipc_id      = msg->header.dst_ipc_id;
./kipcm.c:        ipc_process = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:        ASSERT(ipc_process->ops);
./kipcm.c:        ASSERT(ipc_process->ops->application_register);
./kipcm.c:        if (ipc_process->ops->application_register(ipc_process->data,
./kipcm.c:                                                   attrs->app_name))
./kipcm.c:                                             info->snd_seq,
./kipcm.c:                                             info->snd_portid,
./kipcm.c:                                             -1,
./kipcm.c:                                             info->snd_seq,
./kipcm.c:                                             info->snd_portid,
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        attrs = msg->attrs;
./kipcm.c:        ipc_id      = msg->header.dst_ipc_id;
./kipcm.c:        ipc_process = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:        ASSERT(ipc_process->ops);
./kipcm.c:        ASSERT(ipc_process->ops->application_unregister);
./kipcm.c:        if (ipc_process->ops->application_unregister(ipc_process->data,
./kipcm.c:                                                     attrs->app_name))
./kipcm.c:                                             info->snd_seq,
./kipcm.c:                                             info->snd_portid,
./kipcm.c:                                             -1,
./kipcm.c:                                             info->snd_seq,
./kipcm.c:                                             info->snd_portid,
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        attrs = msg->attrs;
./kipcm.c:        port_id = attrs->port_id;
./kipcm.c:        ipc_id  = msg->header.dst_ipc_id;
./kipcm.c:        ipcp    = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:        if (kfa_flow_ipcp_bind(kipcm->kfa, port_id, ipcp)) {
./kipcm.c:        src_cep = ipcp->ops->connection_create(ipcp->data,
./kipcm.c:                                               attrs->port_id,
./kipcm.c:                                               attrs->src_addr,
./kipcm.c:                                               attrs->dst_addr,
./kipcm.c:                                               attrs->qos_id,
./kipcm.c:                                               attrs->cp_params);
./kipcm.c:                                               info->snd_seq,
./kipcm.c:                                               info->snd_portid);
./kipcm.c:                                               info->snd_seq,
./kipcm.c:                                               info->snd_portid);
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        attrs = msg->attrs;
./kipcm.c:        port_id     = attrs->port_id;
./kipcm.c:        ipc_id      = msg->header.dst_ipc_id;
./kipcm.c:        user_ipc_id = attrs->flow_user_ipc_process_id;
./kipcm.c:        ipcp        = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:        if (kfa_flow_ipcp_bind(kipcm->kfa, port_id, ipcp)) {
./kipcm.c:                user_ipcp = ipcp_imap_find(kipcm->instances, user_ipc_id);
./kipcm.c:                if (user_ipcp->ops->flow_binding_ipcp(user_ipcp->data,
./kipcm.c:        src_cep = ipcp->ops->connection_create_arrived(ipcp->data,
./kipcm.c:                                                       attrs->port_id,
./kipcm.c:                                                       attrs->src_addr,
./kipcm.c:                                                       attrs->dst_addr,
./kipcm.c:                                                       attrs->qos_id,
./kipcm.c:                                                       attrs->dst_cep,
./kipcm.c:                                                       attrs->cp_params);
./kipcm.c:                                                 attrs->dst_cep,
./kipcm.c:                                                 info->snd_seq,
./kipcm.c:                                                 info->snd_portid);
./kipcm.c:                                                 info->snd_seq,
./kipcm.c:                                                 info->snd_portid);
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        attrs = msg->attrs;
./kipcm.c:        port_id     = attrs->port_id;
./kipcm.c:        ipc_id      = msg->header.dst_ipc_id;
./kipcm.c:        user_ipc_id = attrs->flow_user_ipc_process_id;
./kipcm.c:        ipcp        = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:                user_ipcp = ipcp_imap_find(kipcm->instances, user_ipc_id);
./kipcm.c:                        ipcp->ops->connection_destroy(ipcp->data,
./kipcm.c:                                                      attrs->src_cep);
./kipcm.c:                if (user_ipcp->ops->flow_binding_ipcp(user_ipcp->data,
./kipcm.c:                        ipcp->ops->connection_destroy(ipcp->data,
./kipcm.c:                                                      attrs->src_cep);
./kipcm.c:        if (ipcp->ops->connection_update(ipcp->data,
./kipcm.c:                                         attrs->src_cep,
./kipcm.c:                                         attrs->dst_cep))
./kipcm.c:                                                 info->snd_seq,
./kipcm.c:                                                 info->snd_portid);
./kipcm.c:                                                 -1,
./kipcm.c:                                                 info->snd_seq,
./kipcm.c:                                                 info->snd_portid);
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        attrs = msg->attrs;
./kipcm.c:        port_id = attrs->port_id;
./kipcm.c:        ipc_id  = msg->header.dst_ipc_id;
./kipcm.c:        ipcp    = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:        if (ipcp->ops->connection_destroy(ipcp->data, attrs->src_cep))
./kipcm.c:                                                  info->snd_seq,
./kipcm.c:                                                  info->snd_portid);
./kipcm.c:                                                  -1,
./kipcm.c:                                                  info->snd_seq,
./kipcm.c:                                                  info->snd_portid);
./kipcm.c:        LOG_INFO("IPC Manager started. It is listening at NL port-id %d",
./kipcm.c:                 info->snd_portid);
./kipcm.c:        rnl_set_ipc_manager_port(info->snd_portid);
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        attrs = msg->attrs;
./kipcm.c:                return -1;
./kipcm.c:        ipc_id      = msg->header.dst_ipc_id;
./kipcm.c:        ipc_process = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:                return -1;
./kipcm.c:        switch(attrs->mode) {
./kipcm.c:                if (ipc_process->ops->pft_flush(ipc_process->data)) {
./kipcm.c:                        return -1;
./kipcm.c:                op = ipc_process->ops->pft_add;
./kipcm.c:                op = ipc_process->ops->pft_remove;
./kipcm.c:                op = ipc_process->ops->pft_add;
./kipcm.c:                        attrs->mode);
./kipcm.c:                return -1;
./kipcm.c:        list_for_each_entry(entry, &attrs->pft_entries, next) {
./kipcm.c:                if (op(ipc_process->data,
./kipcm.c:                       entry->destination,
./kipcm.c:                       entry->qos_id,
./kipcm.c:                       entry->ports,
./kipcm.c:                       entry->ports_size)) {
./kipcm.c:                        return -1;
./kipcm.c:                return -1;
./kipcm.c:        int                    result = -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        ipc_id      = msg->header.dst_ipc_id;
./kipcm.c:        ipc_process = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:        if (ipc_process->ops->pft_dump(ipc_process->data,
./kipcm.c:                                            info->snd_seq,
./kipcm.c:                                            info->snd_portid);
./kipcm.c:                                retval = -1;
./kipcm.c:                        if (rnl_handler_register(kipcm->rnls,
./kipcm.c:                                for (j = i - 1; j > 0; j--) {
./kipcm.c:                                                if (rnl_handler_unregister(kipcm->rnls, j)) {
./kipcm.c:                                return -1;
./kipcm.c:        tmp->factories = ipcpf_init(parent);
./kipcm.c:        if (!tmp->factories) {
./kipcm.c:        tmp->instances = ipcp_imap_create();
./kipcm.c:        if (!tmp->instances) {
./kipcm.c:                if (ipcpf_fini(tmp->factories)) {
./kipcm.c:        tmp->messages = rkzalloc(sizeof(struct flow_messages), GFP_KERNEL);
./kipcm.c:        if (!tmp->messages) {
./kipcm.c:                if (ipcpf_fini(tmp->factories)) {
./kipcm.c:                if (ipcp_imap_destroy(tmp->instances)) {
./kipcm.c:        tmp->messages->ingress = kipcm_pmap_create();
./kipcm.c:        tmp->messages->egress  = kipcm_smap_create();
./kipcm.c:        if (!tmp->messages->ingress || !tmp->messages->egress) {
./kipcm.c:                if (tmp->messages->ingress)
./kipcm.c:                        if (kipcm_pmap_destroy(tmp->messages->ingress)) {
./kipcm.c:                if (tmp->messages->egress)
./kipcm.c:                        if (kipcm_smap_destroy(tmp->messages->egress)) {
./kipcm.c:        tmp->kfa = kfa_create();
./kipcm.c:        if (!tmp->kfa) {
./kipcm.c:                if (kipcm_pmap_destroy(tmp->messages->ingress)) {
./kipcm.c:                if (kipcm_smap_destroy(tmp->messages->egress)) {
./kipcm.c:                if (ipcp_imap_destroy(tmp->instances)) {
./kipcm.c:                if (ipcpf_fini(tmp->factories)) {
./kipcm.c:                if (kipcm_pmap_destroy(tmp->messages->ingress)) {
./kipcm.c:                if (kipcm_smap_destroy(tmp->messages->egress)) {
./kipcm.c:                if (kfa_destroy(tmp->kfa)) {
./kipcm.c:                if (ipcp_imap_destroy(tmp->instances)) {
./kipcm.c:                if (ipcpf_fini(tmp->factories)) {
./kipcm.c:        tmp->rnls = rnls;
./kipcm.c:                if (kipcm_pmap_destroy(tmp->messages->ingress)) {
./kipcm.c:                if (kipcm_smap_destroy(tmp->messages->egress)) {
./kipcm.c:                if (ipcp_imap_destroy(tmp->instances)) {
./kipcm.c:                if (kfa_destroy(tmp->kfa)) {
./kipcm.c:                if (ipcpf_fini(tmp->factories)) {
./kipcm.c:                return -1;
./kipcm.c:        if (kfa_destroy(kipcm->kfa)) {
./kipcm.c:        ASSERT(ipcp_imap_empty(kipcm->instances));
./kipcm.c:        if (ipcp_imap_destroy(kipcm->instances)) {
./kipcm.c:        if (ipcpf_fini(kipcm->factories)) {
./kipcm.c:        ASSERT(kipcm_pmap_empty(kipcm->messages->ingress));
./kipcm.c:        kipcm_pmap_destroy(kipcm->messages->ingress);
./kipcm.c:        ASSERT(kipcm_smap_empty(kipcm->messages->egress));
./kipcm.c:        kipcm_smap_destroy(kipcm->messages->egress);
./kipcm.c:        if (netlink_handlers_unregister(kipcm->rnls)) {
./kipcm.c:        if (rnl_set_unregister(kipcm->rnls)) {
./kipcm.c:        retval = ipcpf_register(kipcm->factories, name, data, ops);
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        id = ipcp_imap_find_factory(kipcm->instances, factory);
./kipcm.c:                instance = ipcp_imap_find(kipcm->instances, id);
./kipcm.c:                        return -1;
./kipcm.c:                if (kfa_remove_all_for_id(kipcm->kfa, id)) {
./kipcm.c:                        return -1;
./kipcm.c:                if (factory->ops->destroy(factory->data, instance)) {
./kipcm.c:                        return -1;
./kipcm.c:                if (ipcp_imap_remove(kipcm->instances, id)) {
./kipcm.c:                        return -1;
./kipcm.c:                id = ipcp_imap_find_factory(kipcm->instances, factory);
./kipcm.c:        retval = ipcpf_unregister(kipcm->factories, factory);
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        if (ipcp_imap_find(kipcm->instances, id)) {
./kipcm.c:                return -1;
./kipcm.c:        factory = ipcpf_find(kipcm->factories, factory_name);
./kipcm.c:                return -1;
./kipcm.c:        instance = factory->ops->create(factory->data, ipcp_name, id);
./kipcm.c:                return -1;
./kipcm.c:        instance->factory = factory;
./kipcm.c:        if (ipcp_imap_add(kipcm->instances, id, instance)) {
./kipcm.c:                factory->ops->destroy(factory->data, instance);
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        instance = ipcp_imap_find(kipcm->instances, id);
./kipcm.c:                return -1;
./kipcm.c:        factory = instance->factory;
./kipcm.c:        if (kfa_remove_all_for_id(kipcm->kfa, id)) {
./kipcm.c:                return -1;
./kipcm.c:        if (factory->ops->destroy(factory->data, instance)) {
./kipcm.c:                return -1;
./kipcm.c:        if (ipcp_imap_remove(kipcm->instances, id)) {
./kipcm.c:                return -1;
./kipcm.c:        ipc_process  = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:                return -1;
./kipcm.c:        if (kfa_flow_ipcp_bind(kipcm->kfa, port_id, ipc_process)) {
./kipcm.c:                return -1;
./kipcm.c:        seq_num = rnl_get_next_seqn(kipcm->rnls);
./kipcm.c:        if (kipcm_smap_add_ni(kipcm->messages->egress, seq_num, port_id)) {
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        ipc_process = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:                return -1;
./kipcm.c:        if (kfa_flow_bind(kipcm->kfa,
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        if (kfa_flow_sdu_write(kipcm->kfa, port_id, sdu))
./kipcm.c:                return -1;
./kipcm.c:        if (kfa_flow_sdu_read(kipcm->kfa, port_id, sdu)) {
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                LOG_ERR("Bogus SDU with port-id received, bailing out");
./kipcm.c:                return -1;
./kipcm.c:        ipcp = ipcp_imap_find(kipcm->instances, id);
./kipcm.c:                return -1;
./kipcm.c:        if (!ipcp->ops) {
./kipcm.c:                return -1;
./kipcm.c:        if (!ipcp->ops->mgmt_sdu_write) {
./kipcm.c:                return -1;
./kipcm.c:        if (ipcp->ops->mgmt_sdu_write(ipcp->data,
./kipcm.c:                                      sdu_wpi->dst_addr,
./kipcm.c:                                      sdu_wpi->port_id,
./kipcm.c:                                      sdu_wpi->sdu)) {
./kipcm.c:                sdu_buffer_disown(sdu_wpi->sdu);
./kipcm.c:                return -1;
./kipcm.c:        sdu_buffer_disown(sdu_wpi->sdu);
./kipcm.c:                return -1;
./kipcm.c:        ipcp = ipcp_imap_find(kipcm->instances, id);
./kipcm.c:                return -1;
./kipcm.c:        if (!ipcp->ops) {
./kipcm.c:                return -1;
./kipcm.c:        if (!ipcp->ops->mgmt_sdu_read) {
./kipcm.c:                return -1;
./kipcm.c:        return ipcp->ops->mgmt_sdu_read(ipcp->data, sdu_wpi);
./kipcm.c:        ipc_process = ipcp_imap_find(kipcm->instances, ipc_id);
./kipcm.c:        user_ipc_process = ipcp_imap_find_by_name(kipcm->instances,
./kipcm.c:                 *        application in user-space or an ipc process in the
./kipcm.c:        pid =  kfa_port_id_reserve(kipcm->kfa, ipc_id);
./kipcm.c:        if (kfa_flow_create(kipcm->kfa, ipc_id, pid)) {
./kipcm.c:                kfa_port_id_release(kipcm->kfa, pid);
./kipcm.c:        if (kfa_flow_ipcp_bind(kipcm->kfa, pid, ipc_process)) {
./kipcm.c:                kfa_port_id_release(kipcm->kfa, pid);
./kipcm.c:                return -1;
./kipcm.c:        seq_num = kipcm_pmap_find(kipcm->messages->ingress, pid);
./kipcm.c:                return -1;
./kipcm.c:        if (kipcm_pmap_remove(kipcm->messages->ingress, pid)) {
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:                return -1;
./kipcm.c:        return kipcm->kfa;
./policies.c:        INIT_LIST_HEAD(&tmp->params);
./policies.c:        INIT_LIST_HEAD(&tmp->next);
./policies.c:                return -1;
./policies.c:        if (param->name)  rkfree(param->name);
./policies.c:        if (param->value) rkfree(param->value);
./policies.c:                return -1;
./policies.c:        if (p->name) rkfree(p->name);
./policies.c:        if (p->version) rkfree(p->version);
./policies.c:        list_for_each_entry_safe(pos, nxt, &p->params, next) {
./policies.c:                list_del(&pos->next);
./policies.c:                        return -1;
./policies.c:        list_for_each_entry(pos, &policy->params, next) {
./policies.c:                if (!strcmp(pos->name, name))
./policies.c:                return -1;
./policies.c:        list_add_tail(&param->next, &policy->params);
./policies.c:                return -1;
./policies.c:        if (param->name)
./policies.c:                return -1;
./policies.c:        if (!policy_param_find(policy, param->name))
./policies.c:                return -1;
./policies.c:        list_del(&param->next);
./policies.c:        return param->name;
./policies.c:        return param->value;
./policies.c:        return policy->name;
./policies.c:        return policy->version;
./policies.c:                return -1;
./policies.c:        param->name = name;
./policies.c:                return -1;
./policies.c:        param->value = value;
./policies.c:                return -1;
./policies.c:        policy->name = name;
./policies.c:                return -1;
./policies.c:        policy->version = version;
./.kipcm-utils.o.cmd:cmd_net/rina/kipcm-utils.o := gcc -Wp,-MD,net/rina/.kipcm-utils.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(kipcm_utils)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_kipcm-utils.o net/rina/kipcm-utils.c
./.kipcm-utils.o.cmd:source_net/rina/kipcm-utils.o := net/rina/kipcm-utils.c
./.kipcm-utils.o.cmd:deps_net/rina/kipcm-utils.o := \
./.kipcm-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.kipcm-utils.o.cmd:  include/asm-generic/int-ll64.h \
./.kipcm-utils.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.kipcm-utils.o.cmd:  include/asm-generic/bitsperlong.h \
./.kipcm-utils.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.kipcm-utils.o.cmd:  include/linux/compiler-gcc.h \
./.kipcm-utils.o.cmd:  include/linux/compiler-gcc4.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.kipcm-utils.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.kipcm-utils.o.cmd:  include/asm-generic/ptrace.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.kipcm-utils.o.cmd:  include/asm-generic/bitops/fls64.h \
./.kipcm-utils.o.cmd:  include/asm-generic/bitops/find.h \
./.kipcm-utils.o.cmd:  include/asm-generic/bitops/sched.h \
./.kipcm-utils.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.kipcm-utils.o.cmd:  include/asm-generic/bitops/le.h \
./.kipcm-utils.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.kipcm-utils.o.cmd:  include/asm-generic/percpu.h \
./.kipcm-utils.o.cmd:  include/linux/percpu-defs.h \
./.kipcm-utils.o.cmd:  include/asm-generic/bug.h \
./.kipcm-utils.o.cmd:  include/asm-generic/memory_model.h \
./.kipcm-utils.o.cmd:  include/asm-generic/getorder.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.kipcm-utils.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.kipcm-utils.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.kipcm-utils.o.cmd:  include/asm-generic/ioctl.h \
./.kipcm-utils.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.kipcm-utils.o.cmd:  include/asm-generic/atomic-long.h \
./.kipcm-utils.o.cmd:  include/asm-generic/param.h \
./.kipcm-utils.o.cmd:  include/uapi/asm-generic/param.h \
./.kipcm-utils.o.cmd:  include/asm-generic/topology.h \
./.kipcm-utils.o.cmd:  include/asm-generic/early_ioremap.h \
./.kipcm-utils.o.cmd:  include/asm-generic/iomap.h \
./.kipcm-utils.o.cmd:  include/asm-generic/pci_iomap.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.kipcm-utils.o.cmd:  include/asm-generic/kmap_types.h \
./.kipcm-utils.o.cmd:  include/asm-generic/fixmap.h \
./.kipcm-utils.o.cmd:  include/linux/pageblock-flags.h \
./.kipcm-utils.o.cmd:  include/linux/page-flags-layout.h \
./.kipcm-utils.o.cmd:  include/asm-generic/sections.h \
./.kipcm-utils.o.cmd:  net/rina/kipcm-utils.h \
./.kipcm-utils.o.cmd:  net/rina/ipcp-instances.h \
./.kipcm-utils.o.cmd:  net/rina/ipcp-factories.h \
./.kipcm-utils.o.cmd:  include/linux/page-debug-flags.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/fcntl.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/socket.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/sockios.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/include/uapi/linux/libc-compat.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level.h \
./.kipcm-utils.o.cmd:  include/asm-generic/pgtable.h \
./.kipcm-utils.o.cmd:  include/linux/page-flags.h \
./.kipcm-utils.o.cmd:  include/asm-generic/scatterlist.h \
./.kipcm-utils.o.cmd:  include/linux/dma-mapping.h \
./.kipcm-utils.o.cmd:  include/linux/dma-attrs.h \
./.kipcm-utils.o.cmd:  include/linux/dma-direction.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/dma-mapping.h \
./.kipcm-utils.o.cmd:  include/linux/dma-debug.h \
./.kipcm-utils.o.cmd:  include/asm-generic/dma-coherent.h \
./.kipcm-utils.o.cmd:  include/linux/dma-contiguous.h \
./.kipcm-utils.o.cmd:  include/asm-generic/dma-mapping-common.h \
./.kipcm-utils.o.cmd:  include/asm-generic/cputime.h \
./.kipcm-utils.o.cmd:  include/asm-generic/cputime_jiffies.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/ipcbuf.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/signal-defs.h \
./.kipcm-utils.o.cmd:  include/asm-generic/siginfo.h \
./.kipcm-utils.o.cmd:  include/uapi/asm-generic/siginfo.h \
./.kipcm-utils.o.cmd:  include/asm-generic/resource.h \
./.kipcm-utils.o.cmd:  include/uapi/asm-generic/resource.h \
./.kipcm-utils.o.cmd:  include/linux/radix-tree.h \
./.kipcm-utils.o.cmd:  include/linux/percpu-rwsem.h \
./.kipcm-utils.o.cmd:  include/asm-generic/delay.h \
./.kipcm-utils.o.cmd:  include/linux/percpu-refcount.h \
./.kipcm-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/poll.h \
./.kipcm-utils.o.cmd:  net/rina/rnl-utils.h \
./.kipcm-utils.o.cmd:  net/rina/ipcp-utils.h \
./.kipcm-utils.o.cmd:net/rina/kipcm-utils.o: $(deps_net/rina/kipcm-utils.o)
./.kipcm-utils.o.cmd:$(deps_net/rina/kipcm-utils.o):
./pim.c: * Port-2-IPCP instance mapping
./pim.c:        hash_init(tmp->table);
./pim.c:        hash_for_each_safe(map->table, bucket, tmp, entry, hlist) {
./pim.c:                hash_del(&entry->hlist);
./pim.c:        return hash_empty(map->table);
./pim.c:        head = &map->table[pmap_hash(map->table, key)];
./pim.c:                if (entry->key == key)
./pim.c:        return entry->value;
./pim.c:                return -1;
./pim.c:        cur->value = value;
./pim.c:                return -1;
./pim.c:        tmp->key   = key;
./pim.c:        tmp->value = value;
./pim.c:        INIT_HLIST_NODE(&tmp->hlist);
./pim.c:        hash_add(map->table, &tmp->hlist, key);
./pim.c:                return -1;
./pim.c:        hash_del(&cur->hlist);
./pim.c:        tmp->map = pmap_create();
./pim.c:        if (!tmp->map) {
./pim.c:                return -1;
./pim.c:        ASSERT(pim->map);
./pim.c:        pmap_destroy(pim->map);
./pim.c:        return pmap_find(pim->map, id);
./pim.c:                return -1;
./pim.c:                return -1;
./pim.c:        tmp = pmap_find(pim->map, id);
./pim.c:                return pmap_update(pim->map, id, ipcp);
./pim.c:        return pmap_add_gfp(GFP_KERNEL, pim->map, id, ipcp);
Binary file ./dtcp-utils.o matches
Binary file ./pim.o matches
Binary file ./connection.o matches
Binary file ./core.o matches
./.rina_personality_default.o.cmd:cmd_net/rina/rina_personality_default.o := ld -m elf_i386   -r -o net/rina/rina_personality_default.o net/rina/ipcp-factories.o net/rina/ipcp-instances.o net/rina/cidm.o net/rina/dt.o net/rina/dt-utils.o net/rina/dtcp.o net/rina/dtp.o net/rina/efcp-utils.o net/rina/efcp.o net/rina/pft.o net/rina/rmt.o net/rina/pim.o net/rina/pidm.o net/rina/kfa-utils.o net/rina/kfa.o net/rina/kipcm-utils.o net/rina/kipcm.o net/rina/default.o net/rina/utils-workarounds.o 
./efcp.c:#include "efcp-utils.h"
./efcp.c:#include "ipcp-utils.h"
./efcp.c:#include "dtcp-utils.h"
./efcp.c:#include "dt-utils.h"
./efcp.c:                return -1;
./efcp.c:        if (instance->dt) {
./efcp.c:                struct dtp *  dtp  = dt_dtp_unbind(instance->dt);
./efcp.c:                struct dtcp * dtcp = dt_dtcp_unbind(instance->dt);
./efcp.c:                struct cwq *  cwq  = dt_cwq_unbind(instance->dt);
./efcp.c:                struct rtxq * rtxq = dt_rtxq_unbind(instance->dt);
./efcp.c:                dt_destroy(instance->dt);
./efcp.c:        if (instance->connection) {
./efcp.c:                if (is_cep_id_ok(instance->connection->source_cep_id)) {
./efcp.c:                        ASSERT(instance->container);
./efcp.c:                        ASSERT(instance->container->cidm);
./efcp.c:                        cidm_release(instance->container->cidm,
./efcp.c:                                     instance->connection->source_cep_id);
./efcp.c:                connection_destroy(instance->connection);
./efcp.c:        container->instances   = efcp_imap_create();
./efcp.c:        container->cidm        = cidm_create();
./efcp.c:        if (!container->instances ||
./efcp.c:            !container->cidm) {
./efcp.c:        container->kfa = kfa;
./efcp.c:                return -1;
./efcp.c:        if (container->instances)  efcp_imap_destroy(container->instances,
./efcp.c:        if (container->cidm)       cidm_destroy(container->cidm);
./efcp.c:        if (container->config)     efcp_config_destroy(container->config);
./efcp.c:                LOG_ERR("Bad cep-id, cannot find instance");
./efcp.c:        return efcp_imap_find(container->instances, id);
./efcp.c:                return -1;
./efcp.c:        container->config = efcp_config;
./efcp.c:                return -1;
./efcp.c:                return -1;
./efcp.c:        ASSERT(efcp->dt);
./efcp.c:        dtp = dt_dtp(efcp->dt);
./efcp.c:                return -1;
./efcp.c:                return -1;
./efcp.c:                return -1;
./efcp.c:                LOG_ERR("Bad cep-id, cannot write into container");
./efcp.c:                return -1;
./efcp.c:        tmp = efcp_imap_find(container->instances, cep_id);
./efcp.c:                LOG_ERR("There is no EFCP bound to this cep-id %d", cep_id);
./efcp.c:                return -1;
./efcp.c:                return -1;
./efcp.c:{ return dtp_mgmt_write(container->rmt, src_address, port_id, sdu); }
./efcp.c:                return -1;
./efcp.c:                return -1;
./efcp.c:        ASSERT(efcp->dt);
./efcp.c:                dtcp = dt_dtcp(efcp->dt);
./efcp.c:                        return -1;
./efcp.c:                        return -1;
./efcp.c:        dtp = dt_dtp(efcp->dt);
./efcp.c:                return -1;
./efcp.c:                return -1;
./efcp.c:                return -1;
./efcp.c:                LOG_ERR("Bad cep-id, cannot write into container");
./efcp.c:                return -1;
./efcp.c:        tmp = efcp_imap_find(container->instances, cep_id);
./efcp.c:                LOG_ERR("Cannot find the requested instance cep-id: %d", cep_id);
./efcp.c:                return -1;
./efcp.c:                return -1;
./efcp.c:            !is_cep_id_ok(connection->source_cep_id)      ||
./efcp.c:            !is_cep_id_ok(connection->destination_cep_id) ||
./efcp.c:            !is_port_id_ok(connection->port_id))
./efcp.c:        tmp->dt = dt_create();
./efcp.c:        if (!tmp->dt) {
./efcp.c:        ASSERT(tmp->dt);
./efcp.c:        cep_id                    = cidm_allocate(container->cidm);
./efcp.c:        tmp->container            = container;
./efcp.c:        connection->source_cep_id = cep_id_bad();
./efcp.c:        /* FIXME: We change the connection cep-id and we return cep-id ... */
./efcp.c:        connection->source_cep_id = cep_id;
./efcp.c:        tmp->connection           = connection;
./efcp.c:        connection->policies_params->dtcp_present = true;
./efcp.c:        if (!connection->policies_params->dtcp_cfg) {
./efcp.c:        dtcp_max_closed_winq_length_set(connection->policies_params->dtcp_cfg,
./efcp.c:        dtcp_flow_ctrl_set(connection->policies_params->dtcp_cfg, true);
./efcp.c:        dtcp_rtx_ctrl_set(connection->policies_params->dtcp_cfg, false);
./efcp.c:        dtcp_window_based_fctrl_set(connection->policies_params->dtcp_cfg,
./efcp.c:        dtcp_rate_based_fctrl_set(connection->policies_params->dtcp_cfg,
./efcp.c:        dtp = dtp_create(tmp->dt,
./efcp.c:                         container->rmt,
./efcp.c:                         container->kfa,
./efcp.c:        if (dt_dtp_bind(tmp->dt, dtp)) {
./efcp.c:        if (connection->policies_params->dtcp_present) {
./efcp.c:                dtcp = dtcp_create(tmp->dt, connection, container->rmt);
./efcp.c:                if (dt_dtcp_bind(tmp->dt, dtcp)) {
./efcp.c:        if (dtcp_window_based_fctrl(connection->policies_params->dtcp_cfg)) {
./efcp.c:                if (dt_cwq_bind(tmp->dt, cwq)) {
./efcp.c:        if (dtcp_rtx_ctrl(connection->policies_params->dtcp_cfg)) {
./efcp.c:                rtxq = rtxq_create(tmp->dt, container->rmt);
./efcp.c:                if (dt_rtxq_bind(tmp->dt, rtxq)) {
./efcp.c:        mfps = container->config->dt_cons->max_pdu_size;
./efcp.c:        mfss = container->config->dt_cons->max_pdu_size;
./efcp.c:        mpl  = container->config->dt_cons->max_pdu_life; 
./efcp.c:        a    = connection->policies_params->initial_a_timer;
./efcp.c:        if (dtcp && dtcp_rtx_ctrl(connection->policies_params->dtcp_cfg)) {
./efcp.c:                tr = dtcp_initial_tr(connection->policies_params->dtcp_cfg);
./efcp.c:                r  = dtcp_data_retransmit_max(connection->policies_params->dtcp_cfg)*tr;
./efcp.c:        if (dt_sv_init(tmp->dt, mfps, mfss, mpl, r, a, tr)) {
./efcp.c:                        dtcp_rtx_ctrl(connection->policies_params->dtcp_cfg),
./efcp.c:                        dtcp_window_based_fctrl(connection->policies_params
./efcp.c:                                                ->dtcp_cfg),
./efcp.c:                        dtcp_rate_based_fctrl(connection->policies_params
./efcp.c:                                              ->dtcp_cfg),
./efcp.c:        if (efcp_imap_add(container->instances,
./efcp.c:                          connection->source_cep_id,
./efcp.c:                "Destination cep-id %d, "
./efcp.c:                "Source cep-id %d)",
./efcp.c:                connection->source_address,
./efcp.c:                connection->destination_address,
./efcp.c:                connection->destination_cep_id,
./efcp.c:                connection->source_cep_id);
./efcp.c:                return -1;
./efcp.c:                LOG_ERR("Bad cep-id, cannot destroy connection");
./efcp.c:                return -1;
./efcp.c:        tmp = efcp_imap_find(container->instances, id);
./efcp.c:                return -1;
./efcp.c:        if (efcp_imap_remove(container->instances, id)) {
./efcp.c:                return -1;
./efcp.c:                return -1;
./efcp.c:                return -1;
./efcp.c:                LOG_ERR("Bad from cep-id, cannot update connection");
./efcp.c:                return -1;
./efcp.c:                LOG_ERR("Bad to cep-id, cannot update connection");
./efcp.c:                return -1;
./efcp.c:        tmp = efcp_imap_find(container->instances, from);
./efcp.c:                return -1;
./efcp.c:        tmp->connection->destination_cep_id = to;
./efcp.c:                tmp->connection->source_address);
./efcp.c:                tmp->connection->destination_address);
./efcp.c:                tmp->connection->destination_cep_id);
./efcp.c:                tmp->connection->source_cep_id);
./efcp.c:                return -1;
./efcp.c:                return -1;
./efcp.c:        container->rmt = rmt;
./efcp.c:                return -1;
./efcp.c:        container->rmt = NULL;
./common.h:         * A value of -1 indicates 'Any'
./buffer.c:{ return (b && b->data && b->size) ? true : false; }
./buffer.c:        if (b->data) rkfree(b->data);
./buffer.c:                return -1;
./buffer.c:        tmp->data = data;
./buffer.c:        tmp->size = size;
./buffer.c:        tmp->data = rkmalloc(size, flags);
./buffer.c:        if (!tmp->data) {
./buffer.c:        if (!memcpy(tmp->data, data, size)) {
./buffer.c:        tmp->size = size;
./buffer.c:        tmp->data = rkmalloc(size, flags);
./buffer.c:        if (!tmp->data) {
./buffer.c:        tmp->size = size;
./buffer.c:        m = rkmalloc(b->size, flags);
./buffer.c:        if (!memcpy(m, b->data, b->size)) {
./buffer.c:        tmp = buffer_create_with_gfp(flags, m, b->size);
./buffer.c:                return -1;
./buffer.c:        return b->size;
./buffer.c:        return b->data;
./buffer.c:        return b->data;
./.kfa-utils.o.cmd:cmd_net/rina/kfa-utils.o := gcc -Wp,-MD,net/rina/.kfa-utils.o.d  -nostdinc -isystem /usr/lib/gcc/i486-linux-gnu/4.7/include -I/home/irati/linux/arch/x86/include -Iarch/x86/include/generated  -Iinclude -I/home/irati/linux/arch/x86/include/uapi -Iarch/x86/include/generated/uapi -I/home/irati/linux/include/uapi -Iinclude/generated/uapi -include /home/irati/linux/include/linux/kconfig.h -D__KERNEL__ -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing -fno-common -Werror-implicit-function-declaration -Wno-format-security -fno-delete-null-pointer-checks -O2 -m32 -msoft-float -mregparm=3 -freg-struct-return -mno-mmx -mno-sse -fno-pic -mpreferred-stack-boundary=2 -march=i686 -maccumulate-outgoing-args -Wa,-mtune=generic32 -ffreestanding -DCONFIG_AS_CFI=1 -DCONFIG_AS_CFI_SIGNAL_FRAME=1 -DCONFIG_AS_CFI_SECTIONS=1 -DCONFIG_AS_CRC32=1 -DCONFIG_AS_AVX=1 -DCONFIG_AS_AVX2=1 -pipe -Wno-sign-compare -fno-asynchronous-unwind-tables -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -Wframe-larger-than=1024 -fno-stack-protector -Wno-unused-but-set-variable -fno-omit-frame-pointer -fno-optimize-sibling-calls -g -pg -Wdeclaration-after-statement -Wno-pointer-sign -fno-strict-overflow -fconserve-stack -Werror=implicit-int -Werror=strict-prototypes -DCC_HAVE_ASM_GOTO -Wtype-limits  -DMODULE  -D"KBUILD_STR(s)=\#s" -D"KBUILD_BASENAME=KBUILD_STR(kfa_utils)"  -D"KBUILD_MODNAME=KBUILD_STR(rina_personality_default)" -c -o net/rina/.tmp_kfa-utils.o net/rina/kfa-utils.c
./.kfa-utils.o.cmd:source_net/rina/kfa-utils.o := net/rina/kfa-utils.c
./.kfa-utils.o.cmd:deps_net/rina/kfa-utils.o := \
./.kfa-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/types.h \
./.kfa-utils.o.cmd:  include/asm-generic/int-ll64.h \
./.kfa-utils.o.cmd:  include/uapi/asm-generic/int-ll64.h \
./.kfa-utils.o.cmd:  include/asm-generic/bitsperlong.h \
./.kfa-utils.o.cmd:  include/uapi/asm-generic/bitsperlong.h \
./.kfa-utils.o.cmd:  include/linux/compiler-gcc.h \
./.kfa-utils.o.cmd:  include/linux/compiler-gcc4.h \
./.kfa-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/posix_types.h \
./.kfa-utils.o.cmd:  /usr/lib/gcc/i486-linux-gnu/4.7/include/stdarg.h \
./.kfa-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/ptrace-abi.h \
./.kfa-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/processor-flags.h \
./.kfa-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/processor-flags.h \
./.kfa-utils.o.cmd:  include/asm-generic/ptrace.h \
./.kfa-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/required-features.h \
./.kfa-utils.o.cmd:  include/asm-generic/bitops/fls64.h \
./.kfa-utils.o.cmd:  include/asm-generic/bitops/find.h \
./.kfa-utils.o.cmd:  include/asm-generic/bitops/sched.h \
./.kfa-utils.o.cmd:  include/asm-generic/bitops/const_hweight.h \
./.kfa-utils.o.cmd:  include/asm-generic/bitops/le.h \
./.kfa-utils.o.cmd:  include/asm-generic/bitops/ext2-atomic-setbit.h \
./.kfa-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno.h \
./.kfa-utils.o.cmd:  /home/irati/linux/include/uapi/asm-generic/errno-base.h \
./.kfa-utils.o.cmd:  include/asm-generic/percpu.h \
./.kfa-utils.o.cmd:  include/linux/percpu-defs.h \
./.kfa-utils.o.cmd:  include/asm-generic/bug.h \
./.kfa-utils.o.cmd:  include/asm-generic/memory_model.h \
./.kfa-utils.o.cmd:  include/asm-generic/getorder.h \
./.kfa-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pgtable-2level_types.h \
./.kfa-utils.o.cmd:  include/asm-generic/pgtable-nopud.h \
./.kfa-utils.o.cmd:  include/asm-generic/pgtable-nopmd.h \
./.kfa-utils.o.cmd:  /home/irati/linux/arch/x86/include/uapi/asm/msr-index.h \
./.kfa-utils.o.cmd:  include/asm-generic/ioctl.h \
./.kfa-utils.o.cmd:  include/uapi/asm-generic/ioctl.h \
./.kfa-utils.o.cmd:  include/asm-generic/atomic-long.h \
./.kfa-utils.o.cmd:  include/asm-generic/param.h \
./.kfa-utils.o.cmd:  include/uapi/asm-generic/param.h \
./.kfa-utils.o.cmd:  include/asm-generic/topology.h \
./.kfa-utils.o.cmd:  include/asm-generic/early_ioremap.h \
./.kfa-utils.o.cmd:  include/asm-generic/iomap.h \
./.kfa-utils.o.cmd:  include/asm-generic/pci_iomap.h \
./.kfa-utils.o.cmd:  /home/irati/linux/arch/x86/include/asm/pvclock-abi.h \
./.kfa-utils.o.cmd:  include/asm-generic/kmap_types.h \
./.kfa-utils.o.cmd:  include/asm-generic/fixmap.h \
./.kfa-utils.o.cmd:  include/linux/pageblock-flags.h \
./.kfa-utils.o.cmd:  include/linux/page-flags-layout.h \
./.kfa-utils.o.cmd:  include/asm-generic/sections.h \
./.kfa-utils.o.cmd:  net/rina/kfa-utils.h \
./.kfa-utils.o.cmd:  net/rina/ipcp-factories.h \
./.kfa-utils.o.cmd:  net/rina/ipcp-instances.h \
./.kfa-utils.o.cmd:net/rina/kfa-utils.o: $(deps_net/rina/kfa-utils.o)
./.kfa-utils.o.cmd:$(deps_net/rina/kfa-utils.o):
./pci.c:         * FIXME: Group ceps and qos_id together in connection-id struct ?
./pci.c:{ return pci && pdu_type_is_ok(pci->type) ? true : false; }
./pci.c:{ return pci ? sizeof(*pci) : -1; }
./pci.c:                return -1;
./pci.c:                return -1;
./pci.c:        pci->ceps.destination = src_cep_id;
./pci.c:                return -1;
./pci.c:                return -1;
./pci.c:        pci->ceps.source = dst_cep_id;
./pci.c:                return -1;
./pci.c:        pci->destination = dst_address;
./pci.c:                return -1;
./pci.c:        pci->source = src_address;
./pci.c:                return -1;
./pci.c:        pci->sequence_number = sequence_number;
./pci.c:                return -1;
./pci.c:        return pci->sequence_number;
./pci.c:                return -1;
./pci.c:        pci->qos_id = qos_id;
./pci.c:                return -1;
./pci.c:        pci->type = type;
./pci.c:                return -1;
./pci.c:                return -1;
./pci.c:        return pci->type;
./pci.c:        return pci->source;
./pci.c:        return pci->destination;
./pci.c:        return pci->ceps.destination;
./pci.c:        return pci->ceps.source;
./pci.c:{ return pci ? pci->qos_id : qos_id_bad();  }
./pci.c:        return pci->flags;
./pci.c:                return -1;
./pci.c:        if (!pdu_type_is_control(pci->type))
./pci.c:                return -1;
./pci.c:        pci->control.ack_nack_seq_num = seq;
./pci.c:                return -1;
./pci.c:        if (!pdu_type_is_control(pci->type))
./pci.c:                return -1;
./pci.c:        pci->control.snd_rt_wind_edge = seq;
./pci.c:                return -1;
./pci.c:        if (!pdu_type_is_control(pci->type))
./pci.c:                return -1;
./pci.c:        pci->control.snd_lf_wind_edge = seq;
./pci.c:                return -1;
./pci.c:        if (!pdu_type_is_control(pci->type))
./pci.c:                return -1;
./pci.c:        pci->control.rcv_rt_wind_edge = seq;
./pci.c:                return -1;
./pci.c:        if (!pdu_type_is_control(pci->type))
./pci.c:                return -1;
./pci.c:        pci->control.rcv_lf_wind_edge = seq;
./pci.c:                return -1;
./pci.c:        if (!pdu_type_is_control(pci->type))
./pci.c:                return -1;
./pci.c:        pci->control.last_ctrl_seq_num_rcvd = seq;
./pci.c:{ return pci ? pci->control.ack_nack_seq_num : 0; }
./pci.c:{ return pci ? pci->control.snd_rt_wind_edge : 0; }
./pci.c:{ return pci ? pci->control.snd_lf_wind_edge : 0; }
./pci.c:{ return pci ? pci->control.rcv_rt_wind_edge : 0; }
./pci.c:{ return pci ? pci->control.rcv_lf_wind_edge : 0; }
./pci.c:{ return pci ? pci->control.last_ctrl_seq_num_rcvd : 0; }
Binary file ./utils-workarounds.o matches
Binary file ./dt-utils.o matches
