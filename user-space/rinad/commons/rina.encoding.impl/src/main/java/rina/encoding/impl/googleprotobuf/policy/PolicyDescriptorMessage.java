// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protofiles/PolicyDescriptorMessage.proto

package rina.encoding.impl.googleprotobuf.policy;

public final class PolicyDescriptorMessage {
  private PolicyDescriptorMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class policyDescriptor_t extends
      com.google.protobuf.GeneratedMessage {
    // Use policyDescriptor_t.newBuilder() to construct.
    private policyDescriptor_t() {
      initFields();
    }
    private policyDescriptor_t(boolean noInit) {}
    
    private static final policyDescriptor_t defaultInstance;
    public static policyDescriptor_t getDefaultInstance() {
      return defaultInstance;
    }
    
    public policyDescriptor_t getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.internal_static_rina_messages_policyDescriptor_t_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.internal_static_rina_messages_policyDescriptor_t_fieldAccessorTable;
    }
    
    // optional string policyName = 1;
    public static final int POLICYNAME_FIELD_NUMBER = 1;
    private boolean hasPolicyName;
    private java.lang.String policyName_ = "";
    public boolean hasPolicyName() { return hasPolicyName; }
    public java.lang.String getPolicyName() { return policyName_; }
    
    // optional string policyImplName = 2;
    public static final int POLICYIMPLNAME_FIELD_NUMBER = 2;
    private boolean hasPolicyImplName;
    private java.lang.String policyImplName_ = "";
    public boolean hasPolicyImplName() { return hasPolicyImplName; }
    public java.lang.String getPolicyImplName() { return policyImplName_; }
    
    // optional uint32 version = 3;
    public static final int VERSION_FIELD_NUMBER = 3;
    private boolean hasVersion;
    private int version_ = 0;
    public boolean hasVersion() { return hasVersion; }
    public int getVersion() { return version_; }
    
    // repeated .rina.messages.nameValuePair_t policyParameters = 4;
    public static final int POLICYPARAMETERS_FIELD_NUMBER = 4;
    private java.util.List<rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t> policyParameters_ =
      java.util.Collections.emptyList();
    public java.util.List<rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t> getPolicyParametersList() {
      return policyParameters_;
    }
    public int getPolicyParametersCount() { return policyParameters_.size(); }
    public rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t getPolicyParameters(int index) {
      return policyParameters_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasPolicyName()) {
        output.writeString(1, getPolicyName());
      }
      if (hasPolicyImplName()) {
        output.writeString(2, getPolicyImplName());
      }
      if (hasVersion()) {
        output.writeUInt32(3, getVersion());
      }
      for (rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t element : getPolicyParametersList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasPolicyName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPolicyName());
      }
      if (hasPolicyImplName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPolicyImplName());
      }
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, getVersion());
      }
      for (rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t element : getPolicyParametersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t result;
      
      // Construct using rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t();
        return builder;
      }
      
      protected rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t.getDescriptor();
      }
      
      public rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t getDefaultInstanceForType() {
        return rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.policyParameters_ != java.util.Collections.EMPTY_LIST) {
          result.policyParameters_ =
            java.util.Collections.unmodifiableList(result.policyParameters_);
        }
        rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t) {
          return mergeFrom((rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t other) {
        if (other == rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t.getDefaultInstance()) return this;
        if (other.hasPolicyName()) {
          setPolicyName(other.getPolicyName());
        }
        if (other.hasPolicyImplName()) {
          setPolicyImplName(other.getPolicyImplName());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (!other.policyParameters_.isEmpty()) {
          if (result.policyParameters_.isEmpty()) {
            result.policyParameters_ = new java.util.ArrayList<rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t>();
          }
          result.policyParameters_.addAll(other.policyParameters_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setPolicyName(input.readString());
              break;
            }
            case 18: {
              setPolicyImplName(input.readString());
              break;
            }
            case 24: {
              setVersion(input.readUInt32());
              break;
            }
            case 34: {
              rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t.Builder subBuilder = rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addPolicyParameters(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional string policyName = 1;
      public boolean hasPolicyName() {
        return result.hasPolicyName();
      }
      public java.lang.String getPolicyName() {
        return result.getPolicyName();
      }
      public Builder setPolicyName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPolicyName = true;
        result.policyName_ = value;
        return this;
      }
      public Builder clearPolicyName() {
        result.hasPolicyName = false;
        result.policyName_ = getDefaultInstance().getPolicyName();
        return this;
      }
      
      // optional string policyImplName = 2;
      public boolean hasPolicyImplName() {
        return result.hasPolicyImplName();
      }
      public java.lang.String getPolicyImplName() {
        return result.getPolicyImplName();
      }
      public Builder setPolicyImplName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPolicyImplName = true;
        result.policyImplName_ = value;
        return this;
      }
      public Builder clearPolicyImplName() {
        result.hasPolicyImplName = false;
        result.policyImplName_ = getDefaultInstance().getPolicyImplName();
        return this;
      }
      
      // optional uint32 version = 3;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public int getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(int value) {
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = 0;
        return this;
      }
      
      // repeated .rina.messages.nameValuePair_t policyParameters = 4;
      public java.util.List<rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t> getPolicyParametersList() {
        return java.util.Collections.unmodifiableList(result.policyParameters_);
      }
      public int getPolicyParametersCount() {
        return result.getPolicyParametersCount();
      }
      public rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t getPolicyParameters(int index) {
        return result.getPolicyParameters(index);
      }
      public Builder setPolicyParameters(int index, rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.policyParameters_.set(index, value);
        return this;
      }
      public Builder setPolicyParameters(int index, rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t.Builder builderForValue) {
        result.policyParameters_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPolicyParameters(rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.policyParameters_.isEmpty()) {
          result.policyParameters_ = new java.util.ArrayList<rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t>();
        }
        result.policyParameters_.add(value);
        return this;
      }
      public Builder addPolicyParameters(rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t.Builder builderForValue) {
        if (result.policyParameters_.isEmpty()) {
          result.policyParameters_ = new java.util.ArrayList<rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t>();
        }
        result.policyParameters_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPolicyParameters(
          java.lang.Iterable<? extends rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t> values) {
        if (result.policyParameters_.isEmpty()) {
          result.policyParameters_ = new java.util.ArrayList<rina.encoding.impl.googleprotobuf.common.CommonMessages.nameValuePair_t>();
        }
        super.addAll(values, result.policyParameters_);
        return this;
      }
      public Builder clearPolicyParameters() {
        result.policyParameters_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:rina.messages.policyDescriptor_t)
    }
    
    static {
      defaultInstance = new policyDescriptor_t(true);
      rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:rina.messages.policyDescriptor_t)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rina_messages_policyDescriptor_t_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rina_messages_policyDescriptor_t_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(protofiles/PolicyDescriptorMessage.pro" +
      "to\022\rrina.messages\032\037protofiles/CommonMess" +
      "ages.proto\"\213\001\n\022policyDescriptor_t\022\022\n\npol" +
      "icyName\030\001 \001(\t\022\026\n\016policyImplName\030\002 \001(\t\022\017\n" +
      "\007version\030\003 \001(\r\0228\n\020policyParameters\030\004 \003(\013" +
      "2\036.rina.messages.nameValuePair_tB*\n(rina" +
      ".encoding.impl.googleprotobuf.policy"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_rina_messages_policyDescriptor_t_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_rina_messages_policyDescriptor_t_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rina_messages_policyDescriptor_t_descriptor,
              new java.lang.String[] { "PolicyName", "PolicyImplName", "Version", "PolicyParameters", },
              rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t.class,
              rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          rina.encoding.impl.googleprotobuf.common.CommonMessages.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
