// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protofiles/DirectoryForwardingTableEntryMessage.proto

package rina.encoding.impl.googleprotobuf.directoryforwardingtable;

public final class DirectoryForwardingTableEntryMessage {
  private DirectoryForwardingTableEntryMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class directoryForwardingTableEntry_t extends
      com.google.protobuf.GeneratedMessage {
    // Use directoryForwardingTableEntry_t.newBuilder() to construct.
    private directoryForwardingTableEntry_t() {
      initFields();
    }
    private directoryForwardingTableEntry_t(boolean noInit) {}
    
    private static final directoryForwardingTableEntry_t defaultInstance;
    public static directoryForwardingTableEntry_t getDefaultInstance() {
      return defaultInstance;
    }
    
    public directoryForwardingTableEntry_t getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.internal_static_rina_messages_directoryForwardingTableEntry_t_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.internal_static_rina_messages_directoryForwardingTableEntry_t_fieldAccessorTable;
    }
    
    // required .rina.messages.applicationProcessNamingInfo_t applicationName = 1;
    public static final int APPLICATIONNAME_FIELD_NUMBER = 1;
    private boolean hasApplicationName;
    private rina.encoding.impl.googleprotobuf.apnaminginfo.ApplicationProcessNamingInfoMessage.applicationProcessNamingInfo_t applicationName_;
    public boolean hasApplicationName() { return hasApplicationName; }
    public rina.encoding.impl.googleprotobuf.apnaminginfo.ApplicationProcessNamingInfoMessage.applicationProcessNamingInfo_t getApplicationName() { return applicationName_; }
    
    // required uint64 ipcProcessSynonym = 2;
    public static final int IPCPROCESSSYNONYM_FIELD_NUMBER = 2;
    private boolean hasIpcProcessSynonym;
    private long ipcProcessSynonym_ = 0L;
    public boolean hasIpcProcessSynonym() { return hasIpcProcessSynonym; }
    public long getIpcProcessSynonym() { return ipcProcessSynonym_; }
    
    // optional uint64 timestamp = 3;
    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private boolean hasTimestamp;
    private long timestamp_ = 0L;
    public boolean hasTimestamp() { return hasTimestamp; }
    public long getTimestamp() { return timestamp_; }
    
    private void initFields() {
      applicationName_ = rina.encoding.impl.googleprotobuf.apnaminginfo.ApplicationProcessNamingInfoMessage.applicationProcessNamingInfo_t.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasApplicationName) return false;
      if (!hasIpcProcessSynonym) return false;
      if (!getApplicationName().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasApplicationName()) {
        output.writeMessage(1, getApplicationName());
      }
      if (hasIpcProcessSynonym()) {
        output.writeUInt64(2, getIpcProcessSynonym());
      }
      if (hasTimestamp()) {
        output.writeUInt64(3, getTimestamp());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasApplicationName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getApplicationName());
      }
      if (hasIpcProcessSynonym()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, getIpcProcessSynonym());
      }
      if (hasTimestamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, getTimestamp());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t result;
      
      // Construct using rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t();
        return builder;
      }
      
      protected rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t.getDescriptor();
      }
      
      public rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t getDefaultInstanceForType() {
        return rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t) {
          return mergeFrom((rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t other) {
        if (other == rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t.getDefaultInstance()) return this;
        if (other.hasApplicationName()) {
          mergeApplicationName(other.getApplicationName());
        }
        if (other.hasIpcProcessSynonym()) {
          setIpcProcessSynonym(other.getIpcProcessSynonym());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              rina.encoding.impl.googleprotobuf.apnaminginfo.ApplicationProcessNamingInfoMessage.applicationProcessNamingInfo_t.Builder subBuilder = rina.encoding.impl.googleprotobuf.apnaminginfo.ApplicationProcessNamingInfoMessage.applicationProcessNamingInfo_t.newBuilder();
              if (hasApplicationName()) {
                subBuilder.mergeFrom(getApplicationName());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setApplicationName(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setIpcProcessSynonym(input.readUInt64());
              break;
            }
            case 24: {
              setTimestamp(input.readUInt64());
              break;
            }
          }
        }
      }
      
      
      // required .rina.messages.applicationProcessNamingInfo_t applicationName = 1;
      public boolean hasApplicationName() {
        return result.hasApplicationName();
      }
      public rina.encoding.impl.googleprotobuf.apnaminginfo.ApplicationProcessNamingInfoMessage.applicationProcessNamingInfo_t getApplicationName() {
        return result.getApplicationName();
      }
      public Builder setApplicationName(rina.encoding.impl.googleprotobuf.apnaminginfo.ApplicationProcessNamingInfoMessage.applicationProcessNamingInfo_t value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasApplicationName = true;
        result.applicationName_ = value;
        return this;
      }
      public Builder setApplicationName(rina.encoding.impl.googleprotobuf.apnaminginfo.ApplicationProcessNamingInfoMessage.applicationProcessNamingInfo_t.Builder builderForValue) {
        result.hasApplicationName = true;
        result.applicationName_ = builderForValue.build();
        return this;
      }
      public Builder mergeApplicationName(rina.encoding.impl.googleprotobuf.apnaminginfo.ApplicationProcessNamingInfoMessage.applicationProcessNamingInfo_t value) {
        if (result.hasApplicationName() &&
            result.applicationName_ != rina.encoding.impl.googleprotobuf.apnaminginfo.ApplicationProcessNamingInfoMessage.applicationProcessNamingInfo_t.getDefaultInstance()) {
          result.applicationName_ =
            rina.encoding.impl.googleprotobuf.apnaminginfo.ApplicationProcessNamingInfoMessage.applicationProcessNamingInfo_t.newBuilder(result.applicationName_).mergeFrom(value).buildPartial();
        } else {
          result.applicationName_ = value;
        }
        result.hasApplicationName = true;
        return this;
      }
      public Builder clearApplicationName() {
        result.hasApplicationName = false;
        result.applicationName_ = rina.encoding.impl.googleprotobuf.apnaminginfo.ApplicationProcessNamingInfoMessage.applicationProcessNamingInfo_t.getDefaultInstance();
        return this;
      }
      
      // required uint64 ipcProcessSynonym = 2;
      public boolean hasIpcProcessSynonym() {
        return result.hasIpcProcessSynonym();
      }
      public long getIpcProcessSynonym() {
        return result.getIpcProcessSynonym();
      }
      public Builder setIpcProcessSynonym(long value) {
        result.hasIpcProcessSynonym = true;
        result.ipcProcessSynonym_ = value;
        return this;
      }
      public Builder clearIpcProcessSynonym() {
        result.hasIpcProcessSynonym = false;
        result.ipcProcessSynonym_ = 0L;
        return this;
      }
      
      // optional uint64 timestamp = 3;
      public boolean hasTimestamp() {
        return result.hasTimestamp();
      }
      public long getTimestamp() {
        return result.getTimestamp();
      }
      public Builder setTimestamp(long value) {
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder clearTimestamp() {
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:rina.messages.directoryForwardingTableEntry_t)
    }
    
    static {
      defaultInstance = new directoryForwardingTableEntry_t(true);
      rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:rina.messages.directoryForwardingTableEntry_t)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rina_messages_directoryForwardingTableEntry_t_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rina_messages_directoryForwardingTableEntry_t_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n5protofiles/DirectoryForwardingTableEnt" +
      "ryMessage.proto\022\rrina.messages\0324protofil" +
      "es/ApplicationProcessNamingInfoMessage.p" +
      "roto\"\227\001\n\037directoryForwardingTableEntry_t" +
      "\022F\n\017applicationName\030\001 \002(\0132-.rina.message" +
      "s.applicationProcessNamingInfo_t\022\031\n\021ipcP" +
      "rocessSynonym\030\002 \002(\004\022\021\n\ttimestamp\030\003 \001(\004B<" +
      "\n:rina.encoding.impl.googleprotobuf.dire" +
      "ctoryforwardingtable"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_rina_messages_directoryForwardingTableEntry_t_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_rina_messages_directoryForwardingTableEntry_t_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rina_messages_directoryForwardingTableEntry_t_descriptor,
              new java.lang.String[] { "ApplicationName", "IpcProcessSynonym", "Timestamp", },
              rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t.class,
              rina.encoding.impl.googleprotobuf.directoryforwardingtable.DirectoryForwardingTableEntryMessage.directoryForwardingTableEntry_t.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          rina.encoding.impl.googleprotobuf.apnaminginfo.ApplicationProcessNamingInfoMessage.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
