// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataTransferConstantsMessage.proto

#ifndef PROTOBUF_DataTransferConstantsMessage_2eproto__INCLUDED
#define PROTOBUF_DataTransferConstantsMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rina {
namespace messages {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_DataTransferConstantsMessage_2eproto();
void protobuf_AssignDesc_DataTransferConstantsMessage_2eproto();
void protobuf_ShutdownFile_DataTransferConstantsMessage_2eproto();

class dataTransferConstants_t;

// ===================================================================

class dataTransferConstants_t : public ::google::protobuf::Message {
 public:
  dataTransferConstants_t();
  virtual ~dataTransferConstants_t();

  dataTransferConstants_t(const dataTransferConstants_t& from);

  inline dataTransferConstants_t& operator=(const dataTransferConstants_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dataTransferConstants_t& default_instance();

  void Swap(dataTransferConstants_t* other);

  // implements Message ----------------------------------------------

  dataTransferConstants_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dataTransferConstants_t& from);
  void MergeFrom(const dataTransferConstants_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 maxPDUSize = 1;
  inline bool has_maxpdusize() const;
  inline void clear_maxpdusize();
  static const int kMaxPDUSizeFieldNumber = 1;
  inline ::google::protobuf::uint32 maxpdusize() const;
  inline void set_maxpdusize(::google::protobuf::uint32 value);

  // optional uint32 addressLength = 2;
  inline bool has_addresslength() const;
  inline void clear_addresslength();
  static const int kAddressLengthFieldNumber = 2;
  inline ::google::protobuf::uint32 addresslength() const;
  inline void set_addresslength(::google::protobuf::uint32 value);

  // optional uint32 portIdLength = 3;
  inline bool has_portidlength() const;
  inline void clear_portidlength();
  static const int kPortIdLengthFieldNumber = 3;
  inline ::google::protobuf::uint32 portidlength() const;
  inline void set_portidlength(::google::protobuf::uint32 value);

  // optional uint32 cepIdLength = 4;
  inline bool has_cepidlength() const;
  inline void clear_cepidlength();
  static const int kCepIdLengthFieldNumber = 4;
  inline ::google::protobuf::uint32 cepidlength() const;
  inline void set_cepidlength(::google::protobuf::uint32 value);

  // optional uint32 qosidLength = 5;
  inline bool has_qosidlength() const;
  inline void clear_qosidlength();
  static const int kQosidLengthFieldNumber = 5;
  inline ::google::protobuf::uint32 qosidlength() const;
  inline void set_qosidlength(::google::protobuf::uint32 value);

  // optional uint32 sequenceNumberLength = 6;
  inline bool has_sequencenumberlength() const;
  inline void clear_sequencenumberlength();
  static const int kSequenceNumberLengthFieldNumber = 6;
  inline ::google::protobuf::uint32 sequencenumberlength() const;
  inline void set_sequencenumberlength(::google::protobuf::uint32 value);

  // optional uint32 lengthLength = 7;
  inline bool has_lengthlength() const;
  inline void clear_lengthlength();
  static const int kLengthLengthFieldNumber = 7;
  inline ::google::protobuf::uint32 lengthlength() const;
  inline void set_lengthlength(::google::protobuf::uint32 value);

  // optional uint64 seqRolloverThreshold = 8;
  inline bool has_seqrolloverthreshold() const;
  inline void clear_seqrolloverthreshold();
  static const int kSeqRolloverThresholdFieldNumber = 8;
  inline ::google::protobuf::uint64 seqrolloverthreshold() const;
  inline void set_seqrolloverthreshold(::google::protobuf::uint64 value);

  // optional uint32 maxPDULifetime = 9;
  inline bool has_maxpdulifetime() const;
  inline void clear_maxpdulifetime();
  static const int kMaxPDULifetimeFieldNumber = 9;
  inline ::google::protobuf::uint32 maxpdulifetime() const;
  inline void set_maxpdulifetime(::google::protobuf::uint32 value);

  // optional bool DIFConcatenation = 10;
  inline bool has_difconcatenation() const;
  inline void clear_difconcatenation();
  static const int kDIFConcatenationFieldNumber = 10;
  inline bool difconcatenation() const;
  inline void set_difconcatenation(bool value);

  // optional bool DIFFragmentation = 11;
  inline bool has_diffragmentation() const;
  inline void clear_diffragmentation();
  static const int kDIFFragmentationFieldNumber = 11;
  inline bool diffragmentation() const;
  inline void set_diffragmentation(bool value);

  // optional bool DIFIntegrity = 12;
  inline bool has_difintegrity() const;
  inline void clear_difintegrity();
  static const int kDIFIntegrityFieldNumber = 12;
  inline bool difintegrity() const;
  inline void set_difintegrity(bool value);

  // optional uint32 maxTimeToKeepRetransmitting = 13;
  inline bool has_maxtimetokeepretransmitting() const;
  inline void clear_maxtimetokeepretransmitting();
  static const int kMaxTimeToKeepRetransmittingFieldNumber = 13;
  inline ::google::protobuf::uint32 maxtimetokeepretransmitting() const;
  inline void set_maxtimetokeepretransmitting(::google::protobuf::uint32 value);

  // optional uint32 maxTimeToACK = 14;
  inline bool has_maxtimetoack() const;
  inline void clear_maxtimetoack();
  static const int kMaxTimeToACKFieldNumber = 14;
  inline ::google::protobuf::uint32 maxtimetoack() const;
  inline void set_maxtimetoack(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:rina.messages.dataTransferConstants_t)
 private:
  inline void set_has_maxpdusize();
  inline void clear_has_maxpdusize();
  inline void set_has_addresslength();
  inline void clear_has_addresslength();
  inline void set_has_portidlength();
  inline void clear_has_portidlength();
  inline void set_has_cepidlength();
  inline void clear_has_cepidlength();
  inline void set_has_qosidlength();
  inline void clear_has_qosidlength();
  inline void set_has_sequencenumberlength();
  inline void clear_has_sequencenumberlength();
  inline void set_has_lengthlength();
  inline void clear_has_lengthlength();
  inline void set_has_seqrolloverthreshold();
  inline void clear_has_seqrolloverthreshold();
  inline void set_has_maxpdulifetime();
  inline void clear_has_maxpdulifetime();
  inline void set_has_difconcatenation();
  inline void clear_has_difconcatenation();
  inline void set_has_diffragmentation();
  inline void clear_has_diffragmentation();
  inline void set_has_difintegrity();
  inline void clear_has_difintegrity();
  inline void set_has_maxtimetokeepretransmitting();
  inline void clear_has_maxtimetokeepretransmitting();
  inline void set_has_maxtimetoack();
  inline void clear_has_maxtimetoack();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 maxpdusize_;
  ::google::protobuf::uint32 addresslength_;
  ::google::protobuf::uint32 portidlength_;
  ::google::protobuf::uint32 cepidlength_;
  ::google::protobuf::uint32 qosidlength_;
  ::google::protobuf::uint32 sequencenumberlength_;
  ::google::protobuf::uint64 seqrolloverthreshold_;
  ::google::protobuf::uint32 lengthlength_;
  ::google::protobuf::uint32 maxpdulifetime_;
  bool difconcatenation_;
  bool diffragmentation_;
  bool difintegrity_;
  ::google::protobuf::uint32 maxtimetokeepretransmitting_;
  ::google::protobuf::uint32 maxtimetoack_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_DataTransferConstantsMessage_2eproto();
  friend void protobuf_AssignDesc_DataTransferConstantsMessage_2eproto();
  friend void protobuf_ShutdownFile_DataTransferConstantsMessage_2eproto();

  void InitAsDefaultInstance();
  static dataTransferConstants_t* default_instance_;
};
// ===================================================================


// ===================================================================

// dataTransferConstants_t

// optional uint32 maxPDUSize = 1;
inline bool dataTransferConstants_t::has_maxpdusize() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void dataTransferConstants_t::set_has_maxpdusize() {
  _has_bits_[0] |= 0x00000001u;
}
inline void dataTransferConstants_t::clear_has_maxpdusize() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void dataTransferConstants_t::clear_maxpdusize() {
  maxpdusize_ = 0u;
  clear_has_maxpdusize();
}
inline ::google::protobuf::uint32 dataTransferConstants_t::maxpdusize() const {
  return maxpdusize_;
}
inline void dataTransferConstants_t::set_maxpdusize(::google::protobuf::uint32 value) {
  set_has_maxpdusize();
  maxpdusize_ = value;
}

// optional uint32 addressLength = 2;
inline bool dataTransferConstants_t::has_addresslength() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void dataTransferConstants_t::set_has_addresslength() {
  _has_bits_[0] |= 0x00000002u;
}
inline void dataTransferConstants_t::clear_has_addresslength() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void dataTransferConstants_t::clear_addresslength() {
  addresslength_ = 0u;
  clear_has_addresslength();
}
inline ::google::protobuf::uint32 dataTransferConstants_t::addresslength() const {
  return addresslength_;
}
inline void dataTransferConstants_t::set_addresslength(::google::protobuf::uint32 value) {
  set_has_addresslength();
  addresslength_ = value;
}

// optional uint32 portIdLength = 3;
inline bool dataTransferConstants_t::has_portidlength() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void dataTransferConstants_t::set_has_portidlength() {
  _has_bits_[0] |= 0x00000004u;
}
inline void dataTransferConstants_t::clear_has_portidlength() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void dataTransferConstants_t::clear_portidlength() {
  portidlength_ = 0u;
  clear_has_portidlength();
}
inline ::google::protobuf::uint32 dataTransferConstants_t::portidlength() const {
  return portidlength_;
}
inline void dataTransferConstants_t::set_portidlength(::google::protobuf::uint32 value) {
  set_has_portidlength();
  portidlength_ = value;
}

// optional uint32 cepIdLength = 4;
inline bool dataTransferConstants_t::has_cepidlength() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void dataTransferConstants_t::set_has_cepidlength() {
  _has_bits_[0] |= 0x00000008u;
}
inline void dataTransferConstants_t::clear_has_cepidlength() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void dataTransferConstants_t::clear_cepidlength() {
  cepidlength_ = 0u;
  clear_has_cepidlength();
}
inline ::google::protobuf::uint32 dataTransferConstants_t::cepidlength() const {
  return cepidlength_;
}
inline void dataTransferConstants_t::set_cepidlength(::google::protobuf::uint32 value) {
  set_has_cepidlength();
  cepidlength_ = value;
}

// optional uint32 qosidLength = 5;
inline bool dataTransferConstants_t::has_qosidlength() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void dataTransferConstants_t::set_has_qosidlength() {
  _has_bits_[0] |= 0x00000010u;
}
inline void dataTransferConstants_t::clear_has_qosidlength() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void dataTransferConstants_t::clear_qosidlength() {
  qosidlength_ = 0u;
  clear_has_qosidlength();
}
inline ::google::protobuf::uint32 dataTransferConstants_t::qosidlength() const {
  return qosidlength_;
}
inline void dataTransferConstants_t::set_qosidlength(::google::protobuf::uint32 value) {
  set_has_qosidlength();
  qosidlength_ = value;
}

// optional uint32 sequenceNumberLength = 6;
inline bool dataTransferConstants_t::has_sequencenumberlength() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void dataTransferConstants_t::set_has_sequencenumberlength() {
  _has_bits_[0] |= 0x00000020u;
}
inline void dataTransferConstants_t::clear_has_sequencenumberlength() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void dataTransferConstants_t::clear_sequencenumberlength() {
  sequencenumberlength_ = 0u;
  clear_has_sequencenumberlength();
}
inline ::google::protobuf::uint32 dataTransferConstants_t::sequencenumberlength() const {
  return sequencenumberlength_;
}
inline void dataTransferConstants_t::set_sequencenumberlength(::google::protobuf::uint32 value) {
  set_has_sequencenumberlength();
  sequencenumberlength_ = value;
}

// optional uint32 lengthLength = 7;
inline bool dataTransferConstants_t::has_lengthlength() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void dataTransferConstants_t::set_has_lengthlength() {
  _has_bits_[0] |= 0x00000040u;
}
inline void dataTransferConstants_t::clear_has_lengthlength() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void dataTransferConstants_t::clear_lengthlength() {
  lengthlength_ = 0u;
  clear_has_lengthlength();
}
inline ::google::protobuf::uint32 dataTransferConstants_t::lengthlength() const {
  return lengthlength_;
}
inline void dataTransferConstants_t::set_lengthlength(::google::protobuf::uint32 value) {
  set_has_lengthlength();
  lengthlength_ = value;
}

// optional uint64 seqRolloverThreshold = 8;
inline bool dataTransferConstants_t::has_seqrolloverthreshold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void dataTransferConstants_t::set_has_seqrolloverthreshold() {
  _has_bits_[0] |= 0x00000080u;
}
inline void dataTransferConstants_t::clear_has_seqrolloverthreshold() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void dataTransferConstants_t::clear_seqrolloverthreshold() {
  seqrolloverthreshold_ = GOOGLE_ULONGLONG(0);
  clear_has_seqrolloverthreshold();
}
inline ::google::protobuf::uint64 dataTransferConstants_t::seqrolloverthreshold() const {
  return seqrolloverthreshold_;
}
inline void dataTransferConstants_t::set_seqrolloverthreshold(::google::protobuf::uint64 value) {
  set_has_seqrolloverthreshold();
  seqrolloverthreshold_ = value;
}

// optional uint32 maxPDULifetime = 9;
inline bool dataTransferConstants_t::has_maxpdulifetime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void dataTransferConstants_t::set_has_maxpdulifetime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void dataTransferConstants_t::clear_has_maxpdulifetime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void dataTransferConstants_t::clear_maxpdulifetime() {
  maxpdulifetime_ = 0u;
  clear_has_maxpdulifetime();
}
inline ::google::protobuf::uint32 dataTransferConstants_t::maxpdulifetime() const {
  return maxpdulifetime_;
}
inline void dataTransferConstants_t::set_maxpdulifetime(::google::protobuf::uint32 value) {
  set_has_maxpdulifetime();
  maxpdulifetime_ = value;
}

// optional bool DIFConcatenation = 10;
inline bool dataTransferConstants_t::has_difconcatenation() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void dataTransferConstants_t::set_has_difconcatenation() {
  _has_bits_[0] |= 0x00000200u;
}
inline void dataTransferConstants_t::clear_has_difconcatenation() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void dataTransferConstants_t::clear_difconcatenation() {
  difconcatenation_ = false;
  clear_has_difconcatenation();
}
inline bool dataTransferConstants_t::difconcatenation() const {
  return difconcatenation_;
}
inline void dataTransferConstants_t::set_difconcatenation(bool value) {
  set_has_difconcatenation();
  difconcatenation_ = value;
}

// optional bool DIFFragmentation = 11;
inline bool dataTransferConstants_t::has_diffragmentation() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void dataTransferConstants_t::set_has_diffragmentation() {
  _has_bits_[0] |= 0x00000400u;
}
inline void dataTransferConstants_t::clear_has_diffragmentation() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void dataTransferConstants_t::clear_diffragmentation() {
  diffragmentation_ = false;
  clear_has_diffragmentation();
}
inline bool dataTransferConstants_t::diffragmentation() const {
  return diffragmentation_;
}
inline void dataTransferConstants_t::set_diffragmentation(bool value) {
  set_has_diffragmentation();
  diffragmentation_ = value;
}

// optional bool DIFIntegrity = 12;
inline bool dataTransferConstants_t::has_difintegrity() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void dataTransferConstants_t::set_has_difintegrity() {
  _has_bits_[0] |= 0x00000800u;
}
inline void dataTransferConstants_t::clear_has_difintegrity() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void dataTransferConstants_t::clear_difintegrity() {
  difintegrity_ = false;
  clear_has_difintegrity();
}
inline bool dataTransferConstants_t::difintegrity() const {
  return difintegrity_;
}
inline void dataTransferConstants_t::set_difintegrity(bool value) {
  set_has_difintegrity();
  difintegrity_ = value;
}

// optional uint32 maxTimeToKeepRetransmitting = 13;
inline bool dataTransferConstants_t::has_maxtimetokeepretransmitting() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void dataTransferConstants_t::set_has_maxtimetokeepretransmitting() {
  _has_bits_[0] |= 0x00001000u;
}
inline void dataTransferConstants_t::clear_has_maxtimetokeepretransmitting() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void dataTransferConstants_t::clear_maxtimetokeepretransmitting() {
  maxtimetokeepretransmitting_ = 0u;
  clear_has_maxtimetokeepretransmitting();
}
inline ::google::protobuf::uint32 dataTransferConstants_t::maxtimetokeepretransmitting() const {
  return maxtimetokeepretransmitting_;
}
inline void dataTransferConstants_t::set_maxtimetokeepretransmitting(::google::protobuf::uint32 value) {
  set_has_maxtimetokeepretransmitting();
  maxtimetokeepretransmitting_ = value;
}

// optional uint32 maxTimeToACK = 14;
inline bool dataTransferConstants_t::has_maxtimetoack() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void dataTransferConstants_t::set_has_maxtimetoack() {
  _has_bits_[0] |= 0x00002000u;
}
inline void dataTransferConstants_t::clear_has_maxtimetoack() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void dataTransferConstants_t::clear_maxtimetoack() {
  maxtimetoack_ = 0u;
  clear_has_maxtimetoack();
}
inline ::google::protobuf::uint32 dataTransferConstants_t::maxtimetoack() const {
  return maxtimetoack_;
}
inline void dataTransferConstants_t::set_maxtimetoack(::google::protobuf::uint32 value) {
  set_has_maxtimetoack();
  maxtimetoack_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace messages
}  // namespace rina

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DataTransferConstantsMessage_2eproto__INCLUDED
