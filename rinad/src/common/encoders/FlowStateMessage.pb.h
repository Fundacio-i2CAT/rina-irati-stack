// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FlowStateMessage.proto

#ifndef PROTOBUF_FlowStateMessage_2eproto__INCLUDED
#define PROTOBUF_FlowStateMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rina {
namespace messages {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_FlowStateMessage_2eproto();
void protobuf_AssignDesc_FlowStateMessage_2eproto();
void protobuf_ShutdownFile_FlowStateMessage_2eproto();

class flowStateObject_t;

// ===================================================================

class flowStateObject_t : public ::google::protobuf::Message {
 public:
  flowStateObject_t();
  virtual ~flowStateObject_t();

  flowStateObject_t(const flowStateObject_t& from);

  inline flowStateObject_t& operator=(const flowStateObject_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const flowStateObject_t& default_instance();

  void Swap(flowStateObject_t* other);

  // implements Message ----------------------------------------------

  flowStateObject_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const flowStateObject_t& from);
  void MergeFrom(const flowStateObject_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 address = 1;
  inline bool has_address() const;
  inline void clear_address();
  static const int kAddressFieldNumber = 1;
  inline ::google::protobuf::uint64 address() const;
  inline void set_address(::google::protobuf::uint64 value);

  // optional uint32 portid = 2;
  inline bool has_portid() const;
  inline void clear_portid();
  static const int kPortidFieldNumber = 2;
  inline ::google::protobuf::uint32 portid() const;
  inline void set_portid(::google::protobuf::uint32 value);

  // optional uint64 neighbor_address = 3;
  inline bool has_neighbor_address() const;
  inline void clear_neighbor_address();
  static const int kNeighborAddressFieldNumber = 3;
  inline ::google::protobuf::uint64 neighbor_address() const;
  inline void set_neighbor_address(::google::protobuf::uint64 value);

  // optional uint32 neighbor_portid = 4;
  inline bool has_neighbor_portid() const;
  inline void clear_neighbor_portid();
  static const int kNeighborPortidFieldNumber = 4;
  inline ::google::protobuf::uint32 neighbor_portid() const;
  inline void set_neighbor_portid(::google::protobuf::uint32 value);

  // optional bool state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline bool state() const;
  inline void set_state(bool value);

  // optional uint32 sequence_number = 6;
  inline bool has_sequence_number() const;
  inline void clear_sequence_number();
  static const int kSequenceNumberFieldNumber = 6;
  inline ::google::protobuf::uint32 sequence_number() const;
  inline void set_sequence_number(::google::protobuf::uint32 value);

  // optional uint32 age = 7;
  inline bool has_age() const;
  inline void clear_age();
  static const int kAgeFieldNumber = 7;
  inline ::google::protobuf::uint32 age() const;
  inline void set_age(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:rina.messages.flowStateObject_t)
 private:
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_portid();
  inline void clear_has_portid();
  inline void set_has_neighbor_address();
  inline void clear_has_neighbor_address();
  inline void set_has_neighbor_portid();
  inline void clear_has_neighbor_portid();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_sequence_number();
  inline void clear_has_sequence_number();
  inline void set_has_age();
  inline void clear_has_age();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 address_;
  ::google::protobuf::uint64 neighbor_address_;
  ::google::protobuf::uint32 portid_;
  ::google::protobuf::uint32 neighbor_portid_;
  bool state_;
  ::google::protobuf::uint32 sequence_number_;
  ::google::protobuf::uint32 age_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_FlowStateMessage_2eproto();
  friend void protobuf_AssignDesc_FlowStateMessage_2eproto();
  friend void protobuf_ShutdownFile_FlowStateMessage_2eproto();

  void InitAsDefaultInstance();
  static flowStateObject_t* default_instance_;
};
// ===================================================================


// ===================================================================

// flowStateObject_t

// optional uint64 address = 1;
inline bool flowStateObject_t::has_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void flowStateObject_t::set_has_address() {
  _has_bits_[0] |= 0x00000001u;
}
inline void flowStateObject_t::clear_has_address() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void flowStateObject_t::clear_address() {
  address_ = GOOGLE_ULONGLONG(0);
  clear_has_address();
}
inline ::google::protobuf::uint64 flowStateObject_t::address() const {
  return address_;
}
inline void flowStateObject_t::set_address(::google::protobuf::uint64 value) {
  set_has_address();
  address_ = value;
}

// optional uint32 portid = 2;
inline bool flowStateObject_t::has_portid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void flowStateObject_t::set_has_portid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void flowStateObject_t::clear_has_portid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void flowStateObject_t::clear_portid() {
  portid_ = 0u;
  clear_has_portid();
}
inline ::google::protobuf::uint32 flowStateObject_t::portid() const {
  return portid_;
}
inline void flowStateObject_t::set_portid(::google::protobuf::uint32 value) {
  set_has_portid();
  portid_ = value;
}

// optional uint64 neighbor_address = 3;
inline bool flowStateObject_t::has_neighbor_address() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void flowStateObject_t::set_has_neighbor_address() {
  _has_bits_[0] |= 0x00000004u;
}
inline void flowStateObject_t::clear_has_neighbor_address() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void flowStateObject_t::clear_neighbor_address() {
  neighbor_address_ = GOOGLE_ULONGLONG(0);
  clear_has_neighbor_address();
}
inline ::google::protobuf::uint64 flowStateObject_t::neighbor_address() const {
  return neighbor_address_;
}
inline void flowStateObject_t::set_neighbor_address(::google::protobuf::uint64 value) {
  set_has_neighbor_address();
  neighbor_address_ = value;
}

// optional uint32 neighbor_portid = 4;
inline bool flowStateObject_t::has_neighbor_portid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void flowStateObject_t::set_has_neighbor_portid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void flowStateObject_t::clear_has_neighbor_portid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void flowStateObject_t::clear_neighbor_portid() {
  neighbor_portid_ = 0u;
  clear_has_neighbor_portid();
}
inline ::google::protobuf::uint32 flowStateObject_t::neighbor_portid() const {
  return neighbor_portid_;
}
inline void flowStateObject_t::set_neighbor_portid(::google::protobuf::uint32 value) {
  set_has_neighbor_portid();
  neighbor_portid_ = value;
}

// optional bool state = 5;
inline bool flowStateObject_t::has_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void flowStateObject_t::set_has_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void flowStateObject_t::clear_has_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void flowStateObject_t::clear_state() {
  state_ = false;
  clear_has_state();
}
inline bool flowStateObject_t::state() const {
  return state_;
}
inline void flowStateObject_t::set_state(bool value) {
  set_has_state();
  state_ = value;
}

// optional uint32 sequence_number = 6;
inline bool flowStateObject_t::has_sequence_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void flowStateObject_t::set_has_sequence_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void flowStateObject_t::clear_has_sequence_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void flowStateObject_t::clear_sequence_number() {
  sequence_number_ = 0u;
  clear_has_sequence_number();
}
inline ::google::protobuf::uint32 flowStateObject_t::sequence_number() const {
  return sequence_number_;
}
inline void flowStateObject_t::set_sequence_number(::google::protobuf::uint32 value) {
  set_has_sequence_number();
  sequence_number_ = value;
}

// optional uint32 age = 7;
inline bool flowStateObject_t::has_age() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void flowStateObject_t::set_has_age() {
  _has_bits_[0] |= 0x00000040u;
}
inline void flowStateObject_t::clear_has_age() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void flowStateObject_t::clear_age() {
  age_ = 0u;
  clear_has_age();
}
inline ::google::protobuf::uint32 flowStateObject_t::age() const {
  return age_;
}
inline void flowStateObject_t::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace messages
}  // namespace rina

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FlowStateMessage_2eproto__INCLUDED
