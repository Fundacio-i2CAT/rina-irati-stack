// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protofiles/EFCPPolicyMessage.proto

package rina.encoding.impl.googleprotobuf.policy;

public final class EFCPPolicyMessage {
  private EFCPPolicyMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class efcpPolicy_t extends
      com.google.protobuf.GeneratedMessage {
    // Use efcpPolicy_t.newBuilder() to construct.
    private efcpPolicy_t() {
      initFields();
    }
    private efcpPolicy_t(boolean noInit) {}
    
    private static final efcpPolicy_t defaultInstance;
    public static efcpPolicy_t getDefaultInstance() {
      return defaultInstance;
    }
    
    public efcpPolicy_t getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.internal_static_rina_messages_efcpPolicy_t_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.internal_static_rina_messages_efcpPolicy_t_fieldAccessorTable;
    }
    
    // optional bytes qosId = 1;
    public static final int QOSID_FIELD_NUMBER = 1;
    private boolean hasQosId;
    private com.google.protobuf.ByteString qosId_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasQosId() { return hasQosId; }
    public com.google.protobuf.ByteString getQosId() { return qosId_; }
    
    // optional .rina.messages.policyDescriptor_t policyDescriptor = 2;
    public static final int POLICYDESCRIPTOR_FIELD_NUMBER = 2;
    private boolean hasPolicyDescriptor;
    private rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t policyDescriptor_;
    public boolean hasPolicyDescriptor() { return hasPolicyDescriptor; }
    public rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t getPolicyDescriptor() { return policyDescriptor_; }
    
    private void initFields() {
      policyDescriptor_ = rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasQosId()) {
        output.writeBytes(1, getQosId());
      }
      if (hasPolicyDescriptor()) {
        output.writeMessage(2, getPolicyDescriptor());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasQosId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getQosId());
      }
      if (hasPolicyDescriptor()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPolicyDescriptor());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t result;
      
      // Construct using rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t();
        return builder;
      }
      
      protected rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t.getDescriptor();
      }
      
      public rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t getDefaultInstanceForType() {
        return rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t) {
          return mergeFrom((rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t other) {
        if (other == rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t.getDefaultInstance()) return this;
        if (other.hasQosId()) {
          setQosId(other.getQosId());
        }
        if (other.hasPolicyDescriptor()) {
          mergePolicyDescriptor(other.getPolicyDescriptor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setQosId(input.readBytes());
              break;
            }
            case 18: {
              rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t.Builder subBuilder = rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t.newBuilder();
              if (hasPolicyDescriptor()) {
                subBuilder.mergeFrom(getPolicyDescriptor());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPolicyDescriptor(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional bytes qosId = 1;
      public boolean hasQosId() {
        return result.hasQosId();
      }
      public com.google.protobuf.ByteString getQosId() {
        return result.getQosId();
      }
      public Builder setQosId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasQosId = true;
        result.qosId_ = value;
        return this;
      }
      public Builder clearQosId() {
        result.hasQosId = false;
        result.qosId_ = getDefaultInstance().getQosId();
        return this;
      }
      
      // optional .rina.messages.policyDescriptor_t policyDescriptor = 2;
      public boolean hasPolicyDescriptor() {
        return result.hasPolicyDescriptor();
      }
      public rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t getPolicyDescriptor() {
        return result.getPolicyDescriptor();
      }
      public Builder setPolicyDescriptor(rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPolicyDescriptor = true;
        result.policyDescriptor_ = value;
        return this;
      }
      public Builder setPolicyDescriptor(rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t.Builder builderForValue) {
        result.hasPolicyDescriptor = true;
        result.policyDescriptor_ = builderForValue.build();
        return this;
      }
      public Builder mergePolicyDescriptor(rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t value) {
        if (result.hasPolicyDescriptor() &&
            result.policyDescriptor_ != rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t.getDefaultInstance()) {
          result.policyDescriptor_ =
            rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t.newBuilder(result.policyDescriptor_).mergeFrom(value).buildPartial();
        } else {
          result.policyDescriptor_ = value;
        }
        result.hasPolicyDescriptor = true;
        return this;
      }
      public Builder clearPolicyDescriptor() {
        result.hasPolicyDescriptor = false;
        result.policyDescriptor_ = rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.policyDescriptor_t.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:rina.messages.efcpPolicy_t)
    }
    
    static {
      defaultInstance = new efcpPolicy_t(true);
      rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:rina.messages.efcpPolicy_t)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_rina_messages_efcpPolicy_t_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_rina_messages_efcpPolicy_t_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\"protofiles/EFCPPolicyMessage.proto\022\rri" +
      "na.messages\032(protofiles/PolicyDescriptor" +
      "Message.proto\"Z\n\014efcpPolicy_t\022\r\n\005qosId\030\001" +
      " \001(\014\022;\n\020policyDescriptor\030\002 \001(\0132!.rina.me" +
      "ssages.policyDescriptor_tB*\n(rina.encodi" +
      "ng.impl.googleprotobuf.policy"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_rina_messages_efcpPolicy_t_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_rina_messages_efcpPolicy_t_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_rina_messages_efcpPolicy_t_descriptor,
              new java.lang.String[] { "QosId", "PolicyDescriptor", },
              rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t.class,
              rina.encoding.impl.googleprotobuf.policy.EFCPPolicyMessage.efcpPolicy_t.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          rina.encoding.impl.googleprotobuf.policy.PolicyDescriptorMessage.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
