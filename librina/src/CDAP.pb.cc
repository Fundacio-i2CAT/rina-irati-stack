// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CDAP.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CDAP.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace rina {
namespace cdap {
namespace impl {
namespace googleprotobuf {

namespace {

const ::google::protobuf::Descriptor* objVal_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  objVal_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* authValue_t_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  authValue_t_reflection_ = NULL;
const ::google::protobuf::Descriptor* CDAPMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CDAPMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* opCode_t_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* flagValues_t_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* authTypes_t_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_CDAP_2eproto() {
  protobuf_AddDesc_CDAP_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CDAP.proto");
  GOOGLE_CHECK(file != NULL);
  objVal_t_descriptor_ = file->message_type(0);
  static const int objVal_t_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objVal_t, intval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objVal_t, sintval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objVal_t, int64val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objVal_t, sint64val_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objVal_t, strval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objVal_t, byteval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objVal_t, floatval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objVal_t, doubleval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objVal_t, boolval_),
  };
  objVal_t_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      objVal_t_descriptor_,
      objVal_t::default_instance_,
      objVal_t_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objVal_t, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(objVal_t, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(objVal_t));
  authValue_t_descriptor_ = file->message_type(1);
  static const int authValue_t_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(authValue_t, authname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(authValue_t, authpassword_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(authValue_t, authother_),
  };
  authValue_t_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      authValue_t_descriptor_,
      authValue_t::default_instance_,
      authValue_t_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(authValue_t, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(authValue_t, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(authValue_t));
  CDAPMessage_descriptor_ = file->message_type(2);
  static const int CDAPMessage_offsets_[23] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, abssyntax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, opcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, invokeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, flags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, objclass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, objname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, objinst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, objvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, scope_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, filter_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, authmech_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, authvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, destaeinst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, destaename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, destapinst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, destapname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, srcaeinst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, srcaename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, srcapinst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, srcapname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, resultreason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, version_),
  };
  CDAPMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CDAPMessage_descriptor_,
      CDAPMessage::default_instance_,
      CDAPMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDAPMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CDAPMessage));
  opCode_t_descriptor_ = file->enum_type(0);
  flagValues_t_descriptor_ = file->enum_type(1);
  authTypes_t_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CDAP_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    objVal_t_descriptor_, &objVal_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    authValue_t_descriptor_, &authValue_t::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CDAPMessage_descriptor_, &CDAPMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CDAP_2eproto() {
  delete objVal_t::default_instance_;
  delete objVal_t_reflection_;
  delete authValue_t::default_instance_;
  delete authValue_t_reflection_;
  delete CDAPMessage::default_instance_;
  delete CDAPMessage_reflection_;
}

void protobuf_AddDesc_CDAP_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nCDAP.proto\022\035rina.cdap.impl.googleproto"
    "buf\"\247\001\n\010objVal_t\022\016\n\006intval\030\001 \001(\005\022\017\n\007sint"
    "val\030\002 \001(\021\022\020\n\010int64val\030\003 \001(\003\022\021\n\tsint64val"
    "\030\004 \001(\022\022\016\n\006strval\030\005 \001(\t\022\017\n\007byteval\030\006 \001(\014\022"
    "\020\n\010floatval\030\007 \001(\007\022\021\n\tdoubleval\030\010 \001(\006\022\017\n\007"
    "boolval\030\t \001(\010\"H\n\013authValue_t\022\020\n\010authName"
    "\030\001 \001(\t\022\024\n\014authPassword\030\002 \001(\t\022\021\n\tauthOthe"
    "r\030\003 \001(\014\"\210\005\n\013CDAPMessage\022\021\n\tabsSyntax\030\001 \001"
    "(\005\0227\n\006opCode\030\002 \002(\0162\'.rina.cdap.impl.goog"
    "leprotobuf.opCode_t\022\020\n\010invokeID\030\003 \001(\005\022:\n"
    "\005flags\030\004 \001(\0162+.rina.cdap.impl.googleprot"
    "obuf.flagValues_t\022\020\n\010objClass\030\005 \001(\t\022\017\n\007o"
    "bjName\030\006 \001(\t\022\017\n\007objInst\030\007 \001(\003\0229\n\010objValu"
    "e\030\010 \001(\0132\'.rina.cdap.impl.googleprotobuf."
    "objVal_t\022\021\n\006result\030\t \001(\005:\0010\022\r\n\005scope\030\n \001"
    "(\005\022\016\n\006filter\030\013 \001(\014\022<\n\010authMech\030\021 \001(\0162*.r"
    "ina.cdap.impl.googleprotobuf.authTypes_t"
    "\022=\n\tauthValue\030\022 \001(\0132*.rina.cdap.impl.goo"
    "gleprotobuf.authValue_t\022\022\n\ndestAEInst\030\023 "
    "\001(\t\022\022\n\ndestAEName\030\024 \001(\t\022\022\n\ndestApInst\030\025 "
    "\001(\t\022\022\n\ndestApName\030\026 \001(\t\022\021\n\tsrcAEInst\030\027 \001"
    "(\t\022\021\n\tsrcAEName\030\030 \001(\t\022\021\n\tsrcApInst\030\031 \001(\t"
    "\022\021\n\tsrcApName\030\032 \001(\t\022\024\n\014resultReason\030\033 \001("
    "\t\022\017\n\007version\030\034 \001(\003*\230\002\n\010opCode_t\022\r\n\tM_CON"
    "NECT\020\000\022\017\n\013M_CONNECT_R\020\001\022\r\n\tM_RELEASE\020\002\022\017"
    "\n\013M_RELEASE_R\020\003\022\014\n\010M_CREATE\020\004\022\016\n\nM_CREAT"
    "E_R\020\005\022\014\n\010M_DELETE\020\006\022\016\n\nM_DELETE_R\020\007\022\n\n\006M"
    "_READ\020\010\022\014\n\010M_READ_R\020\t\022\020\n\014M_CANCELREAD\020\n\022"
    "\022\n\016M_CANCELREAD_R\020\013\022\013\n\007M_WRITE\020\014\022\r\n\tM_WR"
    "ITE_R\020\r\022\013\n\007M_START\020\016\022\r\n\tM_START_R\020\017\022\n\n\006M"
    "_STOP\020\020\022\014\n\010M_STOP_R\020\021*\?\n\014flagValues_t\022\016\n"
    "\nF_NO_FLAGS\020\000\022\n\n\006F_SYNC\020\001\022\023\n\017F_RD_INCOMP"
    "LETE\020\002*O\n\013authTypes_t\022\r\n\tAUTH_NONE\020\000\022\017\n\013"
    "AUTH_PASSWD\020\001\022\017\n\013AUTH_SSHRSA\020\002\022\017\n\013AUTH_S"
    "SHDSA\020\003", 1367);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CDAP.proto", &protobuf_RegisterTypes);
  objVal_t::default_instance_ = new objVal_t();
  authValue_t::default_instance_ = new authValue_t();
  CDAPMessage::default_instance_ = new CDAPMessage();
  objVal_t::default_instance_->InitAsDefaultInstance();
  authValue_t::default_instance_->InitAsDefaultInstance();
  CDAPMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CDAP_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CDAP_2eproto {
  StaticDescriptorInitializer_CDAP_2eproto() {
    protobuf_AddDesc_CDAP_2eproto();
  }
} static_descriptor_initializer_CDAP_2eproto_;
const ::google::protobuf::EnumDescriptor* opCode_t_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return opCode_t_descriptor_;
}
bool opCode_t_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* flagValues_t_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return flagValues_t_descriptor_;
}
bool flagValues_t_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* authTypes_t_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return authTypes_t_descriptor_;
}
bool authTypes_t_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int objVal_t::kIntvalFieldNumber;
const int objVal_t::kSintvalFieldNumber;
const int objVal_t::kInt64ValFieldNumber;
const int objVal_t::kSint64ValFieldNumber;
const int objVal_t::kStrvalFieldNumber;
const int objVal_t::kBytevalFieldNumber;
const int objVal_t::kFloatvalFieldNumber;
const int objVal_t::kDoublevalFieldNumber;
const int objVal_t::kBoolvalFieldNumber;
#endif  // !_MSC_VER

objVal_t::objVal_t()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void objVal_t::InitAsDefaultInstance() {
}

objVal_t::objVal_t(const objVal_t& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void objVal_t::SharedCtor() {
  _cached_size_ = 0;
  intval_ = 0;
  sintval_ = 0;
  int64val_ = GOOGLE_LONGLONG(0);
  sint64val_ = GOOGLE_LONGLONG(0);
  strval_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  byteval_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  floatval_ = 0u;
  doubleval_ = GOOGLE_ULONGLONG(0);
  boolval_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

objVal_t::~objVal_t() {
  SharedDtor();
}

void objVal_t::SharedDtor() {
  if (strval_ != &::google::protobuf::internal::kEmptyString) {
    delete strval_;
  }
  if (byteval_ != &::google::protobuf::internal::kEmptyString) {
    delete byteval_;
  }
  if (this != default_instance_) {
  }
}

void objVal_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* objVal_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return objVal_t_descriptor_;
}

const objVal_t& objVal_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CDAP_2eproto();
  return *default_instance_;
}

objVal_t* objVal_t::default_instance_ = NULL;

objVal_t* objVal_t::New() const {
  return new objVal_t;
}

void objVal_t::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    intval_ = 0;
    sintval_ = 0;
    int64val_ = GOOGLE_LONGLONG(0);
    sint64val_ = GOOGLE_LONGLONG(0);
    if (has_strval()) {
      if (strval_ != &::google::protobuf::internal::kEmptyString) {
        strval_->clear();
      }
    }
    if (has_byteval()) {
      if (byteval_ != &::google::protobuf::internal::kEmptyString) {
        byteval_->clear();
      }
    }
    floatval_ = 0u;
    doubleval_ = GOOGLE_ULONGLONG(0);
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    boolval_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool objVal_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 intval = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intval_)));
          set_has_intval();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sintval;
        break;
      }

      // optional sint32 sintval = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sintval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sintval_)));
          set_has_sintval();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_int64val;
        break;
      }

      // optional int64 int64val = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_int64val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int64val_)));
          set_has_int64val();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_sint64val;
        break;
      }

      // optional sint64 sint64val = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sint64val:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &sint64val_)));
          set_has_sint64val();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_strval;
        break;
      }

      // optional string strval = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_strval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strval()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->strval().data(), this->strval().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_byteval;
        break;
      }

      // optional bytes byteval = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_byteval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_byteval()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(61)) goto parse_floatval;
        break;
      }

      // optional fixed32 floatval = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_floatval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &floatval_)));
          set_has_floatval();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(65)) goto parse_doubleval;
        break;
      }

      // optional fixed64 doubleval = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_doubleval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &doubleval_)));
          set_has_doubleval();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_boolval;
        break;
      }

      // optional bool boolval = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_boolval:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &boolval_)));
          set_has_boolval();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void objVal_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 intval = 1;
  if (has_intval()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->intval(), output);
  }

  // optional sint32 sintval = 2;
  if (has_sintval()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->sintval(), output);
  }

  // optional int64 int64val = 3;
  if (has_int64val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->int64val(), output);
  }

  // optional sint64 sint64val = 4;
  if (has_sint64val()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(4, this->sint64val(), output);
  }

  // optional string strval = 5;
  if (has_strval()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strval().data(), this->strval().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->strval(), output);
  }

  // optional bytes byteval = 6;
  if (has_byteval()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->byteval(), output);
  }

  // optional fixed32 floatval = 7;
  if (has_floatval()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(7, this->floatval(), output);
  }

  // optional fixed64 doubleval = 8;
  if (has_doubleval()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(8, this->doubleval(), output);
  }

  // optional bool boolval = 9;
  if (has_boolval()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->boolval(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* objVal_t::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 intval = 1;
  if (has_intval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->intval(), target);
  }

  // optional sint32 sintval = 2;
  if (has_sintval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->sintval(), target);
  }

  // optional int64 int64val = 3;
  if (has_int64val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->int64val(), target);
  }

  // optional sint64 sint64val = 4;
  if (has_sint64val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(4, this->sint64val(), target);
  }

  // optional string strval = 5;
  if (has_strval()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->strval().data(), this->strval().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->strval(), target);
  }

  // optional bytes byteval = 6;
  if (has_byteval()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->byteval(), target);
  }

  // optional fixed32 floatval = 7;
  if (has_floatval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(7, this->floatval(), target);
  }

  // optional fixed64 doubleval = 8;
  if (has_doubleval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(8, this->doubleval(), target);
  }

  // optional bool boolval = 9;
  if (has_boolval()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->boolval(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int objVal_t::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 intval = 1;
    if (has_intval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->intval());
    }

    // optional sint32 sintval = 2;
    if (has_sintval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt32Size(
          this->sintval());
    }

    // optional int64 int64val = 3;
    if (has_int64val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64val());
    }

    // optional sint64 sint64val = 4;
    if (has_sint64val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->sint64val());
    }

    // optional string strval = 5;
    if (has_strval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strval());
    }

    // optional bytes byteval = 6;
    if (has_byteval()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->byteval());
    }

    // optional fixed32 floatval = 7;
    if (has_floatval()) {
      total_size += 1 + 4;
    }

    // optional fixed64 doubleval = 8;
    if (has_doubleval()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool boolval = 9;
    if (has_boolval()) {
      total_size += 1 + 1;
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void objVal_t::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const objVal_t* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const objVal_t*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void objVal_t::MergeFrom(const objVal_t& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_intval()) {
      set_intval(from.intval());
    }
    if (from.has_sintval()) {
      set_sintval(from.sintval());
    }
    if (from.has_int64val()) {
      set_int64val(from.int64val());
    }
    if (from.has_sint64val()) {
      set_sint64val(from.sint64val());
    }
    if (from.has_strval()) {
      set_strval(from.strval());
    }
    if (from.has_byteval()) {
      set_byteval(from.byteval());
    }
    if (from.has_floatval()) {
      set_floatval(from.floatval());
    }
    if (from.has_doubleval()) {
      set_doubleval(from.doubleval());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_boolval()) {
      set_boolval(from.boolval());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void objVal_t::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void objVal_t::CopyFrom(const objVal_t& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool objVal_t::IsInitialized() const {

  return true;
}

void objVal_t::Swap(objVal_t* other) {
  if (other != this) {
    std::swap(intval_, other->intval_);
    std::swap(sintval_, other->sintval_);
    std::swap(int64val_, other->int64val_);
    std::swap(sint64val_, other->sint64val_);
    std::swap(strval_, other->strval_);
    std::swap(byteval_, other->byteval_);
    std::swap(floatval_, other->floatval_);
    std::swap(doubleval_, other->doubleval_);
    std::swap(boolval_, other->boolval_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata objVal_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = objVal_t_descriptor_;
  metadata.reflection = objVal_t_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int authValue_t::kAuthNameFieldNumber;
const int authValue_t::kAuthPasswordFieldNumber;
const int authValue_t::kAuthOtherFieldNumber;
#endif  // !_MSC_VER

authValue_t::authValue_t()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void authValue_t::InitAsDefaultInstance() {
}

authValue_t::authValue_t(const authValue_t& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void authValue_t::SharedCtor() {
  _cached_size_ = 0;
  authname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  authpassword_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  authother_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

authValue_t::~authValue_t() {
  SharedDtor();
}

void authValue_t::SharedDtor() {
  if (authname_ != &::google::protobuf::internal::kEmptyString) {
    delete authname_;
  }
  if (authpassword_ != &::google::protobuf::internal::kEmptyString) {
    delete authpassword_;
  }
  if (authother_ != &::google::protobuf::internal::kEmptyString) {
    delete authother_;
  }
  if (this != default_instance_) {
  }
}

void authValue_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* authValue_t::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return authValue_t_descriptor_;
}

const authValue_t& authValue_t::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CDAP_2eproto();
  return *default_instance_;
}

authValue_t* authValue_t::default_instance_ = NULL;

authValue_t* authValue_t::New() const {
  return new authValue_t;
}

void authValue_t::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_authname()) {
      if (authname_ != &::google::protobuf::internal::kEmptyString) {
        authname_->clear();
      }
    }
    if (has_authpassword()) {
      if (authpassword_ != &::google::protobuf::internal::kEmptyString) {
        authpassword_->clear();
      }
    }
    if (has_authother()) {
      if (authother_ != &::google::protobuf::internal::kEmptyString) {
        authother_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool authValue_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string authName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->authname().data(), this->authname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_authPassword;
        break;
      }

      // optional string authPassword = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_authPassword:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->authpassword().data(), this->authpassword().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_authOther;
        break;
      }

      // optional bytes authOther = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_authOther:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_authother()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void authValue_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string authName = 1;
  if (has_authname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->authname().data(), this->authname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->authname(), output);
  }

  // optional string authPassword = 2;
  if (has_authpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->authpassword().data(), this->authpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->authpassword(), output);
  }

  // optional bytes authOther = 3;
  if (has_authother()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->authother(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* authValue_t::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string authName = 1;
  if (has_authname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->authname().data(), this->authname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->authname(), target);
  }

  // optional string authPassword = 2;
  if (has_authpassword()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->authpassword().data(), this->authpassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->authpassword(), target);
  }

  // optional bytes authOther = 3;
  if (has_authother()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->authother(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int authValue_t::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string authName = 1;
    if (has_authname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authname());
    }

    // optional string authPassword = 2;
    if (has_authpassword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authpassword());
    }

    // optional bytes authOther = 3;
    if (has_authother()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->authother());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void authValue_t::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const authValue_t* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const authValue_t*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void authValue_t::MergeFrom(const authValue_t& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_authname()) {
      set_authname(from.authname());
    }
    if (from.has_authpassword()) {
      set_authpassword(from.authpassword());
    }
    if (from.has_authother()) {
      set_authother(from.authother());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void authValue_t::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void authValue_t::CopyFrom(const authValue_t& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool authValue_t::IsInitialized() const {

  return true;
}

void authValue_t::Swap(authValue_t* other) {
  if (other != this) {
    std::swap(authname_, other->authname_);
    std::swap(authpassword_, other->authpassword_);
    std::swap(authother_, other->authother_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata authValue_t::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = authValue_t_descriptor_;
  metadata.reflection = authValue_t_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CDAPMessage::kAbsSyntaxFieldNumber;
const int CDAPMessage::kOpCodeFieldNumber;
const int CDAPMessage::kInvokeIDFieldNumber;
const int CDAPMessage::kFlagsFieldNumber;
const int CDAPMessage::kObjClassFieldNumber;
const int CDAPMessage::kObjNameFieldNumber;
const int CDAPMessage::kObjInstFieldNumber;
const int CDAPMessage::kObjValueFieldNumber;
const int CDAPMessage::kResultFieldNumber;
const int CDAPMessage::kScopeFieldNumber;
const int CDAPMessage::kFilterFieldNumber;
const int CDAPMessage::kAuthMechFieldNumber;
const int CDAPMessage::kAuthValueFieldNumber;
const int CDAPMessage::kDestAEInstFieldNumber;
const int CDAPMessage::kDestAENameFieldNumber;
const int CDAPMessage::kDestApInstFieldNumber;
const int CDAPMessage::kDestApNameFieldNumber;
const int CDAPMessage::kSrcAEInstFieldNumber;
const int CDAPMessage::kSrcAENameFieldNumber;
const int CDAPMessage::kSrcApInstFieldNumber;
const int CDAPMessage::kSrcApNameFieldNumber;
const int CDAPMessage::kResultReasonFieldNumber;
const int CDAPMessage::kVersionFieldNumber;
#endif  // !_MSC_VER

CDAPMessage::CDAPMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CDAPMessage::InitAsDefaultInstance() {
  objvalue_ = const_cast< ::rina::cdap::impl::googleprotobuf::objVal_t*>(&::rina::cdap::impl::googleprotobuf::objVal_t::default_instance());
  authvalue_ = const_cast< ::rina::cdap::impl::googleprotobuf::authValue_t*>(&::rina::cdap::impl::googleprotobuf::authValue_t::default_instance());
}

CDAPMessage::CDAPMessage(const CDAPMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CDAPMessage::SharedCtor() {
  _cached_size_ = 0;
  abssyntax_ = 0;
  opcode_ = 0;
  invokeid_ = 0;
  flags_ = 0;
  objclass_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  objname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  objinst_ = GOOGLE_LONGLONG(0);
  objvalue_ = NULL;
  result_ = 0;
  scope_ = 0;
  filter_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  authmech_ = 0;
  authvalue_ = NULL;
  destaeinst_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  destaename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  destapinst_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  destapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  srcaeinst_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  srcaename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  srcapinst_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  srcapname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  resultreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  version_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CDAPMessage::~CDAPMessage() {
  SharedDtor();
}

void CDAPMessage::SharedDtor() {
  if (objclass_ != &::google::protobuf::internal::kEmptyString) {
    delete objclass_;
  }
  if (objname_ != &::google::protobuf::internal::kEmptyString) {
    delete objname_;
  }
  if (filter_ != &::google::protobuf::internal::kEmptyString) {
    delete filter_;
  }
  if (destaeinst_ != &::google::protobuf::internal::kEmptyString) {
    delete destaeinst_;
  }
  if (destaename_ != &::google::protobuf::internal::kEmptyString) {
    delete destaename_;
  }
  if (destapinst_ != &::google::protobuf::internal::kEmptyString) {
    delete destapinst_;
  }
  if (destapname_ != &::google::protobuf::internal::kEmptyString) {
    delete destapname_;
  }
  if (srcaeinst_ != &::google::protobuf::internal::kEmptyString) {
    delete srcaeinst_;
  }
  if (srcaename_ != &::google::protobuf::internal::kEmptyString) {
    delete srcaename_;
  }
  if (srcapinst_ != &::google::protobuf::internal::kEmptyString) {
    delete srcapinst_;
  }
  if (srcapname_ != &::google::protobuf::internal::kEmptyString) {
    delete srcapname_;
  }
  if (resultreason_ != &::google::protobuf::internal::kEmptyString) {
    delete resultreason_;
  }
  if (this != default_instance_) {
    delete objvalue_;
    delete authvalue_;
  }
}

void CDAPMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CDAPMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CDAPMessage_descriptor_;
}

const CDAPMessage& CDAPMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CDAP_2eproto();
  return *default_instance_;
}

CDAPMessage* CDAPMessage::default_instance_ = NULL;

CDAPMessage* CDAPMessage::New() const {
  return new CDAPMessage;
}

void CDAPMessage::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    abssyntax_ = 0;
    opcode_ = 0;
    invokeid_ = 0;
    flags_ = 0;
    if (has_objclass()) {
      if (objclass_ != &::google::protobuf::internal::kEmptyString) {
        objclass_->clear();
      }
    }
    if (has_objname()) {
      if (objname_ != &::google::protobuf::internal::kEmptyString) {
        objname_->clear();
      }
    }
    objinst_ = GOOGLE_LONGLONG(0);
    if (has_objvalue()) {
      if (objvalue_ != NULL) objvalue_->::rina::cdap::impl::googleprotobuf::objVal_t::Clear();
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    result_ = 0;
    scope_ = 0;
    if (has_filter()) {
      if (filter_ != &::google::protobuf::internal::kEmptyString) {
        filter_->clear();
      }
    }
    authmech_ = 0;
    if (has_authvalue()) {
      if (authvalue_ != NULL) authvalue_->::rina::cdap::impl::googleprotobuf::authValue_t::Clear();
    }
    if (has_destaeinst()) {
      if (destaeinst_ != &::google::protobuf::internal::kEmptyString) {
        destaeinst_->clear();
      }
    }
    if (has_destaename()) {
      if (destaename_ != &::google::protobuf::internal::kEmptyString) {
        destaename_->clear();
      }
    }
    if (has_destapinst()) {
      if (destapinst_ != &::google::protobuf::internal::kEmptyString) {
        destapinst_->clear();
      }
    }
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_destapname()) {
      if (destapname_ != &::google::protobuf::internal::kEmptyString) {
        destapname_->clear();
      }
    }
    if (has_srcaeinst()) {
      if (srcaeinst_ != &::google::protobuf::internal::kEmptyString) {
        srcaeinst_->clear();
      }
    }
    if (has_srcaename()) {
      if (srcaename_ != &::google::protobuf::internal::kEmptyString) {
        srcaename_->clear();
      }
    }
    if (has_srcapinst()) {
      if (srcapinst_ != &::google::protobuf::internal::kEmptyString) {
        srcapinst_->clear();
      }
    }
    if (has_srcapname()) {
      if (srcapname_ != &::google::protobuf::internal::kEmptyString) {
        srcapname_->clear();
      }
    }
    if (has_resultreason()) {
      if (resultreason_ != &::google::protobuf::internal::kEmptyString) {
        resultreason_->clear();
      }
    }
    version_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CDAPMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 absSyntax = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &abssyntax_)));
          set_has_abssyntax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_opCode;
        break;
      }

      // required .rina.cdap.impl.googleprotobuf.opCode_t opCode = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_opCode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::rina::cdap::impl::googleprotobuf::opCode_t_IsValid(value)) {
            set_opcode(static_cast< ::rina::cdap::impl::googleprotobuf::opCode_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_invokeID;
        break;
      }

      // optional int32 invokeID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_invokeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &invokeid_)));
          set_has_invokeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_flags;
        break;
      }

      // optional .rina.cdap.impl.googleprotobuf.flagValues_t flags = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_flags:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::rina::cdap::impl::googleprotobuf::flagValues_t_IsValid(value)) {
            set_flags(static_cast< ::rina::cdap::impl::googleprotobuf::flagValues_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_objClass;
        break;
      }

      // optional string objClass = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_objClass:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_objclass()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->objclass().data(), this->objclass().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_objName;
        break;
      }

      // optional string objName = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_objName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_objname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->objname().data(), this->objname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_objInst;
        break;
      }

      // optional int64 objInst = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_objInst:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &objinst_)));
          set_has_objinst();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_objValue;
        break;
      }

      // optional .rina.cdap.impl.googleprotobuf.objVal_t objValue = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_objValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_objvalue()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_result;
        break;
      }

      // optional int32 result = 9 [default = 0];
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_result:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
          set_has_result();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_scope;
        break;
      }

      // optional int32 scope = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scope:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scope_)));
          set_has_scope();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_filter;
        break;
      }

      // optional bytes filter = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_filter:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_filter()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_authMech;
        break;
      }

      // optional .rina.cdap.impl.googleprotobuf.authTypes_t authMech = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_authMech:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::rina::cdap::impl::googleprotobuf::authTypes_t_IsValid(value)) {
            set_authmech(static_cast< ::rina::cdap::impl::googleprotobuf::authTypes_t >(value));
          } else {
            mutable_unknown_fields()->AddVarint(17, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_authValue;
        break;
      }

      // optional .rina.cdap.impl.googleprotobuf.authValue_t authValue = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_authValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_authvalue()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_destAEInst;
        break;
      }

      // optional string destAEInst = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_destAEInst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destaeinst()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->destaeinst().data(), this->destaeinst().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_destAEName;
        break;
      }

      // optional string destAEName = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_destAEName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destaename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->destaename().data(), this->destaename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_destApInst;
        break;
      }

      // optional string destApInst = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_destApInst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destapinst()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->destapinst().data(), this->destapinst().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_destApName;
        break;
      }

      // optional string destApName = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_destApName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destapname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->destapname().data(), this->destapname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_srcAEInst;
        break;
      }

      // optional string srcAEInst = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_srcAEInst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcaeinst()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->srcaeinst().data(), this->srcaeinst().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_srcAEName;
        break;
      }

      // optional string srcAEName = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_srcAEName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcaename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->srcaename().data(), this->srcaename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_srcApInst;
        break;
      }

      // optional string srcApInst = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_srcApInst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcapinst()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->srcapinst().data(), this->srcapinst().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_srcApName;
        break;
      }

      // optional string srcApName = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_srcApName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srcapname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->srcapname().data(), this->srcapname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_resultReason;
        break;
      }

      // optional string resultReason = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_resultReason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resultreason()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->resultreason().data(), this->resultreason().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_version;
        break;
      }

      // optional int64 version = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CDAPMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 absSyntax = 1;
  if (has_abssyntax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->abssyntax(), output);
  }

  // required .rina.cdap.impl.googleprotobuf.opCode_t opCode = 2;
  if (has_opcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->opcode(), output);
  }

  // optional int32 invokeID = 3;
  if (has_invokeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->invokeid(), output);
  }

  // optional .rina.cdap.impl.googleprotobuf.flagValues_t flags = 4;
  if (has_flags()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->flags(), output);
  }

  // optional string objClass = 5;
  if (has_objclass()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->objclass().data(), this->objclass().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->objclass(), output);
  }

  // optional string objName = 6;
  if (has_objname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->objname().data(), this->objname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->objname(), output);
  }

  // optional int64 objInst = 7;
  if (has_objinst()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->objinst(), output);
  }

  // optional .rina.cdap.impl.googleprotobuf.objVal_t objValue = 8;
  if (has_objvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->objvalue(), output);
  }

  // optional int32 result = 9 [default = 0];
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->result(), output);
  }

  // optional int32 scope = 10;
  if (has_scope()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->scope(), output);
  }

  // optional bytes filter = 11;
  if (has_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      11, this->filter(), output);
  }

  // optional .rina.cdap.impl.googleprotobuf.authTypes_t authMech = 17;
  if (has_authmech()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      17, this->authmech(), output);
  }

  // optional .rina.cdap.impl.googleprotobuf.authValue_t authValue = 18;
  if (has_authvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->authvalue(), output);
  }

  // optional string destAEInst = 19;
  if (has_destaeinst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destaeinst().data(), this->destaeinst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->destaeinst(), output);
  }

  // optional string destAEName = 20;
  if (has_destaename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destaename().data(), this->destaename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->destaename(), output);
  }

  // optional string destApInst = 21;
  if (has_destapinst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destapinst().data(), this->destapinst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      21, this->destapinst(), output);
  }

  // optional string destApName = 22;
  if (has_destapname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destapname().data(), this->destapname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      22, this->destapname(), output);
  }

  // optional string srcAEInst = 23;
  if (has_srcaeinst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->srcaeinst().data(), this->srcaeinst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->srcaeinst(), output);
  }

  // optional string srcAEName = 24;
  if (has_srcaename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->srcaename().data(), this->srcaename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      24, this->srcaename(), output);
  }

  // optional string srcApInst = 25;
  if (has_srcapinst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->srcapinst().data(), this->srcapinst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->srcapinst(), output);
  }

  // optional string srcApName = 26;
  if (has_srcapname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->srcapname().data(), this->srcapname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->srcapname(), output);
  }

  // optional string resultReason = 27;
  if (has_resultreason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->resultreason().data(), this->resultreason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      27, this->resultreason(), output);
  }

  // optional int64 version = 28;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(28, this->version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CDAPMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 absSyntax = 1;
  if (has_abssyntax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->abssyntax(), target);
  }

  // required .rina.cdap.impl.googleprotobuf.opCode_t opCode = 2;
  if (has_opcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->opcode(), target);
  }

  // optional int32 invokeID = 3;
  if (has_invokeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->invokeid(), target);
  }

  // optional .rina.cdap.impl.googleprotobuf.flagValues_t flags = 4;
  if (has_flags()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->flags(), target);
  }

  // optional string objClass = 5;
  if (has_objclass()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->objclass().data(), this->objclass().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->objclass(), target);
  }

  // optional string objName = 6;
  if (has_objname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->objname().data(), this->objname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->objname(), target);
  }

  // optional int64 objInst = 7;
  if (has_objinst()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->objinst(), target);
  }

  // optional .rina.cdap.impl.googleprotobuf.objVal_t objValue = 8;
  if (has_objvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->objvalue(), target);
  }

  // optional int32 result = 9 [default = 0];
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->result(), target);
  }

  // optional int32 scope = 10;
  if (has_scope()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->scope(), target);
  }

  // optional bytes filter = 11;
  if (has_filter()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->filter(), target);
  }

  // optional .rina.cdap.impl.googleprotobuf.authTypes_t authMech = 17;
  if (has_authmech()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      17, this->authmech(), target);
  }

  // optional .rina.cdap.impl.googleprotobuf.authValue_t authValue = 18;
  if (has_authvalue()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->authvalue(), target);
  }

  // optional string destAEInst = 19;
  if (has_destaeinst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destaeinst().data(), this->destaeinst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->destaeinst(), target);
  }

  // optional string destAEName = 20;
  if (has_destaename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destaename().data(), this->destaename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->destaename(), target);
  }

  // optional string destApInst = 21;
  if (has_destapinst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destapinst().data(), this->destapinst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->destapinst(), target);
  }

  // optional string destApName = 22;
  if (has_destapname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destapname().data(), this->destapname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->destapname(), target);
  }

  // optional string srcAEInst = 23;
  if (has_srcaeinst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->srcaeinst().data(), this->srcaeinst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->srcaeinst(), target);
  }

  // optional string srcAEName = 24;
  if (has_srcaename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->srcaename().data(), this->srcaename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->srcaename(), target);
  }

  // optional string srcApInst = 25;
  if (has_srcapinst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->srcapinst().data(), this->srcapinst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->srcapinst(), target);
  }

  // optional string srcApName = 26;
  if (has_srcapname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->srcapname().data(), this->srcapname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->srcapname(), target);
  }

  // optional string resultReason = 27;
  if (has_resultreason()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->resultreason().data(), this->resultreason().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->resultreason(), target);
  }

  // optional int64 version = 28;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(28, this->version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CDAPMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 absSyntax = 1;
    if (has_abssyntax()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->abssyntax());
    }

    // required .rina.cdap.impl.googleprotobuf.opCode_t opCode = 2;
    if (has_opcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->opcode());
    }

    // optional int32 invokeID = 3;
    if (has_invokeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->invokeid());
    }

    // optional .rina.cdap.impl.googleprotobuf.flagValues_t flags = 4;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->flags());
    }

    // optional string objClass = 5;
    if (has_objclass()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->objclass());
    }

    // optional string objName = 6;
    if (has_objname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->objname());
    }

    // optional int64 objInst = 7;
    if (has_objinst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->objinst());
    }

    // optional .rina.cdap.impl.googleprotobuf.objVal_t objValue = 8;
    if (has_objvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->objvalue());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 result = 9 [default = 0];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result());
    }

    // optional int32 scope = 10;
    if (has_scope()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scope());
    }

    // optional bytes filter = 11;
    if (has_filter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->filter());
    }

    // optional .rina.cdap.impl.googleprotobuf.authTypes_t authMech = 17;
    if (has_authmech()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->authmech());
    }

    // optional .rina.cdap.impl.googleprotobuf.authValue_t authValue = 18;
    if (has_authvalue()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->authvalue());
    }

    // optional string destAEInst = 19;
    if (has_destaeinst()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destaeinst());
    }

    // optional string destAEName = 20;
    if (has_destaename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destaename());
    }

    // optional string destApInst = 21;
    if (has_destapinst()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destapinst());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional string destApName = 22;
    if (has_destapname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destapname());
    }

    // optional string srcAEInst = 23;
    if (has_srcaeinst()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srcaeinst());
    }

    // optional string srcAEName = 24;
    if (has_srcaename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srcaename());
    }

    // optional string srcApInst = 25;
    if (has_srcapinst()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srcapinst());
    }

    // optional string srcApName = 26;
    if (has_srcapname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srcapname());
    }

    // optional string resultReason = 27;
    if (has_resultreason()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resultreason());
    }

    // optional int64 version = 28;
    if (has_version()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->version());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CDAPMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CDAPMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CDAPMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CDAPMessage::MergeFrom(const CDAPMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_abssyntax()) {
      set_abssyntax(from.abssyntax());
    }
    if (from.has_opcode()) {
      set_opcode(from.opcode());
    }
    if (from.has_invokeid()) {
      set_invokeid(from.invokeid());
    }
    if (from.has_flags()) {
      set_flags(from.flags());
    }
    if (from.has_objclass()) {
      set_objclass(from.objclass());
    }
    if (from.has_objname()) {
      set_objname(from.objname());
    }
    if (from.has_objinst()) {
      set_objinst(from.objinst());
    }
    if (from.has_objvalue()) {
      mutable_objvalue()->::rina::cdap::impl::googleprotobuf::objVal_t::MergeFrom(from.objvalue());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_result()) {
      set_result(from.result());
    }
    if (from.has_scope()) {
      set_scope(from.scope());
    }
    if (from.has_filter()) {
      set_filter(from.filter());
    }
    if (from.has_authmech()) {
      set_authmech(from.authmech());
    }
    if (from.has_authvalue()) {
      mutable_authvalue()->::rina::cdap::impl::googleprotobuf::authValue_t::MergeFrom(from.authvalue());
    }
    if (from.has_destaeinst()) {
      set_destaeinst(from.destaeinst());
    }
    if (from.has_destaename()) {
      set_destaename(from.destaename());
    }
    if (from.has_destapinst()) {
      set_destapinst(from.destapinst());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_destapname()) {
      set_destapname(from.destapname());
    }
    if (from.has_srcaeinst()) {
      set_srcaeinst(from.srcaeinst());
    }
    if (from.has_srcaename()) {
      set_srcaename(from.srcaename());
    }
    if (from.has_srcapinst()) {
      set_srcapinst(from.srcapinst());
    }
    if (from.has_srcapname()) {
      set_srcapname(from.srcapname());
    }
    if (from.has_resultreason()) {
      set_resultreason(from.resultreason());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CDAPMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDAPMessage::CopyFrom(const CDAPMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDAPMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void CDAPMessage::Swap(CDAPMessage* other) {
  if (other != this) {
    std::swap(abssyntax_, other->abssyntax_);
    std::swap(opcode_, other->opcode_);
    std::swap(invokeid_, other->invokeid_);
    std::swap(flags_, other->flags_);
    std::swap(objclass_, other->objclass_);
    std::swap(objname_, other->objname_);
    std::swap(objinst_, other->objinst_);
    std::swap(objvalue_, other->objvalue_);
    std::swap(result_, other->result_);
    std::swap(scope_, other->scope_);
    std::swap(filter_, other->filter_);
    std::swap(authmech_, other->authmech_);
    std::swap(authvalue_, other->authvalue_);
    std::swap(destaeinst_, other->destaeinst_);
    std::swap(destaename_, other->destaename_);
    std::swap(destapinst_, other->destapinst_);
    std::swap(destapname_, other->destapname_);
    std::swap(srcaeinst_, other->srcaeinst_);
    std::swap(srcaename_, other->srcaename_);
    std::swap(srcapinst_, other->srcapinst_);
    std::swap(srcapname_, other->srcapname_);
    std::swap(resultreason_, other->resultreason_);
    std::swap(version_, other->version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CDAPMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CDAPMessage_descriptor_;
  metadata.reflection = CDAPMessage_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace googleprotobuf
}  // namespace impl
}  // namespace cdap
}  // namespace rina

// @@protoc_insertion_point(global_scope)
